Closure converted module:
scilla_version 0

fundef (_fundef_0 : Message -> List (Message)) ((msg : Message) : Message)
environment: ()
body:
  (_nil_msg_2 : List (Message)) = Nil { Message }
  (_retval_1 : List (Message)) = Cons { Message }(msg : Message) (_nil_msg_2 : List (Message))
  ret (_retval_1 : List (Message))

library:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) = []
  (list_foldl : forall 'A. forall 'B. ('B -> 'A -> 'B) -> 'B -> List ('A) -> 'B) = []
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) = []
  (nat_foldk : forall 'T. ('T -> Nat -> ('T -> 'T) -> 'T) -> 'T -> Nat -> 'T) = []
  (nat_fold : forall 'T. ('T -> Nat -> 'T) -> 'T -> Nat -> 'T) = []
  (one_msg : Message -> List (Message)) = [(_fundef_0 : Message -> List (Message))]
  (not_owner_code : Int32) = (Int32 1)
  (set_hello_code : Int32) = (Int32 2)

contract HelloWorld

((owner : ByStr20) : ByStr20)

(welcome_msg : String) : String
  (welcome_msg : String) = (String "")
transition setHello ((msg : String) : String)
  (is_owner : Bool) = eq (owner : ByStr20) (_sender : ByStr20)
  match (is_owner : Bool) with
  | False =>
    (e : Event) = { _eventname : (String "setHello()");code : (not_owner_code : Int32) }
    event (e : Event)
  | True =>
    (welcome_msg : String) := (msg : String)
    (e : Event) = { _eventname : (String "setHello()");code : (set_hello_code : Int32) }
    event (e : Event)
transition getHello ()
  (r : String) <- (welcome_msg : String)
  (e : Event) = { _eventname : (String "getHello()");msg : (r : String) }
  event (e : Event)
transition multipleMsgs ()
  (msg1 : Message) = { _tag : (String "");_recipient : (_sender : ByStr20);_amount : (Uint128 0) }
  (msg2 : Message) = { _tag : (String "");_recipient : (_sender : ByStr20);_amount : (Uint128 0) }
  (msgs1 : List (Message)) = (one_msg : Message -> List (Message)) (msg1 : Message)
  (msgs2 : List (Message)) = Cons { Message }(msg2 : Message) (msgs1 : List (Message))
  send (msgs2 : List (Message))
transition contrAddr ()
  (msg1 : Event) = { _eventname : (String "ContractAddress");addr : (_this_address : ByStr20) }
  event (msg1 : Event)
LLVM module:
; ModuleID = 'HelloWorld'
source_filename = "HelloWorld"

{ "warnings": [], "gas_remaining": "4001350" }
