Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (Prelude,1,1) with type: List (ByStr20)
Instantiating at (Prelude,1,1) with type: Option (ByStr20)
Instantiating at (Prelude,1,1) with type: ByStr20
Instantiating at (../src/stdlib/ListUtils.scillib,34,3) with type: List (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,34,3) with type: Option (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,34,3) with type: ByStr20
Instantiating at (../src/stdlib/ListUtils.scillib,220,3) with type: List (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,220,3) with type: Option (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,220,3) with type: ByStr20
Instantiating at (../src/stdlib/ListUtils.scillib,237,3) with type: List (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,237,3) with type: Option (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,237,3) with type: ByStr20
Instantiating at (../src/stdlib/ListUtils.scillib,248,3) with type: List (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,248,3) with type: Option (ByStr20)
Instantiating at (../src/stdlib/ListUtils.scillib,248,3) with type: ByStr20
Closure converted module:
scilla_version 0

fundef ($fundef_393 : () -> forall 'B. (List (ByStr20) -> 'B -> 'B) -> 'B -> List (List (ByStr20)) -> 'B) ()
environment: ()
body:
  ($retval_394 : forall 'B. (List (ByStr20) -> 'B -> 'B) -> 'B -> List (List (ByStr20)) -> 'B) = [List (ByStr20) -> ($fundef_395 : () -> (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)); Option (ByStr20) -> ($fundef_409 : () -> (List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)); ByStr20 -> ($fundef_423 : () -> (List (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_394 : forall 'B. (List (ByStr20) -> 'B -> 'B) -> 'B -> List (List (ByStr20)) -> 'B)

fundef ($fundef_395 : () -> (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_396 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) = [($fundef_397 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_396 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_397 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_399
  [$fundef_399]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  ($retval_398 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) = [($fundef_399 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_398 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_399 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_399]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_401
  [$fundef_401]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_401]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
  ($retval_400 : List (List (ByStr20)) -> List (ByStr20)) = [($fundef_401 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_400 : List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_401 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_401]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_401]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_403
  [$fundef_403]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_403]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
  [$fundef_403]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_402 : List (List (ByStr20)) -> List (ByStr20)) = [($fundef_403 : List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_402 : List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_403 : List (List (ByStr20)) -> List (ByStr20)) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_403]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_403]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_403]((z : List (ByStr20)))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    ($g_405 : List (List (ByStr20)) -> List (ByStr20)) = (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) (z : List (ByStr20))
    ($g_406 : List (ByStr20)) = ($g_405 : List (List (ByStr20)) -> List (ByStr20)) (t : List (List (ByStr20)))
    (res : List (ByStr20)) = ($g_406 : List (ByStr20))
    ($f_407 : List (ByStr20) -> List (ByStr20)) = (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (h : List (ByStr20))
    ($f_408 : List (ByStr20)) = ($f_407 : List (ByStr20) -> List (ByStr20)) (res : List (ByStr20))
    ($retval_404 : List (ByStr20)) = ($f_408 : List (ByStr20))
  | Nil =>
    ($retval_404 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_404 : List (ByStr20))

fundef ($fundef_409 : () -> (List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_410 : (List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_411 : (List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_410 : (List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_411 : (List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_413
  [$fundef_413]((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  ($retval_412 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_413 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_412 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_413 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_413]((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_415
  [$fundef_415]((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_415]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
  ($retval_414 : List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_415 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_414 : List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_415 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_415]((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_415]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_417
  [$fundef_417]((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_417]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
  [$fundef_417]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_416 : List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_417 : List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_416 : List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_417 : List (List (ByStr20)) -> Option (ByStr20)) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_417]((f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_417]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_417]((z : Option (ByStr20)))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    ($g_419 : List (List (ByStr20)) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) (z : Option (ByStr20))
    ($g_420 : Option (ByStr20)) = ($g_419 : List (List (ByStr20)) -> Option (ByStr20)) (t : List (List (ByStr20)))
    (res : Option (ByStr20)) = ($g_420 : Option (ByStr20))
    ($f_421 : Option (ByStr20) -> Option (ByStr20)) = (f : List (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) (h : List (ByStr20))
    ($f_422 : Option (ByStr20)) = ($f_421 : Option (ByStr20) -> Option (ByStr20)) (res : Option (ByStr20))
    ($retval_418 : Option (ByStr20)) = ($f_422 : Option (ByStr20))
  | Nil =>
    ($retval_418 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_418 : Option (ByStr20))

fundef ($fundef_423 : () -> (List (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) ()
environment: ()
body:
  ($retval_424 : (List (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) = [($fundef_425 : (List (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_424 : (List (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)

fundef ($fundef_425 : (List (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) ((f : List (ByStr20) -> ByStr20 -> ByStr20) : List (ByStr20) -> ByStr20 -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_427
  [$fundef_427]((f : List (ByStr20) -> ByStr20 -> ByStr20)) <- (f : List (ByStr20) -> ByStr20 -> ByStr20)
  ($retval_426 : ByStr20 -> List (List (ByStr20)) -> ByStr20) = [($fundef_427 : ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_426 : ByStr20 -> List (List (ByStr20)) -> ByStr20)

fundef ($fundef_427 : ByStr20 -> List (List (ByStr20)) -> ByStr20) ((g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20)
environment: ((f : List (ByStr20) -> ByStr20 -> ByStr20) : List (ByStr20) -> ByStr20 -> ByStr20)
body:
  (f : List (ByStr20) -> ByStr20 -> ByStr20) <- [$fundef_427]((f : List (ByStr20) -> ByStr20 -> ByStr20))
  allocate_closure_env $fundef_429
  [$fundef_429]((f : List (ByStr20) -> ByStr20 -> ByStr20)) <- (f : List (ByStr20) -> ByStr20 -> ByStr20)
  [$fundef_429]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
  ($retval_428 : List (List (ByStr20)) -> ByStr20) = [($fundef_429 : ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_428 : List (List (ByStr20)) -> ByStr20)

fundef ($fundef_429 : ByStr20 -> List (List (ByStr20)) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : List (ByStr20) -> ByStr20 -> ByStr20) : List (ByStr20) -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20)
body:
  (f : List (ByStr20) -> ByStr20 -> ByStr20) <- [$fundef_429]((f : List (ByStr20) -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_429]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  allocate_closure_env $fundef_431
  [$fundef_431]((f : List (ByStr20) -> ByStr20 -> ByStr20)) <- (f : List (ByStr20) -> ByStr20 -> ByStr20)
  [$fundef_431]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
  [$fundef_431]((z : ByStr20)) <- (z : ByStr20)
  ($retval_430 : List (List (ByStr20)) -> ByStr20) = [($fundef_431 : List (List (ByStr20)) -> ByStr20)]
  ret ($retval_430 : List (List (ByStr20)) -> ByStr20)

fundef ($fundef_431 : List (List (ByStr20)) -> ByStr20) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : List (ByStr20) -> ByStr20 -> ByStr20) : List (ByStr20) -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : List (ByStr20) -> ByStr20 -> ByStr20) <- [$fundef_431]((f : List (ByStr20) -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_431]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  (z : ByStr20) <- [$fundef_431]((z : ByStr20))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    ($g_433 : List (List (ByStr20)) -> ByStr20) = (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) (z : ByStr20)
    ($g_434 : ByStr20) = ($g_433 : List (List (ByStr20)) -> ByStr20) (t : List (List (ByStr20)))
    (res : ByStr20) = ($g_434 : ByStr20)
    ($f_435 : ByStr20 -> ByStr20) = (f : List (ByStr20) -> ByStr20 -> ByStr20) (h : List (ByStr20))
    ($f_436 : ByStr20) = ($f_435 : ByStr20 -> ByStr20) (res : ByStr20)
    ($retval_432 : ByStr20) = ($f_436 : ByStr20)
  | Nil =>
    ($retval_432 : ByStr20) = (z : ByStr20)
  ret ($retval_432 : ByStr20)

fundef ($fundef_437 : () -> forall 'B. (Option (ByStr20) -> 'B -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B) ()
environment: ()
body:
  ($retval_438 : forall 'B. (Option (ByStr20) -> 'B -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B) = [List (ByStr20) -> ($fundef_439 : () -> (Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)); Option (ByStr20) -> ($fundef_453 : () -> (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)); ByStr20 -> ($fundef_467 : () -> (Option (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_438 : forall 'B. (Option (ByStr20) -> 'B -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B)

fundef ($fundef_439 : () -> (Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_440 : (Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_441 : (Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_440 : (Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_441 : (Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_443
  [$fundef_443]((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))
  ($retval_442 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_443 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_442 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_443 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_443]((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_445
  [$fundef_445]((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_445]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
  ($retval_444 : List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_445 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_444 : List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_445 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_445]((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_445]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_447
  [$fundef_447]((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_447]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
  [$fundef_447]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_446 : List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_447 : List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_446 : List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_447 : List (Option (ByStr20)) -> List (ByStr20)) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_447]((f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_447]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_447]((z : List (ByStr20)))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    ($g_449 : List (Option (ByStr20)) -> List (ByStr20)) = (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) (z : List (ByStr20))
    ($g_450 : List (ByStr20)) = ($g_449 : List (Option (ByStr20)) -> List (ByStr20)) (t : List (Option (ByStr20)))
    (res : List (ByStr20)) = ($g_450 : List (ByStr20))
    ($f_451 : List (ByStr20) -> List (ByStr20)) = (f : Option (ByStr20) -> List (ByStr20) -> List (ByStr20)) (h : Option (ByStr20))
    ($f_452 : List (ByStr20)) = ($f_451 : List (ByStr20) -> List (ByStr20)) (res : List (ByStr20))
    ($retval_448 : List (ByStr20)) = ($f_452 : List (ByStr20))
  | Nil =>
    ($retval_448 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_448 : List (ByStr20))

fundef ($fundef_453 : () -> (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_454 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_455 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_454 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_455 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_457
  [$fundef_457]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  ($retval_456 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_457 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_456 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_457 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_457]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_459
  [$fundef_459]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_459]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
  ($retval_458 : List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_459 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_458 : List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_459 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_459]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_459]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_461
  [$fundef_461]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_461]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
  [$fundef_461]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_460 : List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_461 : List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_460 : List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_461 : List (Option (ByStr20)) -> Option (ByStr20)) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_461]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_461]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_461]((z : Option (ByStr20)))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    ($g_463 : List (Option (ByStr20)) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) (z : Option (ByStr20))
    ($g_464 : Option (ByStr20)) = ($g_463 : List (Option (ByStr20)) -> Option (ByStr20)) (t : List (Option (ByStr20)))
    (res : Option (ByStr20)) = ($g_464 : Option (ByStr20))
    ($f_465 : Option (ByStr20) -> Option (ByStr20)) = (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) (h : Option (ByStr20))
    ($f_466 : Option (ByStr20)) = ($f_465 : Option (ByStr20) -> Option (ByStr20)) (res : Option (ByStr20))
    ($retval_462 : Option (ByStr20)) = ($f_466 : Option (ByStr20))
  | Nil =>
    ($retval_462 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_462 : Option (ByStr20))

fundef ($fundef_467 : () -> (Option (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) ()
environment: ()
body:
  ($retval_468 : (Option (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) = [($fundef_469 : (Option (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_468 : (Option (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_469 : (Option (ByStr20) -> ByStr20 -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((f : Option (ByStr20) -> ByStr20 -> ByStr20) : Option (ByStr20) -> ByStr20 -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_471
  [$fundef_471]((f : Option (ByStr20) -> ByStr20 -> ByStr20)) <- (f : Option (ByStr20) -> ByStr20 -> ByStr20)
  ($retval_470 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) = [($fundef_471 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_470 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_471 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
environment: ((f : Option (ByStr20) -> ByStr20 -> ByStr20) : Option (ByStr20) -> ByStr20 -> ByStr20)
body:
  (f : Option (ByStr20) -> ByStr20 -> ByStr20) <- [$fundef_471]((f : Option (ByStr20) -> ByStr20 -> ByStr20))
  allocate_closure_env $fundef_473
  [$fundef_473]((f : Option (ByStr20) -> ByStr20 -> ByStr20)) <- (f : Option (ByStr20) -> ByStr20 -> ByStr20)
  [$fundef_473]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
  ($retval_472 : List (Option (ByStr20)) -> ByStr20) = [($fundef_473 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_472 : List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_473 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : Option (ByStr20) -> ByStr20 -> ByStr20) : Option (ByStr20) -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
body:
  (f : Option (ByStr20) -> ByStr20 -> ByStr20) <- [$fundef_473]((f : Option (ByStr20) -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_473]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  allocate_closure_env $fundef_475
  [$fundef_475]((f : Option (ByStr20) -> ByStr20 -> ByStr20)) <- (f : Option (ByStr20) -> ByStr20 -> ByStr20)
  [$fundef_475]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
  [$fundef_475]((z : ByStr20)) <- (z : ByStr20)
  ($retval_474 : List (Option (ByStr20)) -> ByStr20) = [($fundef_475 : List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_474 : List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_475 : List (Option (ByStr20)) -> ByStr20) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : Option (ByStr20) -> ByStr20 -> ByStr20) : Option (ByStr20) -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : Option (ByStr20) -> ByStr20 -> ByStr20) <- [$fundef_475]((f : Option (ByStr20) -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_475]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  (z : ByStr20) <- [$fundef_475]((z : ByStr20))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    ($g_477 : List (Option (ByStr20)) -> ByStr20) = (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) (z : ByStr20)
    ($g_478 : ByStr20) = ($g_477 : List (Option (ByStr20)) -> ByStr20) (t : List (Option (ByStr20)))
    (res : ByStr20) = ($g_478 : ByStr20)
    ($f_479 : ByStr20 -> ByStr20) = (f : Option (ByStr20) -> ByStr20 -> ByStr20) (h : Option (ByStr20))
    ($f_480 : ByStr20) = ($f_479 : ByStr20 -> ByStr20) (res : ByStr20)
    ($retval_476 : ByStr20) = ($f_480 : ByStr20)
  | Nil =>
    ($retval_476 : ByStr20) = (z : ByStr20)
  ret ($retval_476 : ByStr20)

fundef ($fundef_481 : () -> forall 'B. (ByStr20 -> 'B -> 'B) -> 'B -> List (ByStr20) -> 'B) ()
environment: ()
body:
  ($retval_482 : forall 'B. (ByStr20 -> 'B -> 'B) -> 'B -> List (ByStr20) -> 'B) = [List (ByStr20) -> ($fundef_483 : () -> (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)); Option (ByStr20) -> ($fundef_497 : () -> (ByStr20 -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)); ByStr20 -> ($fundef_511 : () -> (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_482 : forall 'B. (ByStr20 -> 'B -> 'B) -> 'B -> List (ByStr20) -> 'B)

fundef ($fundef_483 : () -> (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_484 : (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = [($fundef_485 : (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_484 : (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_485 : (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((f : ByStr20 -> List (ByStr20) -> List (ByStr20)) : ByStr20 -> List (ByStr20) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_487
  [$fundef_487]((f : ByStr20 -> List (ByStr20) -> List (ByStr20))) <- (f : ByStr20 -> List (ByStr20) -> List (ByStr20))
  ($retval_486 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = [($fundef_487 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_486 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_487 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
environment: ((f : ByStr20 -> List (ByStr20) -> List (ByStr20)) : ByStr20 -> List (ByStr20) -> List (ByStr20))
body:
  (f : ByStr20 -> List (ByStr20) -> List (ByStr20)) <- [$fundef_487]((f : ByStr20 -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_489
  [$fundef_489]((f : ByStr20 -> List (ByStr20) -> List (ByStr20))) <- (f : ByStr20 -> List (ByStr20) -> List (ByStr20))
  [$fundef_489]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  ($retval_488 : List (ByStr20) -> List (ByStr20)) = [($fundef_489 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_488 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_489 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> List (ByStr20) -> List (ByStr20)) : ByStr20 -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
body:
  (f : ByStr20 -> List (ByStr20) -> List (ByStr20)) <- [$fundef_489]((f : ByStr20 -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_489]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_491
  [$fundef_491]((f : ByStr20 -> List (ByStr20) -> List (ByStr20))) <- (f : ByStr20 -> List (ByStr20) -> List (ByStr20))
  [$fundef_491]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_491]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_490 : List (ByStr20) -> List (ByStr20)) = [($fundef_491 : List (ByStr20) -> List (ByStr20))]
  ret ($retval_490 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_491 : List (ByStr20) -> List (ByStr20)) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> List (ByStr20) -> List (ByStr20)) : ByStr20 -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : ByStr20 -> List (ByStr20) -> List (ByStr20)) <- [$fundef_491]((f : ByStr20 -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_491]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_491]((z : List (ByStr20)))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    ($g_493 : List (ByStr20) -> List (ByStr20)) = (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (z : List (ByStr20))
    ($g_494 : List (ByStr20)) = ($g_493 : List (ByStr20) -> List (ByStr20)) (t : List (ByStr20))
    (res : List (ByStr20)) = ($g_494 : List (ByStr20))
    ($f_495 : List (ByStr20) -> List (ByStr20)) = (f : ByStr20 -> List (ByStr20) -> List (ByStr20)) (h : ByStr20)
    ($f_496 : List (ByStr20)) = ($f_495 : List (ByStr20) -> List (ByStr20)) (res : List (ByStr20))
    ($retval_492 : List (ByStr20)) = ($f_496 : List (ByStr20))
  | Nil =>
    ($retval_492 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_492 : List (ByStr20))

fundef ($fundef_497 : () -> (ByStr20 -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_498 : (ByStr20 -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_499 : (ByStr20 -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_498 : (ByStr20 -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_499 : (ByStr20 -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) : ByStr20 -> Option (ByStr20) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_501
  [$fundef_501]((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20))) <- (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20))
  ($retval_500 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_501 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_500 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_501 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
environment: ((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) : ByStr20 -> Option (ByStr20) -> Option (ByStr20))
body:
  (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_501]((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_503
  [$fundef_503]((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20))) <- (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_503]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  ($retval_502 : List (ByStr20) -> Option (ByStr20)) = [($fundef_503 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_502 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_503 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) : ByStr20 -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
body:
  (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_503]((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_503]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_505
  [$fundef_505]((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20))) <- (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_505]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  [$fundef_505]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_504 : List (ByStr20) -> Option (ByStr20)) = [($fundef_505 : List (ByStr20) -> Option (ByStr20))]
  ret ($retval_504 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_505 : List (ByStr20) -> Option (ByStr20)) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) : ByStr20 -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_505]((f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_505]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_505]((z : Option (ByStr20)))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    ($g_507 : List (ByStr20) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) (z : Option (ByStr20))
    ($g_508 : Option (ByStr20)) = ($g_507 : List (ByStr20) -> Option (ByStr20)) (t : List (ByStr20))
    (res : Option (ByStr20)) = ($g_508 : Option (ByStr20))
    ($f_509 : Option (ByStr20) -> Option (ByStr20)) = (f : ByStr20 -> Option (ByStr20) -> Option (ByStr20)) (h : ByStr20)
    ($f_510 : Option (ByStr20)) = ($f_509 : Option (ByStr20) -> Option (ByStr20)) (res : Option (ByStr20))
    ($retval_506 : Option (ByStr20)) = ($f_510 : Option (ByStr20))
  | Nil =>
    ($retval_506 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_506 : Option (ByStr20))

fundef ($fundef_511 : () -> (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) ()
environment: ()
body:
  ($retval_512 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) = [($fundef_513 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_512 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)

fundef ($fundef_513 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_515
  [$fundef_515]((f : ByStr20 -> ByStr20 -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> ByStr20)
  ($retval_514 : ByStr20 -> List (ByStr20) -> ByStr20) = [($fundef_515 : ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_514 : ByStr20 -> List (ByStr20) -> ByStr20)

fundef ($fundef_515 : ByStr20 -> List (ByStr20) -> ByStr20) ((g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> ByStr20) <- [$fundef_515]((f : ByStr20 -> ByStr20 -> ByStr20))
  allocate_closure_env $fundef_517
  [$fundef_517]((f : ByStr20 -> ByStr20 -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> ByStr20)
  [$fundef_517]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
  ($retval_516 : List (ByStr20) -> ByStr20) = [($fundef_517 : ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_516 : List (ByStr20) -> ByStr20)

fundef ($fundef_517 : ByStr20 -> List (ByStr20) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> ByStr20) <- [$fundef_517]((f : ByStr20 -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_517]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  allocate_closure_env $fundef_519
  [$fundef_519]((f : ByStr20 -> ByStr20 -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> ByStr20)
  [$fundef_519]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
  [$fundef_519]((z : ByStr20)) <- (z : ByStr20)
  ($retval_518 : List (ByStr20) -> ByStr20) = [($fundef_519 : List (ByStr20) -> ByStr20)]
  ret ($retval_518 : List (ByStr20) -> ByStr20)

fundef ($fundef_519 : List (ByStr20) -> ByStr20) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> ByStr20) <- [$fundef_519]((f : ByStr20 -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_519]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  (z : ByStr20) <- [$fundef_519]((z : ByStr20))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    ($g_521 : List (ByStr20) -> ByStr20) = (g : ByStr20 -> List (ByStr20) -> ByStr20) (z : ByStr20)
    ($g_522 : ByStr20) = ($g_521 : List (ByStr20) -> ByStr20) (t : List (ByStr20))
    (res : ByStr20) = ($g_522 : ByStr20)
    ($f_523 : ByStr20 -> ByStr20) = (f : ByStr20 -> ByStr20 -> ByStr20) (h : ByStr20)
    ($f_524 : ByStr20) = ($f_523 : ByStr20 -> ByStr20) (res : ByStr20)
    ($retval_520 : ByStr20) = ($f_524 : ByStr20)
  | Nil =>
    ($retval_520 : ByStr20) = (z : ByStr20)
  ret ($retval_520 : ByStr20)

fundef ($fundef_261 : () -> forall 'B. ('B -> List (ByStr20) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B) ()
environment: ()
body:
  ($retval_262 : forall 'B. ('B -> List (ByStr20) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B) = [List (ByStr20) -> ($fundef_263 : () -> (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)); Option (ByStr20) -> ($fundef_277 : () -> (Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)); ByStr20 -> ($fundef_291 : () -> (ByStr20 -> List (ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_262 : forall 'B. ('B -> List (ByStr20) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B)

fundef ($fundef_263 : () -> (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_264 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) = [($fundef_265 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_264 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_265 : (List (ByStr20) -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_267
  [$fundef_267]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  ($retval_266 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) = [($fundef_267 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_266 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_267 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_267]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_269
  [$fundef_269]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_269]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
  ($retval_268 : List (List (ByStr20)) -> List (ByStr20)) = [($fundef_269 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_268 : List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_269 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_269]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_269]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_271
  [$fundef_271]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_271]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
  [$fundef_271]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_270 : List (List (ByStr20)) -> List (ByStr20)) = [($fundef_271 : List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_270 : List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_271 : List (List (ByStr20)) -> List (ByStr20)) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_271]((f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_271]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_271]((z : List (ByStr20)))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    ($f_273 : List (ByStr20) -> List (ByStr20)) = (f : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (z : List (ByStr20))
    ($f_274 : List (ByStr20)) = ($f_273 : List (ByStr20) -> List (ByStr20)) (h : List (ByStr20))
    (res : List (ByStr20)) = ($f_274 : List (ByStr20))
    ($g_275 : List (List (ByStr20)) -> List (ByStr20)) = (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) (res : List (ByStr20))
    ($g_276 : List (ByStr20)) = ($g_275 : List (List (ByStr20)) -> List (ByStr20)) (t : List (List (ByStr20)))
    ($retval_272 : List (ByStr20)) = ($g_276 : List (ByStr20))
  | Nil =>
    ($retval_272 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_272 : List (ByStr20))

fundef ($fundef_277 : () -> (Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_278 : (Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_279 : (Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_278 : (Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_279 : (Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_281
  [$fundef_281]((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  ($retval_280 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_281 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_280 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_281 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_281]((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_283
  [$fundef_283]((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  [$fundef_283]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
  ($retval_282 : List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_283 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_282 : List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_283 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_283]((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_283]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_285
  [$fundef_285]((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  [$fundef_285]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
  [$fundef_285]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_284 : List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_285 : List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_284 : List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_285 : List (List (ByStr20)) -> Option (ByStr20)) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_285]((f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_285]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_285]((z : Option (ByStr20)))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    ($f_287 : List (ByStr20) -> Option (ByStr20)) = (f : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) (z : Option (ByStr20))
    ($f_288 : Option (ByStr20)) = ($f_287 : List (ByStr20) -> Option (ByStr20)) (h : List (ByStr20))
    (res : Option (ByStr20)) = ($f_288 : Option (ByStr20))
    ($g_289 : List (List (ByStr20)) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) (res : Option (ByStr20))
    ($g_290 : Option (ByStr20)) = ($g_289 : List (List (ByStr20)) -> Option (ByStr20)) (t : List (List (ByStr20)))
    ($retval_286 : Option (ByStr20)) = ($g_290 : Option (ByStr20))
  | Nil =>
    ($retval_286 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_286 : Option (ByStr20))

fundef ($fundef_291 : () -> (ByStr20 -> List (ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) ()
environment: ()
body:
  ($retval_292 : (ByStr20 -> List (ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) = [($fundef_293 : (ByStr20 -> List (ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_292 : (ByStr20 -> List (ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)

fundef ($fundef_293 : (ByStr20 -> List (ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) ((f : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_295
  [$fundef_295]((f : ByStr20 -> List (ByStr20) -> ByStr20)) <- (f : ByStr20 -> List (ByStr20) -> ByStr20)
  ($retval_294 : ByStr20 -> List (List (ByStr20)) -> ByStr20) = [($fundef_295 : ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_294 : ByStr20 -> List (List (ByStr20)) -> ByStr20)

fundef ($fundef_295 : ByStr20 -> List (List (ByStr20)) -> ByStr20) ((g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20)
environment: ((f : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_295]((f : ByStr20 -> List (ByStr20) -> ByStr20))
  allocate_closure_env $fundef_297
  [$fundef_297]((f : ByStr20 -> List (ByStr20) -> ByStr20)) <- (f : ByStr20 -> List (ByStr20) -> ByStr20)
  [$fundef_297]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
  ($retval_296 : List (List (ByStr20)) -> ByStr20) = [($fundef_297 : ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_296 : List (List (ByStr20)) -> ByStr20)

fundef ($fundef_297 : ByStr20 -> List (List (ByStr20)) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20 , (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20)
body:
  (f : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_297]((f : ByStr20 -> List (ByStr20) -> ByStr20))
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_297]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  allocate_closure_env $fundef_299
  [$fundef_299]((f : ByStr20 -> List (ByStr20) -> ByStr20)) <- (f : ByStr20 -> List (ByStr20) -> ByStr20)
  [$fundef_299]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
  [$fundef_299]((z : ByStr20)) <- (z : ByStr20)
  ($retval_298 : List (List (ByStr20)) -> ByStr20) = [($fundef_299 : List (List (ByStr20)) -> ByStr20)]
  ret ($retval_298 : List (List (ByStr20)) -> ByStr20)

fundef ($fundef_299 : List (List (ByStr20)) -> ByStr20) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20 , (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_299]((f : ByStr20 -> List (ByStr20) -> ByStr20))
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_299]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  (z : ByStr20) <- [$fundef_299]((z : ByStr20))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    ($f_301 : List (ByStr20) -> ByStr20) = (f : ByStr20 -> List (ByStr20) -> ByStr20) (z : ByStr20)
    ($f_302 : ByStr20) = ($f_301 : List (ByStr20) -> ByStr20) (h : List (ByStr20))
    (res : ByStr20) = ($f_302 : ByStr20)
    ($g_303 : List (List (ByStr20)) -> ByStr20) = (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) (res : ByStr20)
    ($g_304 : ByStr20) = ($g_303 : List (List (ByStr20)) -> ByStr20) (t : List (List (ByStr20)))
    ($retval_300 : ByStr20) = ($g_304 : ByStr20)
  | Nil =>
    ($retval_300 : ByStr20) = (z : ByStr20)
  ret ($retval_300 : ByStr20)

fundef ($fundef_305 : () -> forall 'B. ('B -> Option (ByStr20) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B) ()
environment: ()
body:
  ($retval_306 : forall 'B. ('B -> Option (ByStr20) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B) = [List (ByStr20) -> ($fundef_307 : () -> (List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)); Option (ByStr20) -> ($fundef_321 : () -> (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)); ByStr20 -> ($fundef_335 : () -> (ByStr20 -> Option (ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_306 : forall 'B. ('B -> Option (ByStr20) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B)

fundef ($fundef_307 : () -> (List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_308 : (List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_309 : (List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_308 : (List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_309 : (List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_311
  [$fundef_311]((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))
  ($retval_310 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_311 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_310 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_311 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) <- [$fundef_311]((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_313
  [$fundef_313]((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))
  [$fundef_313]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
  ($retval_312 : List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_313 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_312 : List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_313 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) <- [$fundef_313]((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_313]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_315
  [$fundef_315]((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20))
  [$fundef_315]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
  [$fundef_315]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_314 : List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_315 : List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_314 : List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_315 : List (Option (ByStr20)) -> List (ByStr20)) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> List (ByStr20) , (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) <- [$fundef_315]((f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)))
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_315]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_315]((z : List (ByStr20)))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    ($f_317 : Option (ByStr20) -> List (ByStr20)) = (f : List (ByStr20) -> Option (ByStr20) -> List (ByStr20)) (z : List (ByStr20))
    ($f_318 : List (ByStr20)) = ($f_317 : Option (ByStr20) -> List (ByStr20)) (h : Option (ByStr20))
    (res : List (ByStr20)) = ($f_318 : List (ByStr20))
    ($g_319 : List (Option (ByStr20)) -> List (ByStr20)) = (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) (res : List (ByStr20))
    ($g_320 : List (ByStr20)) = ($g_319 : List (Option (ByStr20)) -> List (ByStr20)) (t : List (Option (ByStr20)))
    ($retval_316 : List (ByStr20)) = ($g_320 : List (ByStr20))
  | Nil =>
    ($retval_316 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_316 : List (ByStr20))

fundef ($fundef_321 : () -> (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_322 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_323 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_322 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_323 : (Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_325
  [$fundef_325]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  ($retval_324 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_325 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_324 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_325 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_325]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_327
  [$fundef_327]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_327]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
  ($retval_326 : List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_327 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_326 : List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_327 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_327]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_327]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_329
  [$fundef_329]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20))
  [$fundef_329]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
  [$fundef_329]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_328 : List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_329 : List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_328 : List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_329 : List (Option (ByStr20)) -> Option (ByStr20)) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20) , (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) <- [$fundef_329]((f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_329]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_329]((z : Option (ByStr20)))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    ($f_331 : Option (ByStr20) -> Option (ByStr20)) = (f : Option (ByStr20) -> Option (ByStr20) -> Option (ByStr20)) (z : Option (ByStr20))
    ($f_332 : Option (ByStr20)) = ($f_331 : Option (ByStr20) -> Option (ByStr20)) (h : Option (ByStr20))
    (res : Option (ByStr20)) = ($f_332 : Option (ByStr20))
    ($g_333 : List (Option (ByStr20)) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) (res : Option (ByStr20))
    ($g_334 : Option (ByStr20)) = ($g_333 : List (Option (ByStr20)) -> Option (ByStr20)) (t : List (Option (ByStr20)))
    ($retval_330 : Option (ByStr20)) = ($g_334 : Option (ByStr20))
  | Nil =>
    ($retval_330 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_330 : Option (ByStr20))

fundef ($fundef_335 : () -> (ByStr20 -> Option (ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) ()
environment: ()
body:
  ($retval_336 : (ByStr20 -> Option (ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) = [($fundef_337 : (ByStr20 -> Option (ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_336 : (ByStr20 -> Option (ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_337 : (ByStr20 -> Option (ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((f : ByStr20 -> Option (ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_339
  [$fundef_339]((f : ByStr20 -> Option (ByStr20) -> ByStr20)) <- (f : ByStr20 -> Option (ByStr20) -> ByStr20)
  ($retval_338 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) = [($fundef_339 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_338 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_339 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
environment: ((f : ByStr20 -> Option (ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> Option (ByStr20) -> ByStr20) <- [$fundef_339]((f : ByStr20 -> Option (ByStr20) -> ByStr20))
  allocate_closure_env $fundef_341
  [$fundef_341]((f : ByStr20 -> Option (ByStr20) -> ByStr20)) <- (f : ByStr20 -> Option (ByStr20) -> ByStr20)
  [$fundef_341]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
  ($retval_340 : List (Option (ByStr20)) -> ByStr20) = [($fundef_341 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_340 : List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_341 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> Option (ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> ByStr20 , (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
body:
  (f : ByStr20 -> Option (ByStr20) -> ByStr20) <- [$fundef_341]((f : ByStr20 -> Option (ByStr20) -> ByStr20))
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_341]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  allocate_closure_env $fundef_343
  [$fundef_343]((f : ByStr20 -> Option (ByStr20) -> ByStr20)) <- (f : ByStr20 -> Option (ByStr20) -> ByStr20)
  [$fundef_343]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
  [$fundef_343]((z : ByStr20)) <- (z : ByStr20)
  ($retval_342 : List (Option (ByStr20)) -> ByStr20) = [($fundef_343 : List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_342 : List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_343 : List (Option (ByStr20)) -> ByStr20) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : ByStr20 -> Option (ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> ByStr20 , (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> Option (ByStr20) -> ByStr20) <- [$fundef_343]((f : ByStr20 -> Option (ByStr20) -> ByStr20))
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_343]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  (z : ByStr20) <- [$fundef_343]((z : ByStr20))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    ($f_345 : Option (ByStr20) -> ByStr20) = (f : ByStr20 -> Option (ByStr20) -> ByStr20) (z : ByStr20)
    ($f_346 : ByStr20) = ($f_345 : Option (ByStr20) -> ByStr20) (h : Option (ByStr20))
    (res : ByStr20) = ($f_346 : ByStr20)
    ($g_347 : List (Option (ByStr20)) -> ByStr20) = (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) (res : ByStr20)
    ($g_348 : ByStr20) = ($g_347 : List (Option (ByStr20)) -> ByStr20) (t : List (Option (ByStr20)))
    ($retval_344 : ByStr20) = ($g_348 : ByStr20)
  | Nil =>
    ($retval_344 : ByStr20) = (z : ByStr20)
  ret ($retval_344 : ByStr20)

fundef ($fundef_349 : () -> forall 'B. ('B -> ByStr20 -> 'B) -> 'B -> List (ByStr20) -> 'B) ()
environment: ()
body:
  ($retval_350 : forall 'B. ('B -> ByStr20 -> 'B) -> 'B -> List (ByStr20) -> 'B) = [List (ByStr20) -> ($fundef_351 : () -> (List (ByStr20) -> ByStr20 -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)); Option (ByStr20) -> ($fundef_365 : () -> (Option (ByStr20) -> ByStr20 -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)); ByStr20 -> ($fundef_379 : () -> (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_350 : forall 'B. ('B -> ByStr20 -> 'B) -> 'B -> List (ByStr20) -> 'B)

fundef ($fundef_351 : () -> (List (ByStr20) -> ByStr20 -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_352 : (List (ByStr20) -> ByStr20 -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = [($fundef_353 : (List (ByStr20) -> ByStr20 -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_352 : (List (ByStr20) -> ByStr20 -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_353 : (List (ByStr20) -> ByStr20 -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((f : List (ByStr20) -> ByStr20 -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_355
  [$fundef_355]((f : List (ByStr20) -> ByStr20 -> List (ByStr20))) <- (f : List (ByStr20) -> ByStr20 -> List (ByStr20))
  ($retval_354 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = [($fundef_355 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_354 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_355 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
environment: ((f : List (ByStr20) -> ByStr20 -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> List (ByStr20))
body:
  (f : List (ByStr20) -> ByStr20 -> List (ByStr20)) <- [$fundef_355]((f : List (ByStr20) -> ByStr20 -> List (ByStr20)))
  allocate_closure_env $fundef_357
  [$fundef_357]((f : List (ByStr20) -> ByStr20 -> List (ByStr20))) <- (f : List (ByStr20) -> ByStr20 -> List (ByStr20))
  [$fundef_357]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  ($retval_356 : List (ByStr20) -> List (ByStr20)) = [($fundef_357 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_356 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_357 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> ByStr20 -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> List (ByStr20) , (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
body:
  (f : List (ByStr20) -> ByStr20 -> List (ByStr20)) <- [$fundef_357]((f : List (ByStr20) -> ByStr20 -> List (ByStr20)))
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_357]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_359
  [$fundef_359]((f : List (ByStr20) -> ByStr20 -> List (ByStr20))) <- (f : List (ByStr20) -> ByStr20 -> List (ByStr20))
  [$fundef_359]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_359]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_358 : List (ByStr20) -> List (ByStr20)) = [($fundef_359 : List (ByStr20) -> List (ByStr20))]
  ret ($retval_358 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_359 : List (ByStr20) -> List (ByStr20)) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> ByStr20 -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> List (ByStr20) , (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> ByStr20 -> List (ByStr20)) <- [$fundef_359]((f : List (ByStr20) -> ByStr20 -> List (ByStr20)))
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_359]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_359]((z : List (ByStr20)))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    ($f_361 : ByStr20 -> List (ByStr20)) = (f : List (ByStr20) -> ByStr20 -> List (ByStr20)) (z : List (ByStr20))
    ($f_362 : List (ByStr20)) = ($f_361 : ByStr20 -> List (ByStr20)) (h : ByStr20)
    (res : List (ByStr20)) = ($f_362 : List (ByStr20))
    ($g_363 : List (ByStr20) -> List (ByStr20)) = (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (res : List (ByStr20))
    ($g_364 : List (ByStr20)) = ($g_363 : List (ByStr20) -> List (ByStr20)) (t : List (ByStr20))
    ($retval_360 : List (ByStr20)) = ($g_364 : List (ByStr20))
  | Nil =>
    ($retval_360 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_360 : List (ByStr20))

fundef ($fundef_365 : () -> (Option (ByStr20) -> ByStr20 -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_366 : (Option (ByStr20) -> ByStr20 -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_367 : (Option (ByStr20) -> ByStr20 -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_366 : (Option (ByStr20) -> ByStr20 -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_367 : (Option (ByStr20) -> ByStr20 -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_369
  [$fundef_369]((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20))) <- (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20))
  ($retval_368 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_369 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_368 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_369 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) <- [$fundef_369]((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)))
  allocate_closure_env $fundef_371
  [$fundef_371]((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20))) <- (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20))
  [$fundef_371]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  ($retval_370 : List (ByStr20) -> Option (ByStr20)) = [($fundef_371 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_370 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_371 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> Option (ByStr20) , (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) <- [$fundef_371]((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_371]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_373
  [$fundef_373]((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20))) <- (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20))
  [$fundef_373]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  [$fundef_373]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_372 : List (ByStr20) -> Option (ByStr20)) = [($fundef_373 : List (ByStr20) -> Option (ByStr20))]
  ret ($retval_372 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_373 : List (ByStr20) -> Option (ByStr20)) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> Option (ByStr20) , (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) <- [$fundef_373]((f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_373]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_373]((z : Option (ByStr20)))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    ($f_375 : ByStr20 -> Option (ByStr20)) = (f : Option (ByStr20) -> ByStr20 -> Option (ByStr20)) (z : Option (ByStr20))
    ($f_376 : Option (ByStr20)) = ($f_375 : ByStr20 -> Option (ByStr20)) (h : ByStr20)
    (res : Option (ByStr20)) = ($f_376 : Option (ByStr20))
    ($g_377 : List (ByStr20) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) (res : Option (ByStr20))
    ($g_378 : Option (ByStr20)) = ($g_377 : List (ByStr20) -> Option (ByStr20)) (t : List (ByStr20))
    ($retval_374 : Option (ByStr20)) = ($g_378 : Option (ByStr20))
  | Nil =>
    ($retval_374 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_374 : Option (ByStr20))

fundef ($fundef_379 : () -> (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) ()
environment: ()
body:
  ($retval_380 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) = [($fundef_381 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_380 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)

fundef ($fundef_381 : (ByStr20 -> ByStr20 -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_383
  [$fundef_383]((f : ByStr20 -> ByStr20 -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> ByStr20)
  ($retval_382 : ByStr20 -> List (ByStr20) -> ByStr20) = [($fundef_383 : ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_382 : ByStr20 -> List (ByStr20) -> ByStr20)

fundef ($fundef_383 : ByStr20 -> List (ByStr20) -> ByStr20) ((g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> ByStr20) <- [$fundef_383]((f : ByStr20 -> ByStr20 -> ByStr20))
  allocate_closure_env $fundef_385
  [$fundef_385]((f : ByStr20 -> ByStr20 -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> ByStr20)
  [$fundef_385]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
  ($retval_384 : List (ByStr20) -> ByStr20) = [($fundef_385 : ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_384 : List (ByStr20) -> ByStr20)

fundef ($fundef_385 : ByStr20 -> List (ByStr20) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> ByStr20) <- [$fundef_385]((f : ByStr20 -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_385]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  allocate_closure_env $fundef_387
  [$fundef_387]((f : ByStr20 -> ByStr20 -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> ByStr20)
  [$fundef_387]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
  [$fundef_387]((z : ByStr20)) <- (z : ByStr20)
  ($retval_386 : List (ByStr20) -> ByStr20) = [($fundef_387 : List (ByStr20) -> ByStr20)]
  ret ($retval_386 : List (ByStr20) -> ByStr20)

fundef ($fundef_387 : List (ByStr20) -> ByStr20) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> ByStr20 -> ByStr20) : ByStr20 -> ByStr20 -> ByStr20 , (g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> ByStr20) <- [$fundef_387]((f : ByStr20 -> ByStr20 -> ByStr20))
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_387]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  (z : ByStr20) <- [$fundef_387]((z : ByStr20))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    ($f_389 : ByStr20 -> ByStr20) = (f : ByStr20 -> ByStr20 -> ByStr20) (z : ByStr20)
    ($f_390 : ByStr20) = ($f_389 : ByStr20 -> ByStr20) (h : ByStr20)
    (res : ByStr20) = ($f_390 : ByStr20)
    ($g_391 : List (ByStr20) -> ByStr20) = (g : ByStr20 -> List (ByStr20) -> ByStr20) (res : ByStr20)
    ($g_392 : ByStr20) = ($g_391 : List (ByStr20) -> ByStr20) (t : List (ByStr20))
    ($retval_388 : ByStr20) = ($g_392 : ByStr20)
  | Nil =>
    ($retval_388 : ByStr20) = (z : ByStr20)
  ret ($retval_388 : ByStr20)

fundef ($fundef_102 : () -> forall 'B. ('B -> List (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B) ()
environment: ()
body:
  ($retval_103 : forall 'B. ('B -> List (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B) = [List (ByStr20) -> ($fundef_104 : () -> (List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)); Option (ByStr20) -> ($fundef_121 : () -> (Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)); ByStr20 -> ($fundef_138 : () -> (ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_103 : forall 'B. ('B -> List (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B)

fundef ($fundef_104 : () -> (List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_105 : (List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) = [($fundef_106 : (List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_105 : (List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_106 : (List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_108
  [$fundef_108]((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  ($retval_107 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) = [($fundef_108 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_107 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_108 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_108]((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_110
  [$fundef_110]((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_110]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
  ($retval_109 : List (List (ByStr20)) -> List (ByStr20)) = [($fundef_110 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_109 : List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_110 : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_110]((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_110]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_112
  [$fundef_112]((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_112]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
  [$fundef_112]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_111 : List (List (ByStr20)) -> List (ByStr20)) = [($fundef_112 : List (List (ByStr20)) -> List (ByStr20))]
  ret ($retval_111 : List (List (ByStr20)) -> List (ByStr20))

fundef ($fundef_112 : List (List (ByStr20)) -> List (ByStr20)) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_112]((f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_112]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_112]((z : List (ByStr20)))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    allocate_closure_env $fundef_114
    [$fundef_114]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20))
    [$fundef_114]((t : List (List (ByStr20)))) <- (t : List (List (ByStr20)))
    (partial : List (ByStr20) -> List (ByStr20)) = [($fundef_114 : List (ByStr20) -> List (ByStr20))]
    ($f_118 : List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = (f : List (ByStr20) -> List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (z : List (ByStr20))
    ($f_119 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = ($f_118 : List (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (h : List (ByStr20))
    ($f_120 : List (ByStr20)) = ($f_119 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (partial : List (ByStr20) -> List (ByStr20))
    ($retval_113 : List (ByStr20)) = ($f_120 : List (ByStr20))
  | Nil =>
    ($retval_113 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_113 : List (ByStr20))

fundef ($fundef_114 : List (ByStr20) -> List (ByStr20)) ((k : List (ByStr20)) : List (ByStr20))
environment: ((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20) , (t : List (List (ByStr20))) : List (List (ByStr20)))
body:
  (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) <- [$fundef_114]((g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)))
  (t : List (List (ByStr20))) <- [$fundef_114]((t : List (List (ByStr20))))
  ($g_116 : List (List (ByStr20)) -> List (ByStr20)) = (g : List (ByStr20) -> List (List (ByStr20)) -> List (ByStr20)) (k : List (ByStr20))
  ($g_117 : List (ByStr20)) = ($g_116 : List (List (ByStr20)) -> List (ByStr20)) (t : List (List (ByStr20)))
  ($retval_115 : List (ByStr20)) = ($g_117 : List (ByStr20))
  ret ($retval_115 : List (ByStr20))

fundef ($fundef_121 : () -> (Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_122 : (Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_123 : (Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_122 : (Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_123 : (Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_125
  [$fundef_125]((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  ($retval_124 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_125 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_124 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_125 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_125]((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_127
  [$fundef_127]((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_127]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
  ($retval_126 : List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_127 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_126 : List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_127 : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_127]((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_127]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_129
  [$fundef_129]((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_129]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
  [$fundef_129]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_128 : List (List (ByStr20)) -> Option (ByStr20)) = [($fundef_129 : List (List (ByStr20)) -> Option (ByStr20))]
  ret ($retval_128 : List (List (ByStr20)) -> Option (ByStr20))

fundef ($fundef_129 : List (List (ByStr20)) -> Option (ByStr20)) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_129]((f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_129]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_129]((z : Option (ByStr20)))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    allocate_closure_env $fundef_131
    [$fundef_131]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20))
    [$fundef_131]((t : List (List (ByStr20)))) <- (t : List (List (ByStr20)))
    (partial : Option (ByStr20) -> Option (ByStr20)) = [($fundef_131 : Option (ByStr20) -> Option (ByStr20))]
    ($f_135 : List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = (f : Option (ByStr20) -> List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (z : Option (ByStr20))
    ($f_136 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = ($f_135 : List (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (h : List (ByStr20))
    ($f_137 : Option (ByStr20)) = ($f_136 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (partial : Option (ByStr20) -> Option (ByStr20))
    ($retval_130 : Option (ByStr20)) = ($f_137 : Option (ByStr20))
  | Nil =>
    ($retval_130 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_130 : Option (ByStr20))

fundef ($fundef_131 : Option (ByStr20) -> Option (ByStr20)) ((k : Option (ByStr20)) : Option (ByStr20))
environment: ((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20) , (t : List (List (ByStr20))) : List (List (ByStr20)))
body:
  (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) <- [$fundef_131]((g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)))
  (t : List (List (ByStr20))) <- [$fundef_131]((t : List (List (ByStr20))))
  ($g_133 : List (List (ByStr20)) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (List (ByStr20)) -> Option (ByStr20)) (k : Option (ByStr20))
  ($g_134 : Option (ByStr20)) = ($g_133 : List (List (ByStr20)) -> Option (ByStr20)) (t : List (List (ByStr20)))
  ($retval_132 : Option (ByStr20)) = ($g_134 : Option (ByStr20))
  ret ($retval_132 : Option (ByStr20))

fundef ($fundef_138 : () -> (ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) ()
environment: ()
body:
  ($retval_139 : (ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) = [($fundef_140 : (ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_139 : (ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20)

fundef ($fundef_140 : (ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (List (ByStr20)) -> ByStr20) ((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_142
  [$fundef_142]((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
  ($retval_141 : ByStr20 -> List (List (ByStr20)) -> ByStr20) = [($fundef_142 : ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_141 : ByStr20 -> List (List (ByStr20)) -> ByStr20)

fundef ($fundef_142 : ByStr20 -> List (List (ByStr20)) -> ByStr20) ((g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20)
environment: ((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_142]((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20))
  allocate_closure_env $fundef_144
  [$fundef_144]((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_144]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
  ($retval_143 : List (List (ByStr20)) -> ByStr20) = [($fundef_144 : ByStr20 -> List (List (ByStr20)) -> ByStr20)]
  ret ($retval_143 : List (List (ByStr20)) -> ByStr20)

fundef ($fundef_144 : ByStr20 -> List (List (ByStr20)) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20)
body:
  (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_144]((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_144]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  allocate_closure_env $fundef_146
  [$fundef_146]((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_146]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
  [$fundef_146]((z : ByStr20)) <- (z : ByStr20)
  ($retval_145 : List (List (ByStr20)) -> ByStr20) = [($fundef_146 : List (List (ByStr20)) -> ByStr20)]
  ret ($retval_145 : List (List (ByStr20)) -> ByStr20)

fundef ($fundef_146 : List (List (ByStr20)) -> ByStr20) ((l : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_146]((f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_146]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  (z : ByStr20) <- [$fundef_146]((z : ByStr20))
  match (l : List (List (ByStr20))) with
  | Cons (h : List (ByStr20)) (t : List (List (ByStr20))) =>
    allocate_closure_env $fundef_148
    [$fundef_148]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (List (ByStr20)) -> ByStr20)
    [$fundef_148]((t : List (List (ByStr20)))) <- (t : List (List (ByStr20)))
    (partial : ByStr20 -> ByStr20) = [($fundef_148 : ByStr20 -> ByStr20)]
    ($f_152 : List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) = (f : ByStr20 -> List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) (z : ByStr20)
    ($f_153 : (ByStr20 -> ByStr20) -> ByStr20) = ($f_152 : List (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) (h : List (ByStr20))
    ($f_154 : ByStr20) = ($f_153 : (ByStr20 -> ByStr20) -> ByStr20) (partial : ByStr20 -> ByStr20)
    ($retval_147 : ByStr20) = ($f_154 : ByStr20)
  | Nil =>
    ($retval_147 : ByStr20) = (z : ByStr20)
  ret ($retval_147 : ByStr20)

fundef ($fundef_148 : ByStr20 -> ByStr20) ((k : ByStr20) : ByStr20)
environment: ((g : ByStr20 -> List (List (ByStr20)) -> ByStr20) : ByStr20 -> List (List (ByStr20)) -> ByStr20 , (t : List (List (ByStr20))) : List (List (ByStr20)))
body:
  (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) <- [$fundef_148]((g : ByStr20 -> List (List (ByStr20)) -> ByStr20))
  (t : List (List (ByStr20))) <- [$fundef_148]((t : List (List (ByStr20))))
  ($g_150 : List (List (ByStr20)) -> ByStr20) = (g : ByStr20 -> List (List (ByStr20)) -> ByStr20) (k : ByStr20)
  ($g_151 : ByStr20) = ($g_150 : List (List (ByStr20)) -> ByStr20) (t : List (List (ByStr20)))
  ($retval_149 : ByStr20) = ($g_151 : ByStr20)
  ret ($retval_149 : ByStr20)

fundef ($fundef_155 : () -> forall 'B. ('B -> Option (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B) ()
environment: ()
body:
  ($retval_156 : forall 'B. ('B -> Option (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B) = [List (ByStr20) -> ($fundef_157 : () -> (List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)); Option (ByStr20) -> ($fundef_174 : () -> (Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)); ByStr20 -> ($fundef_191 : () -> (ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_156 : forall 'B. ('B -> Option (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B)

fundef ($fundef_157 : () -> (List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_158 : (List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_159 : (List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_158 : (List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_159 : (List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_161
  [$fundef_161]((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  ($retval_160 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_161 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_160 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_161 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_161]((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_163
  [$fundef_163]((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_163]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
  ($retval_162 : List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_163 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_162 : List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_163 : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_163]((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_163]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_165
  [$fundef_165]((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_165]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
  [$fundef_165]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_164 : List (Option (ByStr20)) -> List (ByStr20)) = [($fundef_165 : List (Option (ByStr20)) -> List (ByStr20))]
  ret ($retval_164 : List (Option (ByStr20)) -> List (ByStr20))

fundef ($fundef_165 : List (Option (ByStr20)) -> List (ByStr20)) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_165]((f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_165]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_165]((z : List (ByStr20)))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    allocate_closure_env $fundef_167
    [$fundef_167]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))) <- (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20))
    [$fundef_167]((t : List (Option (ByStr20)))) <- (t : List (Option (ByStr20)))
    (partial : List (ByStr20) -> List (ByStr20)) = [($fundef_167 : List (ByStr20) -> List (ByStr20))]
    ($f_171 : Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = (f : List (ByStr20) -> Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (z : List (ByStr20))
    ($f_172 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = ($f_171 : Option (ByStr20) -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (h : Option (ByStr20))
    ($f_173 : List (ByStr20)) = ($f_172 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (partial : List (ByStr20) -> List (ByStr20))
    ($retval_166 : List (ByStr20)) = ($f_173 : List (ByStr20))
  | Nil =>
    ($retval_166 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_166 : List (ByStr20))

fundef ($fundef_167 : List (ByStr20) -> List (ByStr20)) ((k : List (ByStr20)) : List (ByStr20))
environment: ((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20) , (t : List (Option (ByStr20))) : List (Option (ByStr20)))
body:
  (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) <- [$fundef_167]((g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)))
  (t : List (Option (ByStr20))) <- [$fundef_167]((t : List (Option (ByStr20))))
  ($g_169 : List (Option (ByStr20)) -> List (ByStr20)) = (g : List (ByStr20) -> List (Option (ByStr20)) -> List (ByStr20)) (k : List (ByStr20))
  ($g_170 : List (ByStr20)) = ($g_169 : List (Option (ByStr20)) -> List (ByStr20)) (t : List (Option (ByStr20)))
  ($retval_168 : List (ByStr20)) = ($g_170 : List (ByStr20))
  ret ($retval_168 : List (ByStr20))

fundef ($fundef_174 : () -> (Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_175 : (Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_176 : (Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_175 : (Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_176 : (Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_178
  [$fundef_178]((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  ($retval_177 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_178 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_177 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_178 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_178]((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_180
  [$fundef_180]((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_180]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
  ($retval_179 : List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_180 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_179 : List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_180 : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_180]((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_180]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_182
  [$fundef_182]((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_182]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
  [$fundef_182]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_181 : List (Option (ByStr20)) -> Option (ByStr20)) = [($fundef_182 : List (Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_181 : List (Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_182 : List (Option (ByStr20)) -> Option (ByStr20)) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_182]((f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_182]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_182]((z : Option (ByStr20)))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    allocate_closure_env $fundef_184
    [$fundef_184]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20))
    [$fundef_184]((t : List (Option (ByStr20)))) <- (t : List (Option (ByStr20)))
    (partial : Option (ByStr20) -> Option (ByStr20)) = [($fundef_184 : Option (ByStr20) -> Option (ByStr20))]
    ($f_188 : Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = (f : Option (ByStr20) -> Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (z : Option (ByStr20))
    ($f_189 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = ($f_188 : Option (ByStr20) -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (h : Option (ByStr20))
    ($f_190 : Option (ByStr20)) = ($f_189 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (partial : Option (ByStr20) -> Option (ByStr20))
    ($retval_183 : Option (ByStr20)) = ($f_190 : Option (ByStr20))
  | Nil =>
    ($retval_183 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_183 : Option (ByStr20))

fundef ($fundef_184 : Option (ByStr20) -> Option (ByStr20)) ((k : Option (ByStr20)) : Option (ByStr20))
environment: ((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20) , (t : List (Option (ByStr20))) : List (Option (ByStr20)))
body:
  (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_184]((g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)))
  (t : List (Option (ByStr20))) <- [$fundef_184]((t : List (Option (ByStr20))))
  ($g_186 : List (Option (ByStr20)) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (Option (ByStr20)) -> Option (ByStr20)) (k : Option (ByStr20))
  ($g_187 : Option (ByStr20)) = ($g_186 : List (Option (ByStr20)) -> Option (ByStr20)) (t : List (Option (ByStr20)))
  ($retval_185 : Option (ByStr20)) = ($g_187 : Option (ByStr20))
  ret ($retval_185 : Option (ByStr20))

fundef ($fundef_191 : () -> (ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) ()
environment: ()
body:
  ($retval_192 : (ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) = [($fundef_193 : (ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_192 : (ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_193 : (ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_195
  [$fundef_195]((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
  ($retval_194 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) = [($fundef_195 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_194 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_195 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
environment: ((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_195]((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20))
  allocate_closure_env $fundef_197
  [$fundef_197]((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_197]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
  ($retval_196 : List (Option (ByStr20)) -> ByStr20) = [($fundef_197 : ByStr20 -> List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_196 : List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_197 : ByStr20 -> List (Option (ByStr20)) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
body:
  (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_197]((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_197]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  allocate_closure_env $fundef_199
  [$fundef_199]((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_199]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
  [$fundef_199]((z : ByStr20)) <- (z : ByStr20)
  ($retval_198 : List (Option (ByStr20)) -> ByStr20) = [($fundef_199 : List (Option (ByStr20)) -> ByStr20)]
  ret ($retval_198 : List (Option (ByStr20)) -> ByStr20)

fundef ($fundef_199 : List (Option (ByStr20)) -> ByStr20) ((l : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_199]((f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_199]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  (z : ByStr20) <- [$fundef_199]((z : ByStr20))
  match (l : List (Option (ByStr20))) with
  | Cons (h : Option (ByStr20)) (t : List (Option (ByStr20))) =>
    allocate_closure_env $fundef_201
    [$fundef_201]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)) <- (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20)
    [$fundef_201]((t : List (Option (ByStr20)))) <- (t : List (Option (ByStr20)))
    (partial : ByStr20 -> ByStr20) = [($fundef_201 : ByStr20 -> ByStr20)]
    ($f_205 : Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) = (f : ByStr20 -> Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) (z : ByStr20)
    ($f_206 : (ByStr20 -> ByStr20) -> ByStr20) = ($f_205 : Option (ByStr20) -> (ByStr20 -> ByStr20) -> ByStr20) (h : Option (ByStr20))
    ($f_207 : ByStr20) = ($f_206 : (ByStr20 -> ByStr20) -> ByStr20) (partial : ByStr20 -> ByStr20)
    ($retval_200 : ByStr20) = ($f_207 : ByStr20)
  | Nil =>
    ($retval_200 : ByStr20) = (z : ByStr20)
  ret ($retval_200 : ByStr20)

fundef ($fundef_201 : ByStr20 -> ByStr20) ((k : ByStr20) : ByStr20)
environment: ((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) : ByStr20 -> List (Option (ByStr20)) -> ByStr20 , (t : List (Option (ByStr20))) : List (Option (ByStr20)))
body:
  (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) <- [$fundef_201]((g : ByStr20 -> List (Option (ByStr20)) -> ByStr20))
  (t : List (Option (ByStr20))) <- [$fundef_201]((t : List (Option (ByStr20))))
  ($g_203 : List (Option (ByStr20)) -> ByStr20) = (g : ByStr20 -> List (Option (ByStr20)) -> ByStr20) (k : ByStr20)
  ($g_204 : ByStr20) = ($g_203 : List (Option (ByStr20)) -> ByStr20) (t : List (Option (ByStr20)))
  ($retval_202 : ByStr20) = ($g_204 : ByStr20)
  ret ($retval_202 : ByStr20)

fundef ($fundef_208 : () -> forall 'B. ('B -> ByStr20 -> ('B -> 'B) -> 'B) -> 'B -> List (ByStr20) -> 'B) ()
environment: ()
body:
  ($retval_209 : forall 'B. ('B -> ByStr20 -> ('B -> 'B) -> 'B) -> 'B -> List (ByStr20) -> 'B) = [List (ByStr20) -> ($fundef_210 : () -> (List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)); Option (ByStr20) -> ($fundef_227 : () -> (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)); ByStr20 -> ($fundef_244 : () -> (ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_209 : forall 'B. ('B -> ByStr20 -> ('B -> 'B) -> 'B) -> 'B -> List (ByStr20) -> 'B)

fundef ($fundef_210 : () -> (List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ()
environment: ()
body:
  ($retval_211 : (List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = [($fundef_212 : (List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_211 : (List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_212 : (List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_214
  [$fundef_214]((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  ($retval_213 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = [($fundef_214 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_213 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_214 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
environment: ((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
body:
  (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_214]((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_216
  [$fundef_216]((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_216]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  ($retval_215 : List (ByStr20) -> List (ByStr20)) = [($fundef_216 : List (ByStr20) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_215 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_216 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
body:
  (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_216]((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_216]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  allocate_closure_env $fundef_218
  [$fundef_218]((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_218]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
  [$fundef_218]((z : List (ByStr20))) <- (z : List (ByStr20))
  ($retval_217 : List (ByStr20) -> List (ByStr20)) = [($fundef_218 : List (ByStr20) -> List (ByStr20))]
  ret ($retval_217 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_218 : List (ByStr20) -> List (ByStr20)) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (z : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_218]((f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_218]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (z : List (ByStr20)) <- [$fundef_218]((z : List (ByStr20)))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    allocate_closure_env $fundef_220
    [$fundef_220]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))) <- (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20))
    [$fundef_220]((t : List (ByStr20))) <- (t : List (ByStr20))
    (partial : List (ByStr20) -> List (ByStr20)) = [($fundef_220 : List (ByStr20) -> List (ByStr20))]
    ($f_224 : ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = (f : List (ByStr20) -> ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (z : List (ByStr20))
    ($f_225 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = ($f_224 : ByStr20 -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (h : ByStr20)
    ($f_226 : List (ByStr20)) = ($f_225 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (partial : List (ByStr20) -> List (ByStr20))
    ($retval_219 : List (ByStr20)) = ($f_226 : List (ByStr20))
  | Nil =>
    ($retval_219 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_219 : List (ByStr20))

fundef ($fundef_220 : List (ByStr20) -> List (ByStr20)) ((k : List (ByStr20)) : List (ByStr20))
environment: ((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) : List (ByStr20) -> List (ByStr20) -> List (ByStr20) , (t : List (ByStr20)) : List (ByStr20))
body:
  (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) <- [$fundef_220]((g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)))
  (t : List (ByStr20)) <- [$fundef_220]((t : List (ByStr20)))
  ($g_222 : List (ByStr20) -> List (ByStr20)) = (g : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (k : List (ByStr20))
  ($g_223 : List (ByStr20)) = ($g_222 : List (ByStr20) -> List (ByStr20)) (t : List (ByStr20))
  ($retval_221 : List (ByStr20)) = ($g_223 : List (ByStr20))
  ret ($retval_221 : List (ByStr20))

fundef ($fundef_227 : () -> (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_228 : (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_229 : (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_228 : (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_229 : (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_231
  [$fundef_231]((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  ($retval_230 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_231 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_230 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_231 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
environment: ((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_231]((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_233
  [$fundef_233]((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_233]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  ($retval_232 : List (ByStr20) -> Option (ByStr20)) = [($fundef_233 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_232 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_233 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) ((z : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
body:
  (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_233]((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_233]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  allocate_closure_env $fundef_235
  [$fundef_235]((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_235]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
  [$fundef_235]((z : Option (ByStr20))) <- (z : Option (ByStr20))
  ($retval_234 : List (ByStr20) -> Option (ByStr20)) = [($fundef_235 : List (ByStr20) -> Option (ByStr20))]
  ret ($retval_234 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_235 : List (ByStr20) -> Option (ByStr20)) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20) , (z : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_235]((f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_235]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  (z : Option (ByStr20)) <- [$fundef_235]((z : Option (ByStr20)))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    allocate_closure_env $fundef_237
    [$fundef_237]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))) <- (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20))
    [$fundef_237]((t : List (ByStr20))) <- (t : List (ByStr20))
    (partial : Option (ByStr20) -> Option (ByStr20)) = [($fundef_237 : Option (ByStr20) -> Option (ByStr20))]
    ($f_241 : ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = (f : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (z : Option (ByStr20))
    ($f_242 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = ($f_241 : ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (h : ByStr20)
    ($f_243 : Option (ByStr20)) = ($f_242 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (partial : Option (ByStr20) -> Option (ByStr20))
    ($retval_236 : Option (ByStr20)) = ($f_243 : Option (ByStr20))
  | Nil =>
    ($retval_236 : Option (ByStr20)) = (z : Option (ByStr20))
  ret ($retval_236 : Option (ByStr20))

fundef ($fundef_237 : Option (ByStr20) -> Option (ByStr20)) ((k : Option (ByStr20)) : Option (ByStr20))
environment: ((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20) , (t : List (ByStr20)) : List (ByStr20))
body:
  (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) <- [$fundef_237]((g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)))
  (t : List (ByStr20)) <- [$fundef_237]((t : List (ByStr20)))
  ($g_239 : List (ByStr20) -> Option (ByStr20)) = (g : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) (k : Option (ByStr20))
  ($g_240 : Option (ByStr20)) = ($g_239 : List (ByStr20) -> Option (ByStr20)) (t : List (ByStr20))
  ($retval_238 : Option (ByStr20)) = ($g_240 : Option (ByStr20))
  ret ($retval_238 : Option (ByStr20))

fundef ($fundef_244 : () -> (ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) ()
environment: ()
body:
  ($retval_245 : (ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) = [($fundef_246 : (ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_245 : (ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20)

fundef ($fundef_246 : (ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> List (ByStr20) -> ByStr20) ((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_248
  [$fundef_248]((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)
  ($retval_247 : ByStr20 -> List (ByStr20) -> ByStr20) = [($fundef_248 : ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_247 : ByStr20 -> List (ByStr20) -> ByStr20)

fundef ($fundef_248 : ByStr20 -> List (ByStr20) -> ByStr20) ((g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_248]((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20))
  allocate_closure_env $fundef_250
  [$fundef_250]((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_250]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
  ($retval_249 : List (ByStr20) -> ByStr20) = [($fundef_250 : ByStr20 -> List (ByStr20) -> ByStr20)]
  ret ($retval_249 : List (ByStr20) -> ByStr20)

fundef ($fundef_250 : ByStr20 -> List (ByStr20) -> ByStr20) ((z : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_250]((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_250]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  allocate_closure_env $fundef_252
  [$fundef_252]((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)) <- (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_252]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
  [$fundef_252]((z : ByStr20)) <- (z : ByStr20)
  ($retval_251 : List (ByStr20) -> ByStr20) = [($fundef_252 : List (ByStr20) -> ByStr20)]
  ret ($retval_251 : List (ByStr20) -> ByStr20)

fundef ($fundef_252 : List (ByStr20) -> ByStr20) ((l : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20 , (z : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_252]((f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_252]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  (z : ByStr20) <- [$fundef_252]((z : ByStr20))
  match (l : List (ByStr20)) with
  | Cons (h : ByStr20) (t : List (ByStr20)) =>
    allocate_closure_env $fundef_254
    [$fundef_254]((g : ByStr20 -> List (ByStr20) -> ByStr20)) <- (g : ByStr20 -> List (ByStr20) -> ByStr20)
    [$fundef_254]((t : List (ByStr20))) <- (t : List (ByStr20))
    (partial : ByStr20 -> ByStr20) = [($fundef_254 : ByStr20 -> ByStr20)]
    ($f_258 : ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) = (f : ByStr20 -> ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) (z : ByStr20)
    ($f_259 : (ByStr20 -> ByStr20) -> ByStr20) = ($f_258 : ByStr20 -> (ByStr20 -> ByStr20) -> ByStr20) (h : ByStr20)
    ($f_260 : ByStr20) = ($f_259 : (ByStr20 -> ByStr20) -> ByStr20) (partial : ByStr20 -> ByStr20)
    ($retval_253 : ByStr20) = ($f_260 : ByStr20)
  | Nil =>
    ($retval_253 : ByStr20) = (z : ByStr20)
  ret ($retval_253 : ByStr20)

fundef ($fundef_254 : ByStr20 -> ByStr20) ((k : ByStr20) : ByStr20)
environment: ((g : ByStr20 -> List (ByStr20) -> ByStr20) : ByStr20 -> List (ByStr20) -> ByStr20 , (t : List (ByStr20)) : List (ByStr20))
body:
  (g : ByStr20 -> List (ByStr20) -> ByStr20) <- [$fundef_254]((g : ByStr20 -> List (ByStr20) -> ByStr20))
  (t : List (ByStr20)) <- [$fundef_254]((t : List (ByStr20)))
  ($g_256 : List (ByStr20) -> ByStr20) = (g : ByStr20 -> List (ByStr20) -> ByStr20) (k : ByStr20)
  ($g_257 : ByStr20) = ($g_256 : List (ByStr20) -> ByStr20) (t : List (ByStr20))
  ($retval_255 : ByStr20) = ($g_257 : ByStr20)
  ret ($retval_255 : ByStr20)

fundef ($fundef_51 : () -> (List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)) ()
environment: ()
body:
  ($retval_52 : (List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)) = [($fundef_53 : (List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20))]
  ret ($retval_52 : (List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20))

fundef ($fundef_53 : (List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)) ((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_55
  [$fundef_55]((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  ($retval_54 : List (ByStr20) -> Nat -> List (ByStr20)) = [($fundef_55 : List (ByStr20) -> Nat -> List (ByStr20))]
  ret ($retval_54 : List (ByStr20) -> Nat -> List (ByStr20))

fundef ($fundef_55 : List (ByStr20) -> Nat -> List (ByStr20)) ((g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
environment: ((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
body:
  (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_55]((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  allocate_closure_env $fundef_57
  [$fundef_57]((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_57]((g : List (ByStr20) -> Nat -> List (ByStr20))) <- (g : List (ByStr20) -> Nat -> List (ByStr20))
  ($retval_56 : Nat -> List (ByStr20)) = [($fundef_57 : List (ByStr20) -> Nat -> List (ByStr20))]
  ret ($retval_56 : Nat -> List (ByStr20))

fundef ($fundef_57 : List (ByStr20) -> Nat -> List (ByStr20)) ((f0 : List (ByStr20)) : List (ByStr20))
environment: ((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
body:
  (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_57]((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_57]((g : List (ByStr20) -> Nat -> List (ByStr20)))
  allocate_closure_env $fundef_59
  [$fundef_59]((f0 : List (ByStr20))) <- (f0 : List (ByStr20))
  [$fundef_59]((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))) <- (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20))
  [$fundef_59]((g : List (ByStr20) -> Nat -> List (ByStr20))) <- (g : List (ByStr20) -> Nat -> List (ByStr20))
  ($retval_58 : Nat -> List (ByStr20)) = [($fundef_59 : Nat -> List (ByStr20))]
  ret ($retval_58 : Nat -> List (ByStr20))

fundef ($fundef_59 : Nat -> List (ByStr20)) ((n : Nat) : Nat)
environment: ((f0 : List (ByStr20)) : List (ByStr20) , (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20) , (g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
body:
  (f0 : List (ByStr20)) <- [$fundef_59]((f0 : List (ByStr20)))
  (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) <- [$fundef_59]((fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)))
  (g : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_59]((g : List (ByStr20) -> Nat -> List (ByStr20)))
  match (n : Nat) with
  | Succ (n1 : Nat) =>
    allocate_closure_env $fundef_61
    [$fundef_61]((g : List (ByStr20) -> Nat -> List (ByStr20))) <- (g : List (ByStr20) -> Nat -> List (ByStr20))
    [$fundef_61]((n1 : Nat)) <- (n1 : Nat)
    (partial : List (ByStr20) -> List (ByStr20)) = [($fundef_61 : List (ByStr20) -> List (ByStr20))]
    ($fn_65 : Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = (fn : List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (f0 : List (ByStr20))
    ($fn_66 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) = ($fn_65 : Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (n : Nat)
    ($fn_67 : List (ByStr20)) = ($fn_66 : (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) (partial : List (ByStr20) -> List (ByStr20))
    ($retval_60 : List (ByStr20)) = ($fn_67 : List (ByStr20))
  | Zero =>
    ($retval_60 : List (ByStr20)) = (f0 : List (ByStr20))
  ret ($retval_60 : List (ByStr20))

fundef ($fundef_61 : List (ByStr20) -> List (ByStr20)) ((k : List (ByStr20)) : List (ByStr20))
environment: ((g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20) , (n1 : Nat) : Nat)
body:
  (g : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_61]((g : List (ByStr20) -> Nat -> List (ByStr20)))
  (n1 : Nat) <- [$fundef_61]((n1 : Nat))
  ($g_63 : Nat -> List (ByStr20)) = (g : List (ByStr20) -> Nat -> List (ByStr20)) (k : List (ByStr20))
  ($g_64 : List (ByStr20)) = ($g_63 : Nat -> List (ByStr20)) (n1 : Nat)
  ($retval_62 : List (ByStr20)) = ($g_64 : List (ByStr20))
  ret ($retval_62 : List (ByStr20))

fundef ($fundef_68 : () -> (Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_69 : (Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)) = [($fundef_70 : (Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20))]
  ret ($retval_69 : (Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20))

fundef ($fundef_70 : (Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)) ((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_72
  [$fundef_72]((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  ($retval_71 : Option (ByStr20) -> Nat -> Option (ByStr20)) = [($fundef_72 : Option (ByStr20) -> Nat -> Option (ByStr20))]
  ret ($retval_71 : Option (ByStr20) -> Nat -> Option (ByStr20))

fundef ($fundef_72 : Option (ByStr20) -> Nat -> Option (ByStr20)) ((g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
environment: ((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
body:
  (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_72]((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  allocate_closure_env $fundef_74
  [$fundef_74]((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_74]((g : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (g : Option (ByStr20) -> Nat -> Option (ByStr20))
  ($retval_73 : Nat -> Option (ByStr20)) = [($fundef_74 : Option (ByStr20) -> Nat -> Option (ByStr20))]
  ret ($retval_73 : Nat -> Option (ByStr20))

fundef ($fundef_74 : Option (ByStr20) -> Nat -> Option (ByStr20)) ((f0 : Option (ByStr20)) : Option (ByStr20))
environment: ((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
body:
  (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_74]((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_74]((g : Option (ByStr20) -> Nat -> Option (ByStr20)))
  allocate_closure_env $fundef_76
  [$fundef_76]((f0 : Option (ByStr20))) <- (f0 : Option (ByStr20))
  [$fundef_76]((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))) <- (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  [$fundef_76]((g : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (g : Option (ByStr20) -> Nat -> Option (ByStr20))
  ($retval_75 : Nat -> Option (ByStr20)) = [($fundef_76 : Nat -> Option (ByStr20))]
  ret ($retval_75 : Nat -> Option (ByStr20))

fundef ($fundef_76 : Nat -> Option (ByStr20)) ((n : Nat) : Nat)
environment: ((f0 : Option (ByStr20)) : Option (ByStr20) , (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20) , (g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
body:
  (f0 : Option (ByStr20)) <- [$fundef_76]((f0 : Option (ByStr20)))
  (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) <- [$fundef_76]((fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)))
  (g : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_76]((g : Option (ByStr20) -> Nat -> Option (ByStr20)))
  match (n : Nat) with
  | Succ (n1 : Nat) =>
    allocate_closure_env $fundef_78
    [$fundef_78]((g : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (g : Option (ByStr20) -> Nat -> Option (ByStr20))
    [$fundef_78]((n1 : Nat)) <- (n1 : Nat)
    (partial : Option (ByStr20) -> Option (ByStr20)) = [($fundef_78 : Option (ByStr20) -> Option (ByStr20))]
    ($fn_82 : Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = (fn : Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (f0 : Option (ByStr20))
    ($fn_83 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = ($fn_82 : Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (n : Nat)
    ($fn_84 : Option (ByStr20)) = ($fn_83 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) (partial : Option (ByStr20) -> Option (ByStr20))
    ($retval_77 : Option (ByStr20)) = ($fn_84 : Option (ByStr20))
  | Zero =>
    ($retval_77 : Option (ByStr20)) = (f0 : Option (ByStr20))
  ret ($retval_77 : Option (ByStr20))

fundef ($fundef_78 : Option (ByStr20) -> Option (ByStr20)) ((k : Option (ByStr20)) : Option (ByStr20))
environment: ((g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20) , (n1 : Nat) : Nat)
body:
  (g : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_78]((g : Option (ByStr20) -> Nat -> Option (ByStr20)))
  (n1 : Nat) <- [$fundef_78]((n1 : Nat))
  ($g_80 : Nat -> Option (ByStr20)) = (g : Option (ByStr20) -> Nat -> Option (ByStr20)) (k : Option (ByStr20))
  ($g_81 : Option (ByStr20)) = ($g_80 : Nat -> Option (ByStr20)) (n1 : Nat)
  ($retval_79 : Option (ByStr20)) = ($g_81 : Option (ByStr20))
  ret ($retval_79 : Option (ByStr20))

fundef ($fundef_85 : () -> (ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> Nat -> ByStr20) ()
environment: ()
body:
  ($retval_86 : (ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> Nat -> ByStr20) = [($fundef_87 : (ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> Nat -> ByStr20)]
  ret ($retval_86 : (ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> Nat -> ByStr20)

fundef ($fundef_87 : (ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> Nat -> ByStr20) ((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_89
  [$fundef_89]((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)) <- (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)
  ($retval_88 : ByStr20 -> Nat -> ByStr20) = [($fundef_89 : ByStr20 -> Nat -> ByStr20)]
  ret ($retval_88 : ByStr20 -> Nat -> ByStr20)

fundef ($fundef_89 : ByStr20 -> Nat -> ByStr20) ((g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
environment: ((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)
body:
  (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_89]((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20))
  allocate_closure_env $fundef_91
  [$fundef_91]((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)) <- (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_91]((g : ByStr20 -> Nat -> ByStr20)) <- (g : ByStr20 -> Nat -> ByStr20)
  ($retval_90 : Nat -> ByStr20) = [($fundef_91 : ByStr20 -> Nat -> ByStr20)]
  ret ($retval_90 : Nat -> ByStr20)

fundef ($fundef_91 : ByStr20 -> Nat -> ByStr20) ((f0 : ByStr20) : ByStr20)
environment: ((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
body:
  (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_91]((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> Nat -> ByStr20) <- [$fundef_91]((g : ByStr20 -> Nat -> ByStr20))
  allocate_closure_env $fundef_93
  [$fundef_93]((f0 : ByStr20)) <- (f0 : ByStr20)
  [$fundef_93]((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)) <- (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20)
  [$fundef_93]((g : ByStr20 -> Nat -> ByStr20)) <- (g : ByStr20 -> Nat -> ByStr20)
  ($retval_92 : Nat -> ByStr20) = [($fundef_93 : Nat -> ByStr20)]
  ret ($retval_92 : Nat -> ByStr20)

fundef ($fundef_93 : Nat -> ByStr20) ((n : Nat) : Nat)
environment: ((f0 : ByStr20) : ByStr20 , (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20 , (g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
body:
  (f0 : ByStr20) <- [$fundef_93]((f0 : ByStr20))
  (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) <- [$fundef_93]((fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20))
  (g : ByStr20 -> Nat -> ByStr20) <- [$fundef_93]((g : ByStr20 -> Nat -> ByStr20))
  match (n : Nat) with
  | Succ (n1 : Nat) =>
    allocate_closure_env $fundef_95
    [$fundef_95]((g : ByStr20 -> Nat -> ByStr20)) <- (g : ByStr20 -> Nat -> ByStr20)
    [$fundef_95]((n1 : Nat)) <- (n1 : Nat)
    (partial : ByStr20 -> ByStr20) = [($fundef_95 : ByStr20 -> ByStr20)]
    ($fn_99 : Nat -> (ByStr20 -> ByStr20) -> ByStr20) = (fn : ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) (f0 : ByStr20)
    ($fn_100 : (ByStr20 -> ByStr20) -> ByStr20) = ($fn_99 : Nat -> (ByStr20 -> ByStr20) -> ByStr20) (n : Nat)
    ($fn_101 : ByStr20) = ($fn_100 : (ByStr20 -> ByStr20) -> ByStr20) (partial : ByStr20 -> ByStr20)
    ($retval_94 : ByStr20) = ($fn_101 : ByStr20)
  | Zero =>
    ($retval_94 : ByStr20) = (f0 : ByStr20)
  ret ($retval_94 : ByStr20)

fundef ($fundef_95 : ByStr20 -> ByStr20) ((k : ByStr20) : ByStr20)
environment: ((g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20 , (n1 : Nat) : Nat)
body:
  (g : ByStr20 -> Nat -> ByStr20) <- [$fundef_95]((g : ByStr20 -> Nat -> ByStr20))
  (n1 : Nat) <- [$fundef_95]((n1 : Nat))
  ($g_97 : Nat -> ByStr20) = (g : ByStr20 -> Nat -> ByStr20) (k : ByStr20)
  ($g_98 : ByStr20) = ($g_97 : Nat -> ByStr20) (n1 : Nat)
  ($retval_96 : ByStr20) = ($g_98 : ByStr20)
  ret ($retval_96 : ByStr20)

fundef ($fundef_9 : () -> (List (ByStr20) -> Nat -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)) ()
environment: ()
body:
  ($retval_10 : (List (ByStr20) -> Nat -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)) = [($fundef_11 : (List (ByStr20) -> Nat -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20))]
  ret ($retval_10 : (List (ByStr20) -> Nat -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20))

fundef ($fundef_11 : (List (ByStr20) -> Nat -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)) ((fn : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_13
  [$fundef_13]((fn : List (ByStr20) -> Nat -> List (ByStr20))) <- (fn : List (ByStr20) -> Nat -> List (ByStr20))
  ($retval_12 : List (ByStr20) -> Nat -> List (ByStr20)) = [($fundef_13 : List (ByStr20) -> Nat -> List (ByStr20))]
  ret ($retval_12 : List (ByStr20) -> Nat -> List (ByStr20))

fundef ($fundef_13 : List (ByStr20) -> Nat -> List (ByStr20)) ((g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
environment: ((fn : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
body:
  (fn : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_13]((fn : List (ByStr20) -> Nat -> List (ByStr20)))
  allocate_closure_env $fundef_15
  [$fundef_15]((fn : List (ByStr20) -> Nat -> List (ByStr20))) <- (fn : List (ByStr20) -> Nat -> List (ByStr20))
  [$fundef_15]((g : List (ByStr20) -> Nat -> List (ByStr20))) <- (g : List (ByStr20) -> Nat -> List (ByStr20))
  ($retval_14 : Nat -> List (ByStr20)) = [($fundef_15 : List (ByStr20) -> Nat -> List (ByStr20))]
  ret ($retval_14 : Nat -> List (ByStr20))

fundef ($fundef_15 : List (ByStr20) -> Nat -> List (ByStr20)) ((f0 : List (ByStr20)) : List (ByStr20))
environment: ((fn : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20) , (g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
body:
  (fn : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_15]((fn : List (ByStr20) -> Nat -> List (ByStr20)))
  (g : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_15]((g : List (ByStr20) -> Nat -> List (ByStr20)))
  allocate_closure_env $fundef_17
  [$fundef_17]((f0 : List (ByStr20))) <- (f0 : List (ByStr20))
  [$fundef_17]((fn : List (ByStr20) -> Nat -> List (ByStr20))) <- (fn : List (ByStr20) -> Nat -> List (ByStr20))
  [$fundef_17]((g : List (ByStr20) -> Nat -> List (ByStr20))) <- (g : List (ByStr20) -> Nat -> List (ByStr20))
  ($retval_16 : Nat -> List (ByStr20)) = [($fundef_17 : Nat -> List (ByStr20))]
  ret ($retval_16 : Nat -> List (ByStr20))

fundef ($fundef_17 : Nat -> List (ByStr20)) ((n : Nat) : Nat)
environment: ((f0 : List (ByStr20)) : List (ByStr20) , (fn : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20) , (g : List (ByStr20) -> Nat -> List (ByStr20)) : List (ByStr20) -> Nat -> List (ByStr20))
body:
  (f0 : List (ByStr20)) <- [$fundef_17]((f0 : List (ByStr20)))
  (fn : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_17]((fn : List (ByStr20) -> Nat -> List (ByStr20)))
  (g : List (ByStr20) -> Nat -> List (ByStr20)) <- [$fundef_17]((g : List (ByStr20) -> Nat -> List (ByStr20)))
  match (n : Nat) with
  | Succ (n1 : Nat) =>
    ($fn_19 : Nat -> List (ByStr20)) = (fn : List (ByStr20) -> Nat -> List (ByStr20)) (f0 : List (ByStr20))
    ($fn_20 : List (ByStr20)) = ($fn_19 : Nat -> List (ByStr20)) (n1 : Nat)
    (res : List (ByStr20)) = ($fn_20 : List (ByStr20))
    ($g_21 : Nat -> List (ByStr20)) = (g : List (ByStr20) -> Nat -> List (ByStr20)) (res : List (ByStr20))
    ($g_22 : List (ByStr20)) = ($g_21 : Nat -> List (ByStr20)) (n1 : Nat)
    ($retval_18 : List (ByStr20)) = ($g_22 : List (ByStr20))
  | Zero =>
    ($retval_18 : List (ByStr20)) = (f0 : List (ByStr20))
  ret ($retval_18 : List (ByStr20))

fundef ($fundef_23 : () -> (Option (ByStr20) -> Nat -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)) ()
environment: ()
body:
  ($retval_24 : (Option (ByStr20) -> Nat -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)) = [($fundef_25 : (Option (ByStr20) -> Nat -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20))]
  ret ($retval_24 : (Option (ByStr20) -> Nat -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20))

fundef ($fundef_25 : (Option (ByStr20) -> Nat -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)) ((fn : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
environment: ()
body:
  allocate_closure_env $fundef_27
  [$fundef_27]((fn : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (fn : Option (ByStr20) -> Nat -> Option (ByStr20))
  ($retval_26 : Option (ByStr20) -> Nat -> Option (ByStr20)) = [($fundef_27 : Option (ByStr20) -> Nat -> Option (ByStr20))]
  ret ($retval_26 : Option (ByStr20) -> Nat -> Option (ByStr20))

fundef ($fundef_27 : Option (ByStr20) -> Nat -> Option (ByStr20)) ((g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
environment: ((fn : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
body:
  (fn : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_27]((fn : Option (ByStr20) -> Nat -> Option (ByStr20)))
  allocate_closure_env $fundef_29
  [$fundef_29]((fn : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (fn : Option (ByStr20) -> Nat -> Option (ByStr20))
  [$fundef_29]((g : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (g : Option (ByStr20) -> Nat -> Option (ByStr20))
  ($retval_28 : Nat -> Option (ByStr20)) = [($fundef_29 : Option (ByStr20) -> Nat -> Option (ByStr20))]
  ret ($retval_28 : Nat -> Option (ByStr20))

fundef ($fundef_29 : Option (ByStr20) -> Nat -> Option (ByStr20)) ((f0 : Option (ByStr20)) : Option (ByStr20))
environment: ((fn : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20) , (g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
body:
  (fn : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_29]((fn : Option (ByStr20) -> Nat -> Option (ByStr20)))
  (g : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_29]((g : Option (ByStr20) -> Nat -> Option (ByStr20)))
  allocate_closure_env $fundef_31
  [$fundef_31]((f0 : Option (ByStr20))) <- (f0 : Option (ByStr20))
  [$fundef_31]((fn : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (fn : Option (ByStr20) -> Nat -> Option (ByStr20))
  [$fundef_31]((g : Option (ByStr20) -> Nat -> Option (ByStr20))) <- (g : Option (ByStr20) -> Nat -> Option (ByStr20))
  ($retval_30 : Nat -> Option (ByStr20)) = [($fundef_31 : Nat -> Option (ByStr20))]
  ret ($retval_30 : Nat -> Option (ByStr20))

fundef ($fundef_31 : Nat -> Option (ByStr20)) ((n : Nat) : Nat)
environment: ((f0 : Option (ByStr20)) : Option (ByStr20) , (fn : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20) , (g : Option (ByStr20) -> Nat -> Option (ByStr20)) : Option (ByStr20) -> Nat -> Option (ByStr20))
body:
  (f0 : Option (ByStr20)) <- [$fundef_31]((f0 : Option (ByStr20)))
  (fn : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_31]((fn : Option (ByStr20) -> Nat -> Option (ByStr20)))
  (g : Option (ByStr20) -> Nat -> Option (ByStr20)) <- [$fundef_31]((g : Option (ByStr20) -> Nat -> Option (ByStr20)))
  match (n : Nat) with
  | Succ (n1 : Nat) =>
    ($fn_33 : Nat -> Option (ByStr20)) = (fn : Option (ByStr20) -> Nat -> Option (ByStr20)) (f0 : Option (ByStr20))
    ($fn_34 : Option (ByStr20)) = ($fn_33 : Nat -> Option (ByStr20)) (n1 : Nat)
    (res : Option (ByStr20)) = ($fn_34 : Option (ByStr20))
    ($g_35 : Nat -> Option (ByStr20)) = (g : Option (ByStr20) -> Nat -> Option (ByStr20)) (res : Option (ByStr20))
    ($g_36 : Option (ByStr20)) = ($g_35 : Nat -> Option (ByStr20)) (n1 : Nat)
    ($retval_32 : Option (ByStr20)) = ($g_36 : Option (ByStr20))
  | Zero =>
    ($retval_32 : Option (ByStr20)) = (f0 : Option (ByStr20))
  ret ($retval_32 : Option (ByStr20))

fundef ($fundef_37 : () -> (ByStr20 -> Nat -> ByStr20) -> ByStr20 -> Nat -> ByStr20) ()
environment: ()
body:
  ($retval_38 : (ByStr20 -> Nat -> ByStr20) -> ByStr20 -> Nat -> ByStr20) = [($fundef_39 : (ByStr20 -> Nat -> ByStr20) -> ByStr20 -> Nat -> ByStr20)]
  ret ($retval_38 : (ByStr20 -> Nat -> ByStr20) -> ByStr20 -> Nat -> ByStr20)

fundef ($fundef_39 : (ByStr20 -> Nat -> ByStr20) -> ByStr20 -> Nat -> ByStr20) ((fn : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_41
  [$fundef_41]((fn : ByStr20 -> Nat -> ByStr20)) <- (fn : ByStr20 -> Nat -> ByStr20)
  ($retval_40 : ByStr20 -> Nat -> ByStr20) = [($fundef_41 : ByStr20 -> Nat -> ByStr20)]
  ret ($retval_40 : ByStr20 -> Nat -> ByStr20)

fundef ($fundef_41 : ByStr20 -> Nat -> ByStr20) ((g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
environment: ((fn : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
body:
  (fn : ByStr20 -> Nat -> ByStr20) <- [$fundef_41]((fn : ByStr20 -> Nat -> ByStr20))
  allocate_closure_env $fundef_43
  [$fundef_43]((fn : ByStr20 -> Nat -> ByStr20)) <- (fn : ByStr20 -> Nat -> ByStr20)
  [$fundef_43]((g : ByStr20 -> Nat -> ByStr20)) <- (g : ByStr20 -> Nat -> ByStr20)
  ($retval_42 : Nat -> ByStr20) = [($fundef_43 : ByStr20 -> Nat -> ByStr20)]
  ret ($retval_42 : Nat -> ByStr20)

fundef ($fundef_43 : ByStr20 -> Nat -> ByStr20) ((f0 : ByStr20) : ByStr20)
environment: ((fn : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20 , (g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
body:
  (fn : ByStr20 -> Nat -> ByStr20) <- [$fundef_43]((fn : ByStr20 -> Nat -> ByStr20))
  (g : ByStr20 -> Nat -> ByStr20) <- [$fundef_43]((g : ByStr20 -> Nat -> ByStr20))
  allocate_closure_env $fundef_45
  [$fundef_45]((f0 : ByStr20)) <- (f0 : ByStr20)
  [$fundef_45]((fn : ByStr20 -> Nat -> ByStr20)) <- (fn : ByStr20 -> Nat -> ByStr20)
  [$fundef_45]((g : ByStr20 -> Nat -> ByStr20)) <- (g : ByStr20 -> Nat -> ByStr20)
  ($retval_44 : Nat -> ByStr20) = [($fundef_45 : Nat -> ByStr20)]
  ret ($retval_44 : Nat -> ByStr20)

fundef ($fundef_45 : Nat -> ByStr20) ((n : Nat) : Nat)
environment: ((f0 : ByStr20) : ByStr20 , (fn : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20 , (g : ByStr20 -> Nat -> ByStr20) : ByStr20 -> Nat -> ByStr20)
body:
  (f0 : ByStr20) <- [$fundef_45]((f0 : ByStr20))
  (fn : ByStr20 -> Nat -> ByStr20) <- [$fundef_45]((fn : ByStr20 -> Nat -> ByStr20))
  (g : ByStr20 -> Nat -> ByStr20) <- [$fundef_45]((g : ByStr20 -> Nat -> ByStr20))
  match (n : Nat) with
  | Succ (n1 : Nat) =>
    ($fn_47 : Nat -> ByStr20) = (fn : ByStr20 -> Nat -> ByStr20) (f0 : ByStr20)
    ($fn_48 : ByStr20) = ($fn_47 : Nat -> ByStr20) (n1 : Nat)
    (res : ByStr20) = ($fn_48 : ByStr20)
    ($g_49 : Nat -> ByStr20) = (g : ByStr20 -> Nat -> ByStr20) (res : ByStr20)
    ($g_50 : ByStr20) = ($g_49 : Nat -> ByStr20) (n1 : Nat)
    ($retval_46 : ByStr20) = ($g_50 : ByStr20)
  | Zero =>
    ($retval_46 : ByStr20) = (f0 : ByStr20)
  ret ($retval_46 : ByStr20)

fundef ($fundef_531 : Bool -> Bool -> Bool) ((b : Bool) : Bool)
environment: ()
body:
  allocate_closure_env $fundef_533
  [$fundef_533]((b : Bool)) <- (b : Bool)
  ($retval_532 : Bool -> Bool) = [($fundef_533 : Bool -> Bool)]
  ret ($retval_532 : Bool -> Bool)

fundef ($fundef_533 : Bool -> Bool) ((c : Bool) : Bool)
environment: ((b : Bool) : Bool)
body:
  (b : Bool) <- [$fundef_533]((b : Bool))
  match (b : Bool) with
  | False =>
    ($retval_534 : Bool) = False {  }
  | True =>
    ($retval_534 : Bool) = (c : Bool)
  ret ($retval_534 : Bool)

fundef ($fundef_527 : Bool -> Bool -> Bool) ((b : Bool) : Bool)
environment: ()
body:
  allocate_closure_env $fundef_529
  [$fundef_529]((b : Bool)) <- (b : Bool)
  ($retval_528 : Bool -> Bool) = [($fundef_529 : Bool -> Bool)]
  ret ($retval_528 : Bool -> Bool)

fundef ($fundef_529 : Bool -> Bool) ((c : Bool) : Bool)
environment: ((b : Bool) : Bool)
body:
  (b : Bool) <- [$fundef_529]((b : Bool))
  match (b : Bool) with
  | True =>
    ($retval_530 : Bool) = True {  }
  | False =>
    ($retval_530 : Bool) = (c : Bool)
  ret ($retval_530 : Bool)

fundef ($fundef_525 : Bool -> Bool) ((b : Bool) : Bool)
environment: ()
body:
  match (b : Bool) with
  | True =>
    ($retval_526 : Bool) = False {  }
  | False =>
    ($retval_526 : Bool) = True {  }
  ret ($retval_526 : Bool)

fundef ($fundef_625 : () -> (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> List (List (ByStr20))) ()
environment: ((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_625]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B))
  allocate_closure_env $fundef_627
  [$fundef_627]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
  ($retval_626 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> List (List (ByStr20))) = [($fundef_627 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> List (List (ByStr20)))]
  ret ($retval_626 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> List (List (ByStr20)))

fundef ($fundef_627 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> List (List (ByStr20))) ((f : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
environment: ((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_627]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B))
  (foldr : (List (ByStr20) -> List (List (ByStr20)) -> List (List (ByStr20))) -> List (List (ByStr20)) -> List (List (ByStr20)) -> List (List (ByStr20))) = (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) List (ByStr20) List (List (ByStr20))
  allocate_closure_env $fundef_629
  [$fundef_629]((f : List (ByStr20) -> Bool)) <- (f : List (ByStr20) -> Bool)
  (iter : List (ByStr20) -> List (List (ByStr20)) -> List (List (ByStr20))) = [($fundef_629 : List (ByStr20) -> List (List (ByStr20)) -> List (List (ByStr20)))]
  (init : List (List (ByStr20))) = Nil { List (ByStr20) }
  ($foldr_634 : List (List (ByStr20)) -> List (List (ByStr20)) -> List (List (ByStr20))) = (foldr : (List (ByStr20) -> List (List (ByStr20)) -> List (List (ByStr20))) -> List (List (ByStr20)) -> List (List (ByStr20)) -> List (List (ByStr20))) (iter : List (ByStr20) -> List (List (ByStr20)) -> List (List (ByStr20)))
  ($foldr_635 : List (List (ByStr20)) -> List (List (ByStr20))) = ($foldr_634 : List (List (ByStr20)) -> List (List (ByStr20)) -> List (List (ByStr20))) (init : List (List (ByStr20)))
  ($retval_628 : List (List (ByStr20)) -> List (List (ByStr20))) = ($foldr_635 : List (List (ByStr20)) -> List (List (ByStr20)))
  ret ($retval_628 : List (List (ByStr20)) -> List (List (ByStr20)))

fundef ($fundef_629 : List (ByStr20) -> List (List (ByStr20)) -> List (List (ByStr20))) ((h : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
body:
  (f : List (ByStr20) -> Bool) <- [$fundef_629]((f : List (ByStr20) -> Bool))
  allocate_closure_env $fundef_631
  [$fundef_631]((f : List (ByStr20) -> Bool)) <- (f : List (ByStr20) -> Bool)
  [$fundef_631]((h : List (ByStr20))) <- (h : List (ByStr20))
  ($retval_630 : List (List (ByStr20)) -> List (List (ByStr20))) = [($fundef_631 : List (List (ByStr20)) -> List (List (ByStr20)))]
  ret ($retval_630 : List (List (ByStr20)) -> List (List (ByStr20)))

fundef ($fundef_631 : List (List (ByStr20)) -> List (List (ByStr20))) ((z : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((f : List (ByStr20) -> Bool) : List (ByStr20) -> Bool , (h : List (ByStr20)) : List (ByStr20))
body:
  (f : List (ByStr20) -> Bool) <- [$fundef_631]((f : List (ByStr20) -> Bool))
  (h : List (ByStr20)) <- [$fundef_631]((h : List (ByStr20)))
  ($f_633 : Bool) = (f : List (ByStr20) -> Bool) (h : List (ByStr20))
  (h1 : Bool) = ($f_633 : Bool)
  match (h1 : Bool) with
  | True =>
    ($retval_632 : List (List (ByStr20))) = Cons { List (ByStr20) }(h : List (ByStr20)) (z : List (List (ByStr20)))
  | False =>
    ($retval_632 : List (List (ByStr20))) = (z : List (List (ByStr20)))
  ret ($retval_632 : List (List (ByStr20)))

fundef ($fundef_636 : () -> (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> List (Option (ByStr20))) ()
environment: ((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_636]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B))
  allocate_closure_env $fundef_638
  [$fundef_638]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
  ($retval_637 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> List (Option (ByStr20))) = [($fundef_638 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> List (Option (ByStr20)))]
  ret ($retval_637 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> List (Option (ByStr20)))

fundef ($fundef_638 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> List (Option (ByStr20))) ((f : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
environment: ((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_638]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B))
  (foldr : (Option (ByStr20) -> List (Option (ByStr20)) -> List (Option (ByStr20))) -> List (Option (ByStr20)) -> List (Option (ByStr20)) -> List (Option (ByStr20))) = (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) Option (ByStr20) List (Option (ByStr20))
  allocate_closure_env $fundef_640
  [$fundef_640]((f : Option (ByStr20) -> Bool)) <- (f : Option (ByStr20) -> Bool)
  (iter : Option (ByStr20) -> List (Option (ByStr20)) -> List (Option (ByStr20))) = [($fundef_640 : Option (ByStr20) -> List (Option (ByStr20)) -> List (Option (ByStr20)))]
  (init : List (Option (ByStr20))) = Nil { Option (ByStr20) }
  ($foldr_645 : List (Option (ByStr20)) -> List (Option (ByStr20)) -> List (Option (ByStr20))) = (foldr : (Option (ByStr20) -> List (Option (ByStr20)) -> List (Option (ByStr20))) -> List (Option (ByStr20)) -> List (Option (ByStr20)) -> List (Option (ByStr20))) (iter : Option (ByStr20) -> List (Option (ByStr20)) -> List (Option (ByStr20)))
  ($foldr_646 : List (Option (ByStr20)) -> List (Option (ByStr20))) = ($foldr_645 : List (Option (ByStr20)) -> List (Option (ByStr20)) -> List (Option (ByStr20))) (init : List (Option (ByStr20)))
  ($retval_639 : List (Option (ByStr20)) -> List (Option (ByStr20))) = ($foldr_646 : List (Option (ByStr20)) -> List (Option (ByStr20)))
  ret ($retval_639 : List (Option (ByStr20)) -> List (Option (ByStr20)))

fundef ($fundef_640 : Option (ByStr20) -> List (Option (ByStr20)) -> List (Option (ByStr20))) ((h : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
body:
  (f : Option (ByStr20) -> Bool) <- [$fundef_640]((f : Option (ByStr20) -> Bool))
  allocate_closure_env $fundef_642
  [$fundef_642]((f : Option (ByStr20) -> Bool)) <- (f : Option (ByStr20) -> Bool)
  [$fundef_642]((h : Option (ByStr20))) <- (h : Option (ByStr20))
  ($retval_641 : List (Option (ByStr20)) -> List (Option (ByStr20))) = [($fundef_642 : List (Option (ByStr20)) -> List (Option (ByStr20)))]
  ret ($retval_641 : List (Option (ByStr20)) -> List (Option (ByStr20)))

fundef ($fundef_642 : List (Option (ByStr20)) -> List (Option (ByStr20))) ((z : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((f : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool , (h : Option (ByStr20)) : Option (ByStr20))
body:
  (f : Option (ByStr20) -> Bool) <- [$fundef_642]((f : Option (ByStr20) -> Bool))
  (h : Option (ByStr20)) <- [$fundef_642]((h : Option (ByStr20)))
  ($f_644 : Bool) = (f : Option (ByStr20) -> Bool) (h : Option (ByStr20))
  (h1 : Bool) = ($f_644 : Bool)
  match (h1 : Bool) with
  | True =>
    ($retval_643 : List (Option (ByStr20))) = Cons { Option (ByStr20) }(h : Option (ByStr20)) (z : List (Option (ByStr20)))
  | False =>
    ($retval_643 : List (Option (ByStr20))) = (z : List (Option (ByStr20)))
  ret ($retval_643 : List (Option (ByStr20)))

fundef ($fundef_647 : () -> (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20)) ()
environment: ((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_647]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B))
  allocate_closure_env $fundef_649
  [$fundef_649]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
  ($retval_648 : (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20)) = [($fundef_649 : (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20))]
  ret ($retval_648 : (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20))

fundef ($fundef_649 : (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20)) ((f : ByStr20 -> Bool) : ByStr20 -> Bool)
environment: ((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_649]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B))
  (foldr : (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) ByStr20 List (ByStr20)
  allocate_closure_env $fundef_651
  [$fundef_651]((f : ByStr20 -> Bool)) <- (f : ByStr20 -> Bool)
  (iter : ByStr20 -> List (ByStr20) -> List (ByStr20)) = [($fundef_651 : ByStr20 -> List (ByStr20) -> List (ByStr20))]
  (init : List (ByStr20)) = Nil { ByStr20 }
  ($foldr_656 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) = (foldr : (ByStr20 -> List (ByStr20) -> List (ByStr20)) -> List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (iter : ByStr20 -> List (ByStr20) -> List (ByStr20))
  ($foldr_657 : List (ByStr20) -> List (ByStr20)) = ($foldr_656 : List (ByStr20) -> List (ByStr20) -> List (ByStr20)) (init : List (ByStr20))
  ($retval_650 : List (ByStr20) -> List (ByStr20)) = ($foldr_657 : List (ByStr20) -> List (ByStr20))
  ret ($retval_650 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_651 : ByStr20 -> List (ByStr20) -> List (ByStr20)) ((h : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> Bool) : ByStr20 -> Bool)
body:
  (f : ByStr20 -> Bool) <- [$fundef_651]((f : ByStr20 -> Bool))
  allocate_closure_env $fundef_653
  [$fundef_653]((f : ByStr20 -> Bool)) <- (f : ByStr20 -> Bool)
  [$fundef_653]((h : ByStr20)) <- (h : ByStr20)
  ($retval_652 : List (ByStr20) -> List (ByStr20)) = [($fundef_653 : List (ByStr20) -> List (ByStr20))]
  ret ($retval_652 : List (ByStr20) -> List (ByStr20))

fundef ($fundef_653 : List (ByStr20) -> List (ByStr20)) ((z : List (ByStr20)) : List (ByStr20))
environment: ((f : ByStr20 -> Bool) : ByStr20 -> Bool , (h : ByStr20) : ByStr20)
body:
  (f : ByStr20 -> Bool) <- [$fundef_653]((f : ByStr20 -> Bool))
  (h : ByStr20) <- [$fundef_653]((h : ByStr20))
  ($f_655 : Bool) = (f : ByStr20 -> Bool) (h : ByStr20)
  (h1 : Bool) = ($f_655 : Bool)
  match (h1 : Bool) with
  | True =>
    ($retval_654 : List (ByStr20)) = Cons { ByStr20 }(h : ByStr20) (z : List (ByStr20))
  | False =>
    ($retval_654 : List (ByStr20)) = (z : List (ByStr20))
  ret ($retval_654 : List (ByStr20))

fundef ($fundef_583 : () -> (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20))) ()
environment: ((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_583]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B))
  allocate_closure_env $fundef_585
  [$fundef_585]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
  ($retval_584 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20))) = [($fundef_585 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20)))]
  ret ($retval_584 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20)))

fundef ($fundef_585 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20))) ((p : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
environment: ((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_585]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B))
  (foldk : (Option (List (ByStr20)) -> List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) -> Option (List (ByStr20)) -> List (List (ByStr20)) -> Option (List (ByStr20))) = (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) List (ByStr20) Option (List (ByStr20))
  (init : Option (List (ByStr20))) = None { List (ByStr20) }
  allocate_closure_env $fundef_587
  [$fundef_587]((init : Option (List (ByStr20)))) <- (init : Option (List (ByStr20)))
  [$fundef_587]((p : List (ByStr20) -> Bool)) <- (p : List (ByStr20) -> Bool)
  (predicate_step : Option (List (ByStr20)) -> List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) = [($fundef_587 : Option (List (ByStr20)) -> List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20)))]
  ($foldk_595 : Option (List (ByStr20)) -> List (List (ByStr20)) -> Option (List (ByStr20))) = (foldk : (Option (List (ByStr20)) -> List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) -> Option (List (ByStr20)) -> List (List (ByStr20)) -> Option (List (ByStr20))) (predicate_step : Option (List (ByStr20)) -> List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20)))
  ($foldk_596 : List (List (ByStr20)) -> Option (List (ByStr20))) = ($foldk_595 : Option (List (ByStr20)) -> List (List (ByStr20)) -> Option (List (ByStr20))) (init : Option (List (ByStr20)))
  ($retval_586 : List (List (ByStr20)) -> Option (List (ByStr20))) = ($foldk_596 : List (List (ByStr20)) -> Option (List (ByStr20)))
  ret ($retval_586 : List (List (ByStr20)) -> Option (List (ByStr20)))

fundef ($fundef_587 : Option (List (ByStr20)) -> List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) ((ignore : Option (List (ByStr20))) : Option (List (ByStr20)))
environment: ((init : Option (List (ByStr20))) : Option (List (ByStr20)) , (p : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
body:
  (init : Option (List (ByStr20))) <- [$fundef_587]((init : Option (List (ByStr20))))
  (p : List (ByStr20) -> Bool) <- [$fundef_587]((p : List (ByStr20) -> Bool))
  allocate_closure_env $fundef_589
  [$fundef_589]((init : Option (List (ByStr20)))) <- (init : Option (List (ByStr20)))
  [$fundef_589]((p : List (ByStr20) -> Bool)) <- (p : List (ByStr20) -> Bool)
  ($retval_588 : List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) = [($fundef_589 : List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20)))]
  ret ($retval_588 : List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20)))

fundef ($fundef_589 : List (ByStr20) -> (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) ((x : List (ByStr20)) : List (ByStr20))
environment: ((init : Option (List (ByStr20))) : Option (List (ByStr20)) , (p : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
body:
  (init : Option (List (ByStr20))) <- [$fundef_589]((init : Option (List (ByStr20))))
  (p : List (ByStr20) -> Bool) <- [$fundef_589]((p : List (ByStr20) -> Bool))
  allocate_closure_env $fundef_591
  [$fundef_591]((init : Option (List (ByStr20)))) <- (init : Option (List (ByStr20)))
  [$fundef_591]((p : List (ByStr20) -> Bool)) <- (p : List (ByStr20) -> Bool)
  [$fundef_591]((x : List (ByStr20))) <- (x : List (ByStr20))
  ($retval_590 : (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) = [($fundef_591 : (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20)))]
  ret ($retval_590 : (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20)))

fundef ($fundef_591 : (Option (List (ByStr20)) -> Option (List (ByStr20))) -> Option (List (ByStr20))) ((recurse : Option (List (ByStr20)) -> Option (List (ByStr20))) : Option (List (ByStr20)) -> Option (List (ByStr20)))
environment: ((init : Option (List (ByStr20))) : Option (List (ByStr20)) , (p : List (ByStr20) -> Bool) : List (ByStr20) -> Bool , (x : List (ByStr20)) : List (ByStr20))
body:
  (init : Option (List (ByStr20))) <- [$fundef_591]((init : Option (List (ByStr20))))
  (p : List (ByStr20) -> Bool) <- [$fundef_591]((p : List (ByStr20) -> Bool))
  (x : List (ByStr20)) <- [$fundef_591]((x : List (ByStr20)))
  ($p_593 : Bool) = (p : List (ByStr20) -> Bool) (x : List (ByStr20))
  (p_x : Bool) = ($p_593 : Bool)
  match (p_x : Bool) with
  | True =>
    ($retval_592 : Option (List (ByStr20))) = Some { List (ByStr20) }(x : List (ByStr20))
  | False =>
    ($recurse_594 : Option (List (ByStr20))) = (recurse : Option (List (ByStr20)) -> Option (List (ByStr20))) (init : Option (List (ByStr20)))
    ($retval_592 : Option (List (ByStr20))) = ($recurse_594 : Option (List (ByStr20)))
  ret ($retval_592 : Option (List (ByStr20)))

fundef ($fundef_597 : () -> (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) ()
environment: ((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_597]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B))
  allocate_closure_env $fundef_599
  [$fundef_599]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
  ($retval_598 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) = [($fundef_599 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20)))]
  ret ($retval_598 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20)))

fundef ($fundef_599 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) ((p : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
environment: ((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_599]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B))
  (foldk : (Option (Option (ByStr20)) -> Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) = (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) Option (ByStr20) Option (Option (ByStr20))
  (init : Option (Option (ByStr20))) = None { Option (ByStr20) }
  allocate_closure_env $fundef_601
  [$fundef_601]((init : Option (Option (ByStr20)))) <- (init : Option (Option (ByStr20)))
  [$fundef_601]((p : Option (ByStr20) -> Bool)) <- (p : Option (ByStr20) -> Bool)
  (predicate_step : Option (Option (ByStr20)) -> Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) = [($fundef_601 : Option (Option (ByStr20)) -> Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)))]
  ($foldk_609 : Option (Option (ByStr20)) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) = (foldk : (Option (Option (ByStr20)) -> Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) (predicate_step : Option (Option (ByStr20)) -> Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)))
  ($foldk_610 : List (Option (ByStr20)) -> Option (Option (ByStr20))) = ($foldk_609 : Option (Option (ByStr20)) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) (init : Option (Option (ByStr20)))
  ($retval_600 : List (Option (ByStr20)) -> Option (Option (ByStr20))) = ($foldk_610 : List (Option (ByStr20)) -> Option (Option (ByStr20)))
  ret ($retval_600 : List (Option (ByStr20)) -> Option (Option (ByStr20)))

fundef ($fundef_601 : Option (Option (ByStr20)) -> Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) ((ignore : Option (Option (ByStr20))) : Option (Option (ByStr20)))
environment: ((init : Option (Option (ByStr20))) : Option (Option (ByStr20)) , (p : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
body:
  (init : Option (Option (ByStr20))) <- [$fundef_601]((init : Option (Option (ByStr20))))
  (p : Option (ByStr20) -> Bool) <- [$fundef_601]((p : Option (ByStr20) -> Bool))
  allocate_closure_env $fundef_603
  [$fundef_603]((init : Option (Option (ByStr20)))) <- (init : Option (Option (ByStr20)))
  [$fundef_603]((p : Option (ByStr20) -> Bool)) <- (p : Option (ByStr20) -> Bool)
  ($retval_602 : Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) = [($fundef_603 : Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)))]
  ret ($retval_602 : Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)))

fundef ($fundef_603 : Option (ByStr20) -> (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) ((x : Option (ByStr20)) : Option (ByStr20))
environment: ((init : Option (Option (ByStr20))) : Option (Option (ByStr20)) , (p : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
body:
  (init : Option (Option (ByStr20))) <- [$fundef_603]((init : Option (Option (ByStr20))))
  (p : Option (ByStr20) -> Bool) <- [$fundef_603]((p : Option (ByStr20) -> Bool))
  allocate_closure_env $fundef_605
  [$fundef_605]((init : Option (Option (ByStr20)))) <- (init : Option (Option (ByStr20)))
  [$fundef_605]((p : Option (ByStr20) -> Bool)) <- (p : Option (ByStr20) -> Bool)
  [$fundef_605]((x : Option (ByStr20))) <- (x : Option (ByStr20))
  ($retval_604 : (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) = [($fundef_605 : (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)))]
  ret ($retval_604 : (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20)))

fundef ($fundef_605 : (Option (Option (ByStr20)) -> Option (Option (ByStr20))) -> Option (Option (ByStr20))) ((recurse : Option (Option (ByStr20)) -> Option (Option (ByStr20))) : Option (Option (ByStr20)) -> Option (Option (ByStr20)))
environment: ((init : Option (Option (ByStr20))) : Option (Option (ByStr20)) , (p : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool , (x : Option (ByStr20)) : Option (ByStr20))
body:
  (init : Option (Option (ByStr20))) <- [$fundef_605]((init : Option (Option (ByStr20))))
  (p : Option (ByStr20) -> Bool) <- [$fundef_605]((p : Option (ByStr20) -> Bool))
  (x : Option (ByStr20)) <- [$fundef_605]((x : Option (ByStr20)))
  ($p_607 : Bool) = (p : Option (ByStr20) -> Bool) (x : Option (ByStr20))
  (p_x : Bool) = ($p_607 : Bool)
  match (p_x : Bool) with
  | True =>
    ($retval_606 : Option (Option (ByStr20))) = Some { Option (ByStr20) }(x : Option (ByStr20))
  | False =>
    ($recurse_608 : Option (Option (ByStr20))) = (recurse : Option (Option (ByStr20)) -> Option (Option (ByStr20))) (init : Option (Option (ByStr20)))
    ($retval_606 : Option (Option (ByStr20))) = ($recurse_608 : Option (Option (ByStr20)))
  ret ($retval_606 : Option (Option (ByStr20)))

fundef ($fundef_611 : () -> (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20)) ()
environment: ((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_611]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B))
  allocate_closure_env $fundef_613
  [$fundef_613]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
  ($retval_612 : (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20)) = [($fundef_613 : (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20))]
  ret ($retval_612 : (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20))

fundef ($fundef_613 : (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20)) ((p : ByStr20 -> Bool) : ByStr20 -> Bool)
environment: ((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
body:
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) <- [$fundef_613]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B))
  (foldk : (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) ByStr20 Option (ByStr20)
  (init : Option (ByStr20)) = None { ByStr20 }
  allocate_closure_env $fundef_615
  [$fundef_615]((init : Option (ByStr20))) <- (init : Option (ByStr20))
  [$fundef_615]((p : ByStr20 -> Bool)) <- (p : ByStr20 -> Bool)
  (predicate_step : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = [($fundef_615 : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))]
  ($foldk_623 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) = (foldk : (Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) (predicate_step : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))
  ($foldk_624 : List (ByStr20) -> Option (ByStr20)) = ($foldk_623 : Option (ByStr20) -> List (ByStr20) -> Option (ByStr20)) (init : Option (ByStr20))
  ($retval_614 : List (ByStr20) -> Option (ByStr20)) = ($foldk_624 : List (ByStr20) -> Option (ByStr20))
  ret ($retval_614 : List (ByStr20) -> Option (ByStr20))

fundef ($fundef_615 : Option (ByStr20) -> ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) ((ignore : Option (ByStr20)) : Option (ByStr20))
environment: ((init : Option (ByStr20)) : Option (ByStr20) , (p : ByStr20 -> Bool) : ByStr20 -> Bool)
body:
  (init : Option (ByStr20)) <- [$fundef_615]((init : Option (ByStr20)))
  (p : ByStr20 -> Bool) <- [$fundef_615]((p : ByStr20 -> Bool))
  allocate_closure_env $fundef_617
  [$fundef_617]((init : Option (ByStr20))) <- (init : Option (ByStr20))
  [$fundef_617]((p : ByStr20 -> Bool)) <- (p : ByStr20 -> Bool)
  ($retval_616 : ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = [($fundef_617 : ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_616 : ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_617 : ByStr20 -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) ((x : ByStr20) : ByStr20)
environment: ((init : Option (ByStr20)) : Option (ByStr20) , (p : ByStr20 -> Bool) : ByStr20 -> Bool)
body:
  (init : Option (ByStr20)) <- [$fundef_617]((init : Option (ByStr20)))
  (p : ByStr20 -> Bool) <- [$fundef_617]((p : ByStr20 -> Bool))
  allocate_closure_env $fundef_619
  [$fundef_619]((init : Option (ByStr20))) <- (init : Option (ByStr20))
  [$fundef_619]((p : ByStr20 -> Bool)) <- (p : ByStr20 -> Bool)
  [$fundef_619]((x : ByStr20)) <- (x : ByStr20)
  ($retval_618 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) = [($fundef_619 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))]
  ret ($retval_618 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20))

fundef ($fundef_619 : (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) ((recurse : Option (ByStr20) -> Option (ByStr20)) : Option (ByStr20) -> Option (ByStr20))
environment: ((init : Option (ByStr20)) : Option (ByStr20) , (p : ByStr20 -> Bool) : ByStr20 -> Bool , (x : ByStr20) : ByStr20)
body:
  (init : Option (ByStr20)) <- [$fundef_619]((init : Option (ByStr20)))
  (p : ByStr20 -> Bool) <- [$fundef_619]((p : ByStr20 -> Bool))
  (x : ByStr20) <- [$fundef_619]((x : ByStr20))
  ($p_621 : Bool) = (p : ByStr20 -> Bool) (x : ByStr20)
  (p_x : Bool) = ($p_621 : Bool)
  match (p_x : Bool) with
  | True =>
    ($retval_620 : Option (ByStr20)) = Some { ByStr20 }(x : ByStr20)
  | False =>
    ($recurse_622 : Option (ByStr20)) = (recurse : Option (ByStr20) -> Option (ByStr20)) (init : Option (ByStr20))
    ($retval_620 : Option (ByStr20)) = ($recurse_622 : Option (ByStr20))
  ret ($retval_620 : Option (ByStr20))

fundef ($fundef_559 : () -> (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool) ()
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_559]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  allocate_closure_env $fundef_561
  [$fundef_561]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  ($retval_560 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool) = [($fundef_561 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool)]
  ret ($retval_560 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool)

fundef ($fundef_561 : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool) ((p : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_561]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  allocate_closure_env $fundef_563
  [$fundef_563]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  [$fundef_563]((p : List (ByStr20) -> Bool)) <- (p : List (ByStr20) -> Bool)
  ($retval_562 : List (List (ByStr20)) -> Bool) = [($fundef_563 : List (List (ByStr20)) -> Bool)]
  ret ($retval_562 : List (List (ByStr20)) -> Bool)

fundef ($fundef_563 : List (List (ByStr20)) -> Bool) ((ls : List (List (ByStr20))) : List (List (ByStr20)))
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A) , (p : List (ByStr20) -> Bool) : List (ByStr20) -> Bool)
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_563]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  (p : List (ByStr20) -> Bool) <- [$fundef_563]((p : List (ByStr20) -> Bool))
  (find : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20))) = (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) List (ByStr20)
  ($find_565 : List (List (ByStr20)) -> Option (List (ByStr20))) = (find : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20))) (p : List (ByStr20) -> Bool)
  ($find_566 : Option (List (ByStr20))) = ($find_565 : List (List (ByStr20)) -> Option (List (ByStr20))) (ls : List (List (ByStr20)))
  (search : Option (List (ByStr20))) = ($find_566 : Option (List (ByStr20)))
  match (search : Option (List (ByStr20))) with
  | Some ($search_0 : List (ByStr20)) =>
    ($retval_564 : Bool) = True {  }
  | None =>
    ($retval_564 : Bool) = False {  }
  ret ($retval_564 : Bool)

fundef ($fundef_567 : () -> (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool) ()
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_567]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  allocate_closure_env $fundef_569
  [$fundef_569]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  ($retval_568 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool) = [($fundef_569 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool)]
  ret ($retval_568 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool)

fundef ($fundef_569 : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool) ((p : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_569]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  allocate_closure_env $fundef_571
  [$fundef_571]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  [$fundef_571]((p : Option (ByStr20) -> Bool)) <- (p : Option (ByStr20) -> Bool)
  ($retval_570 : List (Option (ByStr20)) -> Bool) = [($fundef_571 : List (Option (ByStr20)) -> Bool)]
  ret ($retval_570 : List (Option (ByStr20)) -> Bool)

fundef ($fundef_571 : List (Option (ByStr20)) -> Bool) ((ls : List (Option (ByStr20))) : List (Option (ByStr20)))
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A) , (p : Option (ByStr20) -> Bool) : Option (ByStr20) -> Bool)
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_571]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  (p : Option (ByStr20) -> Bool) <- [$fundef_571]((p : Option (ByStr20) -> Bool))
  (find : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) = (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) Option (ByStr20)
  ($find_573 : List (Option (ByStr20)) -> Option (Option (ByStr20))) = (find : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20))) (p : Option (ByStr20) -> Bool)
  ($find_574 : Option (Option (ByStr20))) = ($find_573 : List (Option (ByStr20)) -> Option (Option (ByStr20))) (ls : List (Option (ByStr20)))
  (search : Option (Option (ByStr20))) = ($find_574 : Option (Option (ByStr20)))
  match (search : Option (Option (ByStr20))) with
  | Some ($search_1 : Option (ByStr20)) =>
    ($retval_572 : Bool) = True {  }
  | None =>
    ($retval_572 : Bool) = False {  }
  ret ($retval_572 : Bool)

fundef ($fundef_575 : () -> (ByStr20 -> Bool) -> List (ByStr20) -> Bool) ()
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_575]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  allocate_closure_env $fundef_577
  [$fundef_577]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  ($retval_576 : (ByStr20 -> Bool) -> List (ByStr20) -> Bool) = [($fundef_577 : (ByStr20 -> Bool) -> List (ByStr20) -> Bool)]
  ret ($retval_576 : (ByStr20 -> Bool) -> List (ByStr20) -> Bool)

fundef ($fundef_577 : (ByStr20 -> Bool) -> List (ByStr20) -> Bool) ((p : ByStr20 -> Bool) : ByStr20 -> Bool)
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_577]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  allocate_closure_env $fundef_579
  [$fundef_579]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  [$fundef_579]((p : ByStr20 -> Bool)) <- (p : ByStr20 -> Bool)
  ($retval_578 : List (ByStr20) -> Bool) = [($fundef_579 : List (ByStr20) -> Bool)]
  ret ($retval_578 : List (ByStr20) -> Bool)

fundef ($fundef_579 : List (ByStr20) -> Bool) ((ls : List (ByStr20)) : List (ByStr20))
environment: ((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A) , (p : ByStr20 -> Bool) : ByStr20 -> Bool)
body:
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) <- [$fundef_579]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)))
  (p : ByStr20 -> Bool) <- [$fundef_579]((p : ByStr20 -> Bool))
  (find : (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20)) = (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) ByStr20
  ($find_581 : List (ByStr20) -> Option (ByStr20)) = (find : (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20)) (p : ByStr20 -> Bool)
  ($find_582 : Option (ByStr20)) = ($find_581 : List (ByStr20) -> Option (ByStr20)) (ls : List (ByStr20))
  (search : Option (ByStr20)) = ($find_582 : Option (ByStr20))
  match (search : Option (ByStr20)) with
  | Some ($search_2 : ByStr20) =>
    ($retval_580 : Bool) = True {  }
  | None =>
    ($retval_580 : Bool) = False {  }
  ret ($retval_580 : Bool)

fundef ($fundef_535 : () -> (List (ByStr20) -> List (ByStr20) -> Bool) -> List (ByStr20) -> List (List (ByStr20)) -> Bool) ()
environment: ((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_535]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  allocate_closure_env $fundef_537
  [$fundef_537]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  ($retval_536 : (List (ByStr20) -> List (ByStr20) -> Bool) -> List (ByStr20) -> List (List (ByStr20)) -> Bool) = [($fundef_537 : (List (ByStr20) -> List (ByStr20) -> Bool) -> List (ByStr20) -> List (List (ByStr20)) -> Bool)]
  ret ($retval_536 : (List (ByStr20) -> List (ByStr20) -> Bool) -> List (ByStr20) -> List (List (ByStr20)) -> Bool)

fundef ($fundef_537 : (List (ByStr20) -> List (ByStr20) -> Bool) -> List (ByStr20) -> List (List (ByStr20)) -> Bool) ((f : List (ByStr20) -> List (ByStr20) -> Bool) : List (ByStr20) -> List (ByStr20) -> Bool)
environment: ((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_537]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  allocate_closure_env $fundef_539
  [$fundef_539]((f : List (ByStr20) -> List (ByStr20) -> Bool)) <- (f : List (ByStr20) -> List (ByStr20) -> Bool)
  [$fundef_539]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  ($retval_538 : List (ByStr20) -> List (List (ByStr20)) -> Bool) = [($fundef_539 : List (ByStr20) -> List (List (ByStr20)) -> Bool)]
  ret ($retval_538 : List (ByStr20) -> List (List (ByStr20)) -> Bool)

fundef ($fundef_539 : List (ByStr20) -> List (List (ByStr20)) -> Bool) ((m : List (ByStr20)) : List (ByStr20))
environment: ((f : List (ByStr20) -> List (ByStr20) -> Bool) : List (ByStr20) -> List (ByStr20) -> Bool , (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (f : List (ByStr20) -> List (ByStr20) -> Bool) <- [$fundef_539]((f : List (ByStr20) -> List (ByStr20) -> Bool))
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_539]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  ($f_541 : List (ByStr20) -> Bool) = (f : List (ByStr20) -> List (ByStr20) -> Bool) (m : List (ByStr20))
  (ex_pred : List (ByStr20) -> Bool) = ($f_541 : List (ByStr20) -> Bool)
  (ex : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool) = (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) List (ByStr20)
  ($ex_542 : List (List (ByStr20)) -> Bool) = (ex : (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool) (ex_pred : List (ByStr20) -> Bool)
  ($retval_540 : List (List (ByStr20)) -> Bool) = ($ex_542 : List (List (ByStr20)) -> Bool)
  ret ($retval_540 : List (List (ByStr20)) -> Bool)

fundef ($fundef_543 : () -> (Option (ByStr20) -> Option (ByStr20) -> Bool) -> Option (ByStr20) -> List (Option (ByStr20)) -> Bool) ()
environment: ((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_543]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  allocate_closure_env $fundef_545
  [$fundef_545]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  ($retval_544 : (Option (ByStr20) -> Option (ByStr20) -> Bool) -> Option (ByStr20) -> List (Option (ByStr20)) -> Bool) = [($fundef_545 : (Option (ByStr20) -> Option (ByStr20) -> Bool) -> Option (ByStr20) -> List (Option (ByStr20)) -> Bool)]
  ret ($retval_544 : (Option (ByStr20) -> Option (ByStr20) -> Bool) -> Option (ByStr20) -> List (Option (ByStr20)) -> Bool)

fundef ($fundef_545 : (Option (ByStr20) -> Option (ByStr20) -> Bool) -> Option (ByStr20) -> List (Option (ByStr20)) -> Bool) ((f : Option (ByStr20) -> Option (ByStr20) -> Bool) : Option (ByStr20) -> Option (ByStr20) -> Bool)
environment: ((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_545]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  allocate_closure_env $fundef_547
  [$fundef_547]((f : Option (ByStr20) -> Option (ByStr20) -> Bool)) <- (f : Option (ByStr20) -> Option (ByStr20) -> Bool)
  [$fundef_547]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  ($retval_546 : Option (ByStr20) -> List (Option (ByStr20)) -> Bool) = [($fundef_547 : Option (ByStr20) -> List (Option (ByStr20)) -> Bool)]
  ret ($retval_546 : Option (ByStr20) -> List (Option (ByStr20)) -> Bool)

fundef ($fundef_547 : Option (ByStr20) -> List (Option (ByStr20)) -> Bool) ((m : Option (ByStr20)) : Option (ByStr20))
environment: ((f : Option (ByStr20) -> Option (ByStr20) -> Bool) : Option (ByStr20) -> Option (ByStr20) -> Bool , (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (f : Option (ByStr20) -> Option (ByStr20) -> Bool) <- [$fundef_547]((f : Option (ByStr20) -> Option (ByStr20) -> Bool))
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_547]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  ($f_549 : Option (ByStr20) -> Bool) = (f : Option (ByStr20) -> Option (ByStr20) -> Bool) (m : Option (ByStr20))
  (ex_pred : Option (ByStr20) -> Bool) = ($f_549 : Option (ByStr20) -> Bool)
  (ex : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool) = (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) Option (ByStr20)
  ($ex_550 : List (Option (ByStr20)) -> Bool) = (ex : (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool) (ex_pred : Option (ByStr20) -> Bool)
  ($retval_548 : List (Option (ByStr20)) -> Bool) = ($ex_550 : List (Option (ByStr20)) -> Bool)
  ret ($retval_548 : List (Option (ByStr20)) -> Bool)

fundef ($fundef_551 : () -> (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool) ()
environment: ((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_551]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  allocate_closure_env $fundef_553
  [$fundef_553]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  ($retval_552 : (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool) = [($fundef_553 : (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool)]
  ret ($retval_552 : (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool)

fundef ($fundef_553 : (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool) ((f : ByStr20 -> ByStr20 -> Bool) : ByStr20 -> ByStr20 -> Bool)
environment: ((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_553]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  allocate_closure_env $fundef_555
  [$fundef_555]((f : ByStr20 -> ByStr20 -> Bool)) <- (f : ByStr20 -> ByStr20 -> Bool)
  [$fundef_555]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  ($retval_554 : ByStr20 -> List (ByStr20) -> Bool) = [($fundef_555 : ByStr20 -> List (ByStr20) -> Bool)]
  ret ($retval_554 : ByStr20 -> List (ByStr20) -> Bool)

fundef ($fundef_555 : ByStr20 -> List (ByStr20) -> Bool) ((m : ByStr20) : ByStr20)
environment: ((f : ByStr20 -> ByStr20 -> Bool) : ByStr20 -> ByStr20 -> Bool , (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
body:
  (f : ByStr20 -> ByStr20 -> Bool) <- [$fundef_555]((f : ByStr20 -> ByStr20 -> Bool))
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) <- [$fundef_555]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool))
  ($f_557 : ByStr20 -> Bool) = (f : ByStr20 -> ByStr20 -> Bool) (m : ByStr20)
  (ex_pred : ByStr20 -> Bool) = ($f_557 : ByStr20 -> Bool)
  (ex : (ByStr20 -> Bool) -> List (ByStr20) -> Bool) = (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) ByStr20
  ($ex_558 : List (ByStr20) -> Bool) = (ex : (ByStr20 -> Bool) -> List (ByStr20) -> Bool) (ex_pred : ByStr20 -> Bool)
  ($retval_556 : List (ByStr20) -> Bool) = ($ex_558 : List (ByStr20) -> Bool)
  ret ($retval_556 : List (ByStr20) -> Bool)

fundef ($fundef_735 : Message -> List (Message)) ((msg : Message) : Message)
environment: ((nilMessage : List (Message)) : List (Message))
body:
  (nilMessage : List (Message)) <- [$fundef_735]((nilMessage : List (Message)))
  ($retval_736 : List (Message)) = Cons { Message }(msg : Message) (nilMessage : List (Message))
  ret ($retval_736 : List (Message))

fundef ($fundef_731 : ByStr20 -> ByStr20 -> Bool) ((bs1 : ByStr20) : ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_733
  [$fundef_733]((bs1 : ByStr20)) <- (bs1 : ByStr20)
  ($retval_732 : ByStr20 -> Bool) = [($fundef_733 : ByStr20 -> Bool)]
  ret ($retval_732 : ByStr20 -> Bool)

fundef ($fundef_733 : ByStr20 -> Bool) ((bs2 : ByStr20) : ByStr20)
environment: ((bs1 : ByStr20) : ByStr20)
body:
  (bs1 : ByStr20) <- [$fundef_733]((bs1 : ByStr20))
  ($retval_734 : Bool) = eq (bs1 : ByStr20) (bs2 : ByStr20)
  ret ($retval_734 : Bool)

fundef ($fundef_724 : List (ByStr20) -> ByStr20 -> Bool) ((list : List (ByStr20)) : List (ByStr20))
environment: ((eqByStr20 : ByStr20 -> ByStr20 -> Bool) : ByStr20 -> ByStr20 -> Bool , (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool) : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool)
body:
  (eqByStr20 : ByStr20 -> ByStr20 -> Bool) <- [$fundef_724]((eqByStr20 : ByStr20 -> ByStr20 -> Bool))
  (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool) <- [$fundef_724]((list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool))
  allocate_closure_env $fundef_726
  [$fundef_726]((eqByStr20 : ByStr20 -> ByStr20 -> Bool)) <- (eqByStr20 : ByStr20 -> ByStr20 -> Bool)
  [$fundef_726]((list : List (ByStr20))) <- (list : List (ByStr20))
  [$fundef_726]((list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool)) <- (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool)
  ($retval_725 : ByStr20 -> Bool) = [($fundef_726 : ByStr20 -> Bool)]
  ret ($retval_725 : ByStr20 -> Bool)

fundef ($fundef_726 : ByStr20 -> Bool) ((bs : ByStr20) : ByStr20)
environment: ((eqByStr20 : ByStr20 -> ByStr20 -> Bool) : ByStr20 -> ByStr20 -> Bool , (list : List (ByStr20)) : List (ByStr20) , (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool) : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool)
body:
  (eqByStr20 : ByStr20 -> ByStr20 -> Bool) <- [$fundef_726]((eqByStr20 : ByStr20 -> ByStr20 -> Bool))
  (list : List (ByStr20)) <- [$fundef_726]((list : List (ByStr20)))
  (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool) <- [$fundef_726]((list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool))
  (listMemByStr20 : (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool) = (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool) ByStr20
  ($listMemByStr20_728 : ByStr20 -> List (ByStr20) -> Bool) = (listMemByStr20 : (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool) (eqByStr20 : ByStr20 -> ByStr20 -> Bool)
  ($listMemByStr20_729 : List (ByStr20) -> Bool) = ($listMemByStr20_728 : ByStr20 -> List (ByStr20) -> Bool) (bs : ByStr20)
  ($listMemByStr20_730 : Bool) = ($listMemByStr20_729 : List (ByStr20) -> Bool) (list : List (ByStr20))
  ($retval_727 : Bool) = ($listMemByStr20_730 : Bool)
  ret ($retval_727 : Bool)

fundef ($fundef_717 : List (ByStr20) -> ByStr20 -> Bool) ((list : List (ByStr20)) : List (ByStr20))
environment: ((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) : List (ByStr20) -> ByStr20 -> Bool , (negb : Bool -> Bool) : Bool -> Bool)
body:
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) <- [$fundef_717]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool))
  (negb : Bool -> Bool) <- [$fundef_717]((negb : Bool -> Bool))
  allocate_closure_env $fundef_719
  [$fundef_719]((list : List (ByStr20))) <- (list : List (ByStr20))
  [$fundef_719]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)) <- (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)
  [$fundef_719]((negb : Bool -> Bool)) <- (negb : Bool -> Bool)
  ($retval_718 : ByStr20 -> Bool) = [($fundef_719 : ByStr20 -> Bool)]
  ret ($retval_718 : ByStr20 -> Bool)

fundef ($fundef_719 : ByStr20 -> Bool) ((bs : ByStr20) : ByStr20)
environment: ((list : List (ByStr20)) : List (ByStr20) , (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) : List (ByStr20) -> ByStr20 -> Bool , (negb : Bool -> Bool) : Bool -> Bool)
body:
  (list : List (ByStr20)) <- [$fundef_719]((list : List (ByStr20)))
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) <- [$fundef_719]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool))
  (negb : Bool -> Bool) <- [$fundef_719]((negb : Bool -> Bool))
  ($listByStr20Contains_721 : ByStr20 -> Bool) = (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) (list : List (ByStr20))
  ($listByStr20Contains_722 : Bool) = ($listByStr20Contains_721 : ByStr20 -> Bool) (bs : ByStr20)
  (b : Bool) = ($listByStr20Contains_722 : Bool)
  ($negb_723 : Bool) = (negb : Bool -> Bool) (b : Bool)
  ($retval_720 : Bool) = ($negb_723 : Bool)
  ret ($retval_720 : Bool)

fundef ($fundef_708 : List (ByStr20) -> ByStr20 -> List (ByStr20)) ((list : List (ByStr20)) : List (ByStr20))
environment: ((list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> List ('A) , (negb : Bool -> Bool) : Bool -> Bool)
body:
  (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)) <- [$fundef_708]((list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)))
  (negb : Bool -> Bool) <- [$fundef_708]((negb : Bool -> Bool))
  allocate_closure_env $fundef_710
  [$fundef_710]((list : List (ByStr20))) <- (list : List (ByStr20))
  [$fundef_710]((list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A))) <- (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A))
  [$fundef_710]((negb : Bool -> Bool)) <- (negb : Bool -> Bool)
  ($retval_709 : ByStr20 -> List (ByStr20)) = [($fundef_710 : ByStr20 -> List (ByStr20))]
  ret ($retval_709 : ByStr20 -> List (ByStr20))

fundef ($fundef_710 : ByStr20 -> List (ByStr20)) ((bs : ByStr20) : ByStr20)
environment: ((list : List (ByStr20)) : List (ByStr20) , (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)) : forall 'A. ('A -> Bool) -> List ('A) -> List ('A) , (negb : Bool -> Bool) : Bool -> Bool)
body:
  (list : List (ByStr20)) <- [$fundef_710]((list : List (ByStr20)))
  (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)) <- [$fundef_710]((list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)))
  (negb : Bool -> Bool) <- [$fundef_710]((negb : Bool -> Bool))
  (listByStr20Filter : (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20)) = (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)) ByStr20
  allocate_closure_env $fundef_712
  [$fundef_712]((bs : ByStr20)) <- (bs : ByStr20)
  [$fundef_712]((negb : Bool -> Bool)) <- (negb : Bool -> Bool)
  (fn : ByStr20 -> Bool) = [($fundef_712 : ByStr20 -> Bool)]
  ($listByStr20Filter_715 : List (ByStr20) -> List (ByStr20)) = (listByStr20Filter : (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20)) (fn : ByStr20 -> Bool)
  ($listByStr20Filter_716 : List (ByStr20)) = ($listByStr20Filter_715 : List (ByStr20) -> List (ByStr20)) (list : List (ByStr20))
  ($retval_711 : List (ByStr20)) = ($listByStr20Filter_716 : List (ByStr20))
  ret ($retval_711 : List (ByStr20))

fundef ($fundef_712 : ByStr20 -> Bool) ((v : ByStr20) : ByStr20)
environment: ((bs : ByStr20) : ByStr20 , (negb : Bool -> Bool) : Bool -> Bool)
body:
  (bs : ByStr20) <- [$fundef_712]((bs : ByStr20))
  (negb : Bool -> Bool) <- [$fundef_712]((negb : Bool -> Bool))
  (b : Bool) = eq (v : ByStr20) (bs : ByStr20)
  ($negb_714 : Bool) = (negb : Bool -> Bool) (b : Bool)
  ($retval_713 : Bool) = ($negb_714 : Bool)
  ret ($retval_713 : Bool)

fundef ($fundef_704 : Bool -> Bool -> Bool) ((b1 : Bool) : Bool)
environment: ()
body:
  allocate_closure_env $fundef_706
  [$fundef_706]((b1 : Bool)) <- (b1 : Bool)
  ($retval_705 : Bool -> Bool) = [($fundef_706 : Bool -> Bool)]
  ret ($retval_705 : Bool -> Bool)

fundef ($fundef_706 : Bool -> Bool) ((b2 : Bool) : Bool)
environment: ((b1 : Bool) : Bool)
body:
  (b1 : Bool) <- [$fundef_706]((b1 : Bool))
  match (b1 : Bool) with
  | True =>
    match (b2 : Bool) with
    | True =>
      ($retval_707 : Bool) = True {  }
    | False =>
      ($retval_707 : Bool) = False {  }
  | False =>
    match (b2 : Bool) with
    | True =>
      ($retval_707 : Bool) = False {  }
    | False =>
      ($retval_707 : Bool) = True {  }
  ret ($retval_707 : Bool)

fundef ($fundef_700 : ByStr20 -> Bool -> Event) ((address : ByStr20) : ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_702
  [$fundef_702]((address : ByStr20)) <- (address : ByStr20)
  ($retval_701 : Bool -> Event) = [($fundef_702 : Bool -> Event)]
  ret ($retval_701 : Bool -> Event)

fundef ($fundef_702 : Bool -> Event) ((isApproved : Bool) : Bool)
environment: ((address : ByStr20) : ByStr20)
body:
  (address : ByStr20) <- [$fundef_702]((address : ByStr20))
  ($retval_703 : Event) = { _eventname : (String "AdminSet"); address : (address : ByStr20); isApproved : (isApproved : Bool) }
  ret ($retval_703 : Event)

fundef ($fundef_694 : ByStr20 -> ByStr20 -> Bool -> Event) ((user : ByStr20) : ByStr20)
environment: ()
body:
  allocate_closure_env $fundef_696
  [$fundef_696]((user : ByStr20)) <- (user : ByStr20)
  ($retval_695 : ByStr20 -> Bool -> Event) = [($fundef_696 : ByStr20 -> Bool -> Event)]
  ret ($retval_695 : ByStr20 -> Bool -> Event)

fundef ($fundef_696 : ByStr20 -> Bool -> Event) ((operator : ByStr20) : ByStr20)
environment: ((user : ByStr20) : ByStr20)
body:
  (user : ByStr20) <- [$fundef_696]((user : ByStr20))
  allocate_closure_env $fundef_698
  [$fundef_698]((operator : ByStr20)) <- (operator : ByStr20)
  [$fundef_698]((user : ByStr20)) <- (user : ByStr20)
  ($retval_697 : Bool -> Event) = [($fundef_698 : Bool -> Event)]
  ret ($retval_697 : Bool -> Event)

fundef ($fundef_698 : Bool -> Event) ((isApproved : Bool) : Bool)
environment: ((operator : ByStr20) : ByStr20 , (user : ByStr20) : ByStr20)
body:
  (operator : ByStr20) <- [$fundef_698]((operator : ByStr20))
  (user : ByStr20) <- [$fundef_698]((user : ByStr20))
  ($retval_699 : Event) = { _eventname : (String "ApprovedFor"); user : (user : ByStr20); operator : (operator : ByStr20); isApproved : (isApproved : Bool) }
  ret ($retval_699 : Event)

fundef ($fundef_692 : ByStr20 -> Event) ((address : ByStr20) : ByStr20)
environment: ()
body:
  ($retval_693 : Event) = { _eventname : (String "Approved"); address : (address : ByStr20) }
  ret ($retval_693 : Event)

fundef ($fundef_690 : ByStr20 -> Event) ((address : ByStr20) : ByStr20)
environment: ()
body:
  ($retval_691 : Event) = { _eventname : (String "NewRegistrar"); address : (address : ByStr20) }
  ret ($retval_691 : Event)

fundef ($fundef_686 : ByStr32 -> String -> Event) ((parent : ByStr32) : ByStr32)
environment: ()
body:
  allocate_closure_env $fundef_688
  [$fundef_688]((parent : ByStr32)) <- (parent : ByStr32)
  ($retval_687 : String -> Event) = [($fundef_688 : String -> Event)]
  ret ($retval_687 : String -> Event)

fundef ($fundef_688 : String -> Event) ((label : String) : String)
environment: ((parent : ByStr32) : ByStr32)
body:
  (parent : ByStr32) <- [$fundef_688]((parent : ByStr32))
  ($retval_689 : Event) = { _eventname : (String "NewDomain"); parent : (parent : ByStr32); label : (label : String) }
  ret ($retval_689 : Event)

fundef ($fundef_680 : ByStr32 -> ByStr20 -> ByStr20 -> Event) ((node : ByStr32) : ByStr32)
environment: ()
body:
  allocate_closure_env $fundef_682
  [$fundef_682]((node : ByStr32)) <- (node : ByStr32)
  ($retval_681 : ByStr20 -> ByStr20 -> Event) = [($fundef_682 : ByStr20 -> ByStr20 -> Event)]
  ret ($retval_681 : ByStr20 -> ByStr20 -> Event)

fundef ($fundef_682 : ByStr20 -> ByStr20 -> Event) ((owner : ByStr20) : ByStr20)
environment: ((node : ByStr32) : ByStr32)
body:
  (node : ByStr32) <- [$fundef_682]((node : ByStr32))
  allocate_closure_env $fundef_684
  [$fundef_684]((node : ByStr32)) <- (node : ByStr32)
  [$fundef_684]((owner : ByStr20)) <- (owner : ByStr20)
  ($retval_683 : ByStr20 -> Event) = [($fundef_684 : ByStr20 -> Event)]
  ret ($retval_683 : ByStr20 -> Event)

fundef ($fundef_684 : ByStr20 -> Event) ((resolver : ByStr20) : ByStr20)
environment: ((node : ByStr32) : ByStr32 , (owner : ByStr20) : ByStr20)
body:
  (node : ByStr32) <- [$fundef_684]((node : ByStr32))
  (owner : ByStr20) <- [$fundef_684]((owner : ByStr20))
  ($retval_685 : Event) = { _eventname : (String "Configured"); node : (node : ByStr32); owner : (owner : ByStr20); resolver : (resolver : ByStr20) }
  ret ($retval_685 : Event)

fundef ($fundef_678 : String -> Event) ((msg : String) : String)
environment: ()
body:
  ($retval_679 : Event) = { _eventname : (String "Error"); msg : (msg : String) }
  ret ($retval_679 : Event)

fundef ($fundef_676 : Option (Record) -> ByStr20) ((maybeRecord : Option (Record)) : Option (Record))
environment: ((zeroByStr20 : ByStr20) : ByStr20)
body:
  (zeroByStr20 : ByStr20) <- [$fundef_676]((zeroByStr20 : ByStr20))
  match (maybeRecord : Option (Record)) with
  | None =>
    ($retval_677 : ByStr20) = (zeroByStr20 : ByStr20)
  | Some (record : Record) =>
    match (record : Record) with
    | Record (owner : ByStr20) (resolver : ByStr20) =>
      ($retval_677 : ByStr20) = (owner : ByStr20)
  ret ($retval_677 : ByStr20)

fundef ($fundef_672 : ByStr32 -> String -> ByStr32) ((parent : ByStr32) : ByStr32)
environment: ()
body:
  allocate_closure_env $fundef_674
  [$fundef_674]((parent : ByStr32)) <- (parent : ByStr32)
  ($retval_673 : String -> ByStr32) = [($fundef_674 : String -> ByStr32)]
  ret ($retval_673 : String -> ByStr32)

fundef ($fundef_674 : String -> ByStr32) ((label : String) : String)
environment: ((parent : ByStr32) : ByStr32)
body:
  (parent : ByStr32) <- [$fundef_674]((parent : ByStr32))
  (labelHash : ByStr32) = sha256hash (label : String)
  (nodeInput : ByStr64) = concat (parent : ByStr32) (labelHash : ByStr32)
  ($retval_675 : ByStr32) = sha256hash (nodeInput : ByStr64)
  ret ($retval_675 : ByStr32)

fundef ($fundef_658 : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) ((sender : ByStr20) : ByStr20)
environment: ((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) : List (ByStr20) -> ByStr20 -> Bool , (orb : Bool -> Bool -> Bool) : Bool -> Bool -> Bool)
body:
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) <- [$fundef_658]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool))
  (orb : Bool -> Bool -> Bool) <- [$fundef_658]((orb : Bool -> Bool -> Bool))
  allocate_closure_env $fundef_660
  [$fundef_660]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)) <- (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)
  [$fundef_660]((orb : Bool -> Bool -> Bool)) <- (orb : Bool -> Bool -> Bool)
  [$fundef_660]((sender : ByStr20)) <- (sender : ByStr20)
  ($retval_659 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = [($fundef_660 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool)]
  ret ($retval_659 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool)

fundef ($fundef_660 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) ((recordOwner : ByStr20) : ByStr20)
environment: ((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) : List (ByStr20) -> ByStr20 -> Bool , (orb : Bool -> Bool -> Bool) : Bool -> Bool -> Bool , (sender : ByStr20) : ByStr20)
body:
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) <- [$fundef_660]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool))
  (orb : Bool -> Bool -> Bool) <- [$fundef_660]((orb : Bool -> Bool -> Bool))
  (sender : ByStr20) <- [$fundef_660]((sender : ByStr20))
  allocate_closure_env $fundef_662
  [$fundef_662]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)) <- (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)
  [$fundef_662]((orb : Bool -> Bool -> Bool)) <- (orb : Bool -> Bool -> Bool)
  [$fundef_662]((recordOwner : ByStr20)) <- (recordOwner : ByStr20)
  [$fundef_662]((sender : ByStr20)) <- (sender : ByStr20)
  ($retval_661 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = [($fundef_662 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool)]
  ret ($retval_661 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool)

fundef ($fundef_662 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) ((maybeApproved : Option (ByStr20)) : Option (ByStr20))
environment: ((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) : List (ByStr20) -> ByStr20 -> Bool , (orb : Bool -> Bool -> Bool) : Bool -> Bool -> Bool , (recordOwner : ByStr20) : ByStr20 , (sender : ByStr20) : ByStr20)
body:
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) <- [$fundef_662]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool))
  (orb : Bool -> Bool -> Bool) <- [$fundef_662]((orb : Bool -> Bool -> Bool))
  (recordOwner : ByStr20) <- [$fundef_662]((recordOwner : ByStr20))
  (sender : ByStr20) <- [$fundef_662]((sender : ByStr20))
  allocate_closure_env $fundef_664
  [$fundef_664]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)) <- (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)
  [$fundef_664]((maybeApproved : Option (ByStr20))) <- (maybeApproved : Option (ByStr20))
  [$fundef_664]((orb : Bool -> Bool -> Bool)) <- (orb : Bool -> Bool -> Bool)
  [$fundef_664]((recordOwner : ByStr20)) <- (recordOwner : ByStr20)
  [$fundef_664]((sender : ByStr20)) <- (sender : ByStr20)
  ($retval_663 : Option (List (ByStr20)) -> Bool) = [($fundef_664 : Option (List (ByStr20)) -> Bool)]
  ret ($retval_663 : Option (List (ByStr20)) -> Bool)

fundef ($fundef_664 : Option (List (ByStr20)) -> Bool) ((maybeOperators : Option (List (ByStr20))) : Option (List (ByStr20)))
environment: ((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) : List (ByStr20) -> ByStr20 -> Bool , (maybeApproved : Option (ByStr20)) : Option (ByStr20) , (orb : Bool -> Bool -> Bool) : Bool -> Bool -> Bool , (recordOwner : ByStr20) : ByStr20 , (sender : ByStr20) : ByStr20)
body:
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) <- [$fundef_664]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool))
  (maybeApproved : Option (ByStr20)) <- [$fundef_664]((maybeApproved : Option (ByStr20)))
  (orb : Bool -> Bool -> Bool) <- [$fundef_664]((orb : Bool -> Bool -> Bool))
  (recordOwner : ByStr20) <- [$fundef_664]((recordOwner : ByStr20))
  (sender : ByStr20) <- [$fundef_664]((sender : ByStr20))
  (isOwner : Bool) = eq (sender : ByStr20) (recordOwner : ByStr20)
  match (maybeApproved : Option (ByStr20)) with
  | None =>
    (isApproved : Bool) = False {  }
  | Some (approved : ByStr20) =>
    (isApproved : Bool) = eq (sender : ByStr20) (approved : ByStr20)
  match (maybeOperators : Option (List (ByStr20))) with
  | None =>
    (isOperator : Bool) = False {  }
  | Some (operators : List (ByStr20)) =>
    ($listByStr20Contains_666 : ByStr20 -> Bool) = (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) (operators : List (ByStr20))
    ($listByStr20Contains_667 : Bool) = ($listByStr20Contains_666 : ByStr20 -> Bool) (sender : ByStr20)
    (isOperator : Bool) = ($listByStr20Contains_667 : Bool)
  ($orb_668 : Bool -> Bool) = (orb : Bool -> Bool -> Bool) (isOwner : Bool)
  ($orb_669 : Bool) = ($orb_668 : Bool -> Bool) (isApproved : Bool)
  (b1 : Bool) = ($orb_669 : Bool)
  ($orb_670 : Bool -> Bool) = (orb : Bool -> Bool -> Bool) (b1 : Bool)
  ($orb_671 : Bool) = ($orb_670 : Bool -> Bool) (isOperator : Bool)
  ($retval_665 : Bool) = ($orb_671 : Bool)
  ret ($retval_665 : Bool)

library:
  (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B) = [List (ByStr20) -> ($fundef_393 : () -> forall 'B. (List (ByStr20) -> 'B -> 'B) -> 'B -> List (List (ByStr20)) -> 'B); Option (ByStr20) -> ($fundef_437 : () -> forall 'B. (Option (ByStr20) -> 'B -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B); ByStr20 -> ($fundef_481 : () -> forall 'B. (ByStr20 -> 'B -> 'B) -> 'B -> List (ByStr20) -> 'B)]
  (list_foldl : forall 'A. forall 'B. ('B -> 'A -> 'B) -> 'B -> List ('A) -> 'B) = [List (ByStr20) -> ($fundef_261 : () -> forall 'B. ('B -> List (ByStr20) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B); Option (ByStr20) -> ($fundef_305 : () -> forall 'B. ('B -> Option (ByStr20) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B); ByStr20 -> ($fundef_349 : () -> forall 'B. ('B -> ByStr20 -> 'B) -> 'B -> List (ByStr20) -> 'B)]
  (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B) = [List (ByStr20) -> ($fundef_102 : () -> forall 'B. ('B -> List (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (List (ByStr20)) -> 'B); Option (ByStr20) -> ($fundef_155 : () -> forall 'B. ('B -> Option (ByStr20) -> ('B -> 'B) -> 'B) -> 'B -> List (Option (ByStr20)) -> 'B); ByStr20 -> ($fundef_208 : () -> forall 'B. ('B -> ByStr20 -> ('B -> 'B) -> 'B) -> 'B -> List (ByStr20) -> 'B)]
  (nat_foldk : forall 'T. ('T -> Nat -> ('T -> 'T) -> 'T) -> 'T -> Nat -> 'T) = [List (ByStr20) -> ($fundef_51 : () -> (List (ByStr20) -> Nat -> (List (ByStr20) -> List (ByStr20)) -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)); Option (ByStr20) -> ($fundef_68 : () -> (Option (ByStr20) -> Nat -> (Option (ByStr20) -> Option (ByStr20)) -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)); ByStr20 -> ($fundef_85 : () -> (ByStr20 -> Nat -> (ByStr20 -> ByStr20) -> ByStr20) -> ByStr20 -> Nat -> ByStr20)]
  (nat_fold : forall 'T. ('T -> Nat -> 'T) -> 'T -> Nat -> 'T) = [List (ByStr20) -> ($fundef_9 : () -> (List (ByStr20) -> Nat -> List (ByStr20)) -> List (ByStr20) -> Nat -> List (ByStr20)); Option (ByStr20) -> ($fundef_23 : () -> (Option (ByStr20) -> Nat -> Option (ByStr20)) -> Option (ByStr20) -> Nat -> Option (ByStr20)); ByStr20 -> ($fundef_37 : () -> (ByStr20 -> Nat -> ByStr20) -> ByStr20 -> Nat -> ByStr20)]
  (andb : Bool -> Bool -> Bool) = [($fundef_531 : Bool -> Bool -> Bool)]
  (orb : Bool -> Bool -> Bool) = [($fundef_527 : Bool -> Bool -> Bool)]
  (negb : Bool -> Bool) = [($fundef_525 : Bool -> Bool)]
  [$fundef_625]((list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldr : forall 'A. forall 'B. ('A -> 'B -> 'B) -> 'B -> List ('A) -> 'B)
  (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A)) = [List (ByStr20) -> ($fundef_625 : () -> (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> List (List (ByStr20))); Option (ByStr20) -> ($fundef_636 : () -> (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> List (Option (ByStr20))); ByStr20 -> ($fundef_647 : () -> (ByStr20 -> Bool) -> List (ByStr20) -> List (ByStr20))]
  [$fundef_583]((list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)) <- (list_foldk : forall 'A. forall 'B. ('B -> 'A -> ('B -> 'B) -> 'B) -> 'B -> List ('A) -> 'B)
  (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A)) = [List (ByStr20) -> ($fundef_583 : () -> (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Option (List (ByStr20))); Option (ByStr20) -> ($fundef_597 : () -> (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Option (Option (ByStr20))); ByStr20 -> ($fundef_611 : () -> (ByStr20 -> Bool) -> List (ByStr20) -> Option (ByStr20))]
  [$fundef_559]((list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))) <- (list_find : forall 'A. ('A -> Bool) -> List ('A) -> Option ('A))
  (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool) = [List (ByStr20) -> ($fundef_559 : () -> (List (ByStr20) -> Bool) -> List (List (ByStr20)) -> Bool); Option (ByStr20) -> ($fundef_567 : () -> (Option (ByStr20) -> Bool) -> List (Option (ByStr20)) -> Bool); ByStr20 -> ($fundef_575 : () -> (ByStr20 -> Bool) -> List (ByStr20) -> Bool)]
  [$fundef_535]((list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)) <- (list_exists : forall 'A. ('A -> Bool) -> List ('A) -> Bool)
  (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool) = [List (ByStr20) -> ($fundef_535 : () -> (List (ByStr20) -> List (ByStr20) -> Bool) -> List (ByStr20) -> List (List (ByStr20)) -> Bool); Option (ByStr20) -> ($fundef_543 : () -> (Option (ByStr20) -> Option (ByStr20) -> Bool) -> Option (ByStr20) -> List (Option (ByStr20)) -> Bool); ByStr20 -> ($fundef_551 : () -> (ByStr20 -> ByStr20 -> Bool) -> ByStr20 -> List (ByStr20) -> Bool)]
  (zeroByStr20 : ByStr20) = (ByStr20 0x0000000000000000000000000000000000000000)
  (nilByStr20 : List (ByStr20)) = Nil { ByStr20 }
  (nilMessage : List (Message)) = Nil { Message }
  allocate_closure_env $fundef_735
  [$fundef_735]((nilMessage : List (Message))) <- (nilMessage : List (Message))
  (oneMsg : Message -> List (Message)) = [($fundef_735 : Message -> List (Message))]
  (eqByStr20 : ByStr20 -> ByStr20 -> Bool) = [($fundef_731 : ByStr20 -> ByStr20 -> Bool)]
  allocate_closure_env $fundef_724
  [$fundef_724]((eqByStr20 : ByStr20 -> ByStr20 -> Bool)) <- (eqByStr20 : ByStr20 -> ByStr20 -> Bool)
  [$fundef_724]((list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool)) <- (list_mem : forall 'A. ('A -> 'A -> Bool) -> 'A -> List ('A) -> Bool)
  (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) = [($fundef_724 : List (ByStr20) -> ByStr20 -> Bool)]
  allocate_closure_env $fundef_717
  [$fundef_717]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)) <- (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)
  [$fundef_717]((negb : Bool -> Bool)) <- (negb : Bool -> Bool)
  (listByStr20Excludes : List (ByStr20) -> ByStr20 -> Bool) = [($fundef_717 : List (ByStr20) -> ByStr20 -> Bool)]
  allocate_closure_env $fundef_708
  [$fundef_708]((list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A))) <- (list_filter : forall 'A. ('A -> Bool) -> List ('A) -> List ('A))
  [$fundef_708]((negb : Bool -> Bool)) <- (negb : Bool -> Bool)
  (listByStr20FilterOut : List (ByStr20) -> ByStr20 -> List (ByStr20)) = [($fundef_708 : List (ByStr20) -> ByStr20 -> List (ByStr20))]
  (xandb : Bool -> Bool -> Bool) = [($fundef_704 : Bool -> Bool -> Bool)]
  (eAdminSet : ByStr20 -> Bool -> Event) = [($fundef_700 : ByStr20 -> Bool -> Event)]
  (eApprovedFor : ByStr20 -> ByStr20 -> Bool -> Event) = [($fundef_694 : ByStr20 -> ByStr20 -> Bool -> Event)]
  (eApproved : ByStr20 -> Event) = [($fundef_692 : ByStr20 -> Event)]
  (eNewRegistrar : ByStr20 -> Event) = [($fundef_690 : ByStr20 -> Event)]
  (eNewDomain : ByStr32 -> String -> Event) = [($fundef_686 : ByStr32 -> String -> Event)]
  (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) = [($fundef_680 : ByStr32 -> ByStr20 -> ByStr20 -> Event)]
  (eError : String -> Event) = [($fundef_678 : String -> Event)]
  allocate_closure_env $fundef_676
  [$fundef_676]((zeroByStr20 : ByStr20)) <- (zeroByStr20 : ByStr20)
  (recordMemberOwner : Option (Record) -> ByStr20) = [($fundef_676 : Option (Record) -> ByStr20)]
  (parentLabelToNode : ByStr32 -> String -> ByStr32) = [($fundef_672 : ByStr32 -> String -> ByStr32)]
  allocate_closure_env $fundef_658
  [$fundef_658]((listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)) <- (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool)
  [$fundef_658]((orb : Bool -> Bool -> Bool)) <- (orb : Bool -> Bool -> Bool)
  (getIsOAO : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = [($fundef_658 : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool)]

contract Registry
((initialOwner : ByStr20) : ByStr20, (rootNode : ByStr32) : ByStr32)

(records : Map (ByStr32) (Record)) : Map (ByStr32) (Record) = 
  (empty : Map (ByStr32) (Record)) = (Map ByStr32 Record [])
  (rootRecord : Record) = Record {  }(initialOwner : ByStr20) (zeroByStr20 : ByStr20)
  ($records_737 : Map (ByStr32) (Record)) = put (empty : Map (ByStr32) (Record)) (rootNode : ByStr32) (rootRecord : Record)
  ret ($records_737 : Map (ByStr32) (Record))
(registrar : ByStr20) : ByStr20 = 
  ($registrar_738 : ByStr20) = (zeroByStr20 : ByStr20)
  ret ($registrar_738 : ByStr20)
(approvals : Map (ByStr32) (ByStr20)) : Map (ByStr32) (ByStr20) = 
  ($approvals_739 : Map (ByStr32) (ByStr20)) = (Map ByStr32 ByStr20 [])
  ret ($approvals_739 : Map (ByStr32) (ByStr20))
(operators : Map (ByStr20) (List (ByStr20))) : Map (ByStr20) (List (ByStr20)) = 
  ($operators_740 : Map (ByStr20) (List (ByStr20))) = (Map ByStr20 List (ByStr20) [])
  ret ($operators_740 : Map (ByStr20) (List (ByStr20)))
(admins : List (ByStr20)) : List (ByStr20) = 
  ($admins_741 : List (ByStr20)) = Cons { ByStr20 }(initialOwner : ByStr20) (nilByStr20 : List (ByStr20))
  ret ($admins_741 : List (ByStr20))

transition setAdmin ((address : ByStr20) : ByStr20, (isApproved : Bool) : Bool)
  (currentAdmins : List (ByStr20)) <- (admins : List (ByStr20))
  ($listByStr20Contains_751 : ByStr20 -> Bool) = (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) (currentAdmins : List (ByStr20))
  ($listByStr20Contains_752 : Bool) = ($listByStr20Contains_751 : ByStr20 -> Bool) (_sender : ByStr20)
  (isSenderAdmin : Bool) = ($listByStr20Contains_752 : Bool)
  match (isSenderAdmin : Bool) with
  | True =>
    ($listByStr20Excludes_746 : ByStr20 -> Bool) = (listByStr20Excludes : List (ByStr20) -> ByStr20 -> Bool) (currentAdmins : List (ByStr20))
    ($listByStr20Excludes_747 : Bool) = ($listByStr20Excludes_746 : ByStr20 -> Bool) (address : ByStr20)
    (b : Bool) = ($listByStr20Excludes_747 : Bool)
    ($xandb_748 : Bool -> Bool) = (xandb : Bool -> Bool -> Bool) (b : Bool)
    ($xandb_749 : Bool) = ($xandb_748 : Bool -> Bool) (isApproved : Bool)
    (needsToChange : Bool) = ($xandb_749 : Bool)
    match (needsToChange : Bool) with
    | True =>
      match (isApproved : Bool) with
      | True =>
        (newAdmins : List (ByStr20)) = Cons { ByStr20 }(address : ByStr20) (currentAdmins : List (ByStr20))
      | False =>
        ($listByStr20FilterOut_744 : ByStr20 -> List (ByStr20)) = (listByStr20FilterOut : List (ByStr20) -> ByStr20 -> List (ByStr20)) (currentAdmins : List (ByStr20))
        ($listByStr20FilterOut_745 : List (ByStr20)) = ($listByStr20FilterOut_744 : ByStr20 -> List (ByStr20)) (address : ByStr20)
        (newAdmins : List (ByStr20)) = ($listByStr20FilterOut_745 : List (ByStr20))
      (admins : List (ByStr20)) := (newAdmins : List (ByStr20))
      ($eAdminSet_742 : Bool -> Event) = (eAdminSet : ByStr20 -> Bool -> Event) (address : ByStr20)
      ($eAdminSet_743 : Event) = ($eAdminSet_742 : Bool -> Event) (isApproved : Bool)
      (e : Event) = ($eAdminSet_743 : Event)
      event (e : Event)
    | _ =>
      jump $joinp_3
    join $joinp_3 =>
      
  | False =>
    (m : String) = (String "Sender not root node owner")
    ($eError_750 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_750 : Event)
    event (e : Event)

transition approve ((node : ByStr32) : ByStr32, (address : ByStr20) : ByStr20)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  ($recordMemberOwner_756 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_756 : ByStr20)
  (isSenderNodeOwner : Bool) = eq (_sender : ByStr20) (recordOwner : ByStr20)
  match (isSenderNodeOwner : Bool) with
  | True =>
    (maybeApproved : Option (ByStr20))(approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
    match (maybeApproved : Option (ByStr20)) with
    | None =>
      (currentlyApproved : ByStr20) = (zeroByStr20 : ByStr20)
    | Some (approved : ByStr20) =>
      (currentlyApproved : ByStr20) = (approved : ByStr20)
    (b : Bool) = eq (currentlyApproved : ByStr20) (address : ByStr20)
    ($negb_754 : Bool) = (negb : Bool -> Bool) (b : Bool)
    (needsToChange : Bool) = ($negb_754 : Bool)
    match (needsToChange : Bool) with
    | True =>
      (approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)] := (address : ByStr20)
      ($eApproved_753 : Event) = (eApproved : ByStr20 -> Event) (address : ByStr20)
      (e : Event) = ($eApproved_753 : Event)
      event (e : Event)
    | _ =>
      jump $joinp_4
    join $joinp_4 =>
      
  | False =>
    (m : String) = (String "Sender not node owner")
    ($eError_755 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_755 : Event)
    event (e : Event)

transition approveFor ((address : ByStr20) : ByStr20, (isApproved : Bool) : Bool)
  (maybeOperators : Option (List (ByStr20)))(operators : Map (ByStr20) (List (ByStr20)))[(_sender : ByStr20)]
  match (maybeOperators : Option (List (ByStr20))) with
  | None =>
    (currentOperators : List (ByStr20)) = (nilByStr20 : List (ByStr20))
  | Some (ops : List (ByStr20)) =>
    (currentOperators : List (ByStr20)) = (ops : List (ByStr20))
  ($listByStr20Excludes_762 : ByStr20 -> Bool) = (listByStr20Excludes : List (ByStr20) -> ByStr20 -> Bool) (currentOperators : List (ByStr20))
  ($listByStr20Excludes_763 : Bool) = ($listByStr20Excludes_762 : ByStr20 -> Bool) (address : ByStr20)
  (b : Bool) = ($listByStr20Excludes_763 : Bool)
  ($xandb_764 : Bool -> Bool) = (xandb : Bool -> Bool -> Bool) (b : Bool)
  ($xandb_765 : Bool) = ($xandb_764 : Bool -> Bool) (isApproved : Bool)
  (needsToChange : Bool) = ($xandb_765 : Bool)
  match (needsToChange : Bool) with
  | True =>
    match (isApproved : Bool) with
    | True =>
      (newOperators : List (ByStr20)) = Cons { ByStr20 }(address : ByStr20) (currentOperators : List (ByStr20))
    | False =>
      ($listByStr20FilterOut_760 : ByStr20 -> List (ByStr20)) = (listByStr20FilterOut : List (ByStr20) -> ByStr20 -> List (ByStr20)) (currentOperators : List (ByStr20))
      ($listByStr20FilterOut_761 : List (ByStr20)) = ($listByStr20FilterOut_760 : ByStr20 -> List (ByStr20)) (address : ByStr20)
      (newOperators : List (ByStr20)) = ($listByStr20FilterOut_761 : List (ByStr20))
    (operators : Map (ByStr20) (List (ByStr20)))[(_sender : ByStr20)] := (newOperators : List (ByStr20))
    ($eApprovedFor_757 : ByStr20 -> Bool -> Event) = (eApprovedFor : ByStr20 -> ByStr20 -> Bool -> Event) (_sender : ByStr20)
    ($eApprovedFor_758 : Bool -> Event) = ($eApprovedFor_757 : ByStr20 -> Bool -> Event) (address : ByStr20)
    ($eApprovedFor_759 : Event) = ($eApprovedFor_758 : Bool -> Event) (isApproved : Bool)
    (e : Event) = ($eApprovedFor_759 : Event)
    event (e : Event)
  | _ =>
    jump $joinp_5
  join $joinp_5 =>
    

transition configureNode ((node : ByStr32) : ByStr32, (owner : ByStr20) : ByStr20, (resolver : ByStr20) : ByStr20)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  (maybeApproved : Option (ByStr20))(approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
  ($recordMemberOwner_776 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_776 : ByStr20)
  (maybeOperators : Option (List (ByStr20)))(operators : Map (ByStr20) (List (ByStr20)))[(recordOwner : ByStr20)]
  ($getIsOAO_772 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = (getIsOAO : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (_sender : ByStr20)
  ($getIsOAO_773 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = ($getIsOAO_772 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (recordOwner : ByStr20)
  ($getIsOAO_774 : Option (List (ByStr20)) -> Bool) = ($getIsOAO_773 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (maybeApproved : Option (ByStr20))
  ($getIsOAO_775 : Bool) = ($getIsOAO_774 : Option (List (ByStr20)) -> Bool) (maybeOperators : Option (List (ByStr20)))
  (isSenderOAO : Bool) = ($getIsOAO_775 : Bool)
  match (isSenderOAO : Bool) with
  | True =>
    (newRecord : Record) = Record {  }(owner : ByStr20) (resolver : ByStr20)
    (records : Map (ByStr32) (Record))[(node : ByStr32)] := (newRecord : Record)
    ($eConfigured_767 : ByStr20 -> ByStr20 -> Event) = (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) (node : ByStr32)
    ($eConfigured_768 : ByStr20 -> Event) = ($eConfigured_767 : ByStr20 -> ByStr20 -> Event) (owner : ByStr20)
    ($eConfigured_769 : Event) = ($eConfigured_768 : ByStr20 -> Event) (resolver : ByStr20)
    (e : Event) = ($eConfigured_769 : Event)
    event (e : Event)
    (m : Message) = { _tag : (String "onConfigureSuccess"); node : (node : ByStr32); owner : (owner : ByStr20); _amount : (Uint128 0); _recipient : (_sender : ByStr20) }
    ($oneMsg_766 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_766 : List (Message))
    send (msgs : List (Message))
  | False =>
    (m : String) = (String "Sender not node owner, approved or operator")
    ($eError_771 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_771 : Event)
    event (e : Event)
    (m : Message) = { _tag : (String "onConfigureFailure"); node : (node : ByStr32); owner : (recordOwner : ByStr20); _amount : (Uint128 0); _recipient : (_sender : ByStr20) }
    ($oneMsg_770 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_770 : List (Message))
    send (msgs : List (Message))

transition configureResolver ((node : ByStr32) : ByStr32, (resolver : ByStr20) : ByStr20)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  (maybeApproved : Option (ByStr20))(approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
  ($recordMemberOwner_785 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_785 : ByStr20)
  (maybeOperators : Option (List (ByStr20)))(operators : Map (ByStr20) (List (ByStr20)))[(recordOwner : ByStr20)]
  ($getIsOAO_781 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = (getIsOAO : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (_sender : ByStr20)
  ($getIsOAO_782 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = ($getIsOAO_781 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (recordOwner : ByStr20)
  ($getIsOAO_783 : Option (List (ByStr20)) -> Bool) = ($getIsOAO_782 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (maybeApproved : Option (ByStr20))
  ($getIsOAO_784 : Bool) = ($getIsOAO_783 : Option (List (ByStr20)) -> Bool) (maybeOperators : Option (List (ByStr20)))
  (isSenderOAO : Bool) = ($getIsOAO_784 : Bool)
  match (isSenderOAO : Bool) with
  | True =>
    (newRecord : Record) = Record {  }(recordOwner : ByStr20) (resolver : ByStr20)
    (records : Map (ByStr32) (Record))[(node : ByStr32)] := (newRecord : Record)
    ($eConfigured_777 : ByStr20 -> ByStr20 -> Event) = (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) (node : ByStr32)
    ($eConfigured_778 : ByStr20 -> Event) = ($eConfigured_777 : ByStr20 -> ByStr20 -> Event) (recordOwner : ByStr20)
    ($eConfigured_779 : Event) = ($eConfigured_778 : ByStr20 -> Event) (resolver : ByStr20)
    (e : Event) = ($eConfigured_779 : Event)
    event (e : Event)
  | False =>
    (m : String) = (String "Sender not node owner, approved or operator")
    ($eError_780 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_780 : Event)
    event (e : Event)

transition transfer ((node : ByStr32) : ByStr32, (owner : ByStr20) : ByStr20)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  (maybeApproved : Option (ByStr20))(approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
  ($recordMemberOwner_796 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_796 : ByStr20)
  (maybeOperators : Option (List (ByStr20)))(operators : Map (ByStr20) (List (ByStr20)))[(recordOwner : ByStr20)]
  ($getIsOAO_792 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = (getIsOAO : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (_sender : ByStr20)
  ($getIsOAO_793 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = ($getIsOAO_792 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (recordOwner : ByStr20)
  ($getIsOAO_794 : Option (List (ByStr20)) -> Bool) = ($getIsOAO_793 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (maybeApproved : Option (ByStr20))
  ($getIsOAO_795 : Bool) = ($getIsOAO_794 : Option (List (ByStr20)) -> Bool) (maybeOperators : Option (List (ByStr20)))
  (isSenderOAO : Bool) = ($getIsOAO_795 : Bool)
  match (isSenderOAO : Bool) with
  | True =>
    delete (approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
    (newRecord : Record) = Record {  }(owner : ByStr20) (zeroByStr20 : ByStr20)
    (records : Map (ByStr32) (Record))[(node : ByStr32)] := (newRecord : Record)
    ($eConfigured_787 : ByStr20 -> ByStr20 -> Event) = (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) (node : ByStr32)
    ($eConfigured_788 : ByStr20 -> Event) = ($eConfigured_787 : ByStr20 -> ByStr20 -> Event) (owner : ByStr20)
    ($eConfigured_789 : Event) = ($eConfigured_788 : ByStr20 -> Event) (zeroByStr20 : ByStr20)
    (e : Event) = ($eConfigured_789 : Event)
    event (e : Event)
    (m : Message) = { _tag : (String "onTransferSuccess"); node : (node : ByStr32); owner : (owner : ByStr20); _amount : (Uint128 0); _recipient : (_sender : ByStr20) }
    ($oneMsg_786 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_786 : List (Message))
    send (msgs : List (Message))
  | False =>
    (m : String) = (String "Sender not node owner, approved or operator")
    ($eError_791 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_791 : Event)
    event (e : Event)
    (m : Message) = { _tag : (String "onTransferFailure"); node : (node : ByStr32); owner : (owner : ByStr20); _amount : (Uint128 0); _recipient : (_sender : ByStr20) }
    ($oneMsg_790 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_790 : List (Message))
    send (msgs : List (Message))

transition assign ((parent : ByStr32) : ByStr32, (label : String) : String, (owner : ByStr20) : ByStr20)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(parent : ByStr32)]
  (maybeApproved : Option (ByStr20))(approvals : Map (ByStr32) (ByStr20))[(parent : ByStr32)]
  ($recordMemberOwner_811 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_811 : ByStr20)
  (maybeOperators : Option (List (ByStr20)))(operators : Map (ByStr20) (List (ByStr20)))[(recordOwner : ByStr20)]
  ($getIsOAO_807 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = (getIsOAO : ByStr20 -> ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (_sender : ByStr20)
  ($getIsOAO_808 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) = ($getIsOAO_807 : ByStr20 -> Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (recordOwner : ByStr20)
  ($getIsOAO_809 : Option (List (ByStr20)) -> Bool) = ($getIsOAO_808 : Option (ByStr20) -> Option (List (ByStr20)) -> Bool) (maybeApproved : Option (ByStr20))
  ($getIsOAO_810 : Bool) = ($getIsOAO_809 : Option (List (ByStr20)) -> Bool) (maybeOperators : Option (List (ByStr20)))
  (isSenderOAO : Bool) = ($getIsOAO_810 : Bool)
  match (isSenderOAO : Bool) with
  | True =>
    ($parentLabelToNode_803 : String -> ByStr32) = (parentLabelToNode : ByStr32 -> String -> ByStr32) (parent : ByStr32)
    ($parentLabelToNode_804 : ByStr32) = ($parentLabelToNode_803 : String -> ByStr32) (label : String)
    (node : ByStr32) = ($parentLabelToNode_804 : ByStr32)
    (recordExists : Bool)exists (records : Map (ByStr32) (Record))[(node : ByStr32)]
    match (recordExists : Bool) with
    | False =>
      ($eNewDomain_801 : String -> Event) = (eNewDomain : ByStr32 -> String -> Event) (parent : ByStr32)
      ($eNewDomain_802 : Event) = ($eNewDomain_801 : String -> Event) (label : String)
      (e : Event) = ($eNewDomain_802 : Event)
      event (e : Event)
    | _ =>
      jump $joinp_6
    join $joinp_6 =>
      
    delete (approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
    (newRecord : Record) = Record {  }(owner : ByStr20) (zeroByStr20 : ByStr20)
    (records : Map (ByStr32) (Record))[(node : ByStr32)] := (newRecord : Record)
    ($eConfigured_798 : ByStr20 -> ByStr20 -> Event) = (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) (node : ByStr32)
    ($eConfigured_799 : ByStr20 -> Event) = ($eConfigured_798 : ByStr20 -> ByStr20 -> Event) (owner : ByStr20)
    ($eConfigured_800 : Event) = ($eConfigured_799 : ByStr20 -> Event) (zeroByStr20 : ByStr20)
    (e : Event) = ($eConfigured_800 : Event)
    event (e : Event)
    (m : Message) = { _tag : (String "onAssignSuccess"); parent : (parent : ByStr32); label : (label : String); owner : (owner : ByStr20); _amount : (Uint128 0); _recipient : (_sender : ByStr20) }
    ($oneMsg_797 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_797 : List (Message))
    send (msgs : List (Message))
  | False =>
    (m : String) = (String "Sender not parent owner, approved or operator")
    ($eError_806 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_806 : Event)
    event (e : Event)
    (m : Message) = { _tag : (String "onAssignFailure"); parent : (parent : ByStr32); label : (label : String); owner : (recordOwner : ByStr20); _amount : (Uint128 0); _recipient : (_sender : ByStr20) }
    ($oneMsg_805 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_805 : List (Message))
    send (msgs : List (Message))

transition bestow ((label : String) : String, (owner : ByStr20) : ByStr20, (resolver : ByStr20) : ByStr20)
  (currentAdmins : List (ByStr20)) <- (admins : List (ByStr20))
  ($parentLabelToNode_829 : String -> ByStr32) = (parentLabelToNode : ByStr32 -> String -> ByStr32) (rootNode : ByStr32)
  ($parentLabelToNode_830 : ByStr32) = ($parentLabelToNode_829 : String -> ByStr32) (label : String)
  (node : ByStr32) = ($parentLabelToNode_830 : ByStr32)
  (recordExists : Bool)exists (records : Map (ByStr32) (Record))[(node : ByStr32)]
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  (currentRegistrar : ByStr20) <- (registrar : ByStr20)
  ($listByStr20Contains_818 : ByStr20 -> Bool) = (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) (currentAdmins : List (ByStr20))
  ($listByStr20Contains_819 : Bool) = ($listByStr20Contains_818 : ByStr20 -> Bool) (_sender : ByStr20)
  (isSenderAdmin : Bool) = ($listByStr20Contains_819 : Bool)
  (isSenderRegistrar : Bool) = eq (currentRegistrar : ByStr20) (_sender : ByStr20)
  ($orb_820 : Bool -> Bool) = (orb : Bool -> Bool -> Bool) (isSenderRegistrar : Bool)
  ($orb_821 : Bool) = ($orb_820 : Bool -> Bool) (isSenderAdmin : Bool)
  (isOkSender : Bool) = ($orb_821 : Bool)
  ($recordMemberOwner_822 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_822 : ByStr20)
  (recordIsUnowned : Bool) = eq (recordOwner : ByStr20) (zeroByStr20 : ByStr20)
  (recordIsOwnedByRegistrar : Bool) = eq (recordOwner : ByStr20) (currentRegistrar : ByStr20)
  ($andb_823 : Bool -> Bool) = (andb : Bool -> Bool -> Bool) (recordIsOwnedByRegistrar : Bool)
  ($andb_824 : Bool) = ($andb_823 : Bool -> Bool) (isSenderRegistrar : Bool)
  (isRegistrarSenderAndOwned : Bool) = ($andb_824 : Bool)
  ($orb_825 : Bool -> Bool) = (orb : Bool -> Bool -> Bool) (recordIsUnowned : Bool)
  ($orb_826 : Bool) = ($orb_825 : Bool -> Bool) (isRegistrarSenderAndOwned : Bool)
  (isOkRecordOwner : Bool) = ($orb_826 : Bool)
  ($andb_827 : Bool -> Bool) = (andb : Bool -> Bool -> Bool) (isOkSender : Bool)
  ($andb_828 : Bool) = ($andb_827 : Bool -> Bool) (isOkRecordOwner : Bool)
  (isOk : Bool) = ($andb_828 : Bool)
  match (isOk : Bool) with
  | True =>
    match (recordExists : Bool) with
    | False =>
      ($eNewDomain_815 : String -> Event) = (eNewDomain : ByStr32 -> String -> Event) (rootNode : ByStr32)
      ($eNewDomain_816 : Event) = ($eNewDomain_815 : String -> Event) (label : String)
      (e : Event) = ($eNewDomain_816 : Event)
      event (e : Event)
    | _ =>
      jump $joinp_7
    join $joinp_7 =>
      
    (newRecord : Record) = Record {  }(owner : ByStr20) (resolver : ByStr20)
    (records : Map (ByStr32) (Record))[(node : ByStr32)] := (newRecord : Record)
    ($eConfigured_812 : ByStr20 -> ByStr20 -> Event) = (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) (node : ByStr32)
    ($eConfigured_813 : ByStr20 -> Event) = ($eConfigured_812 : ByStr20 -> ByStr20 -> Event) (owner : ByStr20)
    ($eConfigured_814 : Event) = ($eConfigured_813 : ByStr20 -> Event) (resolver : ByStr20)
    (e : Event) = ($eConfigured_814 : Event)
    event (e : Event)
  | False =>
    (m : String) = (String "Sender admin")
    ($eError_817 : Event) = (eError : String -> Event) (m : String)
    (e : Event) = ($eError_817 : Event)
    event (e : Event)

transition setRegistrar ((address : ByStr20) : ByStr20)
  (currentAdmins : List (ByStr20)) <- (admins : List (ByStr20))
  ($listByStr20Contains_832 : ByStr20 -> Bool) = (listByStr20Contains : List (ByStr20) -> ByStr20 -> Bool) (currentAdmins : List (ByStr20))
  ($listByStr20Contains_833 : Bool) = ($listByStr20Contains_832 : ByStr20 -> Bool) (_sender : ByStr20)
  (isOk : Bool) = ($listByStr20Contains_833 : Bool)
  match (isOk : Bool) with
  | True =>
    ($eNewRegistrar_831 : Event) = (eNewRegistrar : ByStr20 -> Event) (address : ByStr20)
    (e : Event) = ($eNewRegistrar_831 : Event)
    event (e : Event)
    (registrar : ByStr20) := (address : ByStr20)
  | _ =>
    jump $joinp_8
  join $joinp_8 =>
    

transition register ((parent : ByStr32) : ByStr32, (label : String) : String)
  ($parentLabelToNode_838 : String -> ByStr32) = (parentLabelToNode : ByStr32 -> String -> ByStr32) (parent : ByStr32)
  ($parentLabelToNode_839 : ByStr32) = ($parentLabelToNode_838 : String -> ByStr32) (label : String)
  (node : ByStr32) = ($parentLabelToNode_839 : ByStr32)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  (maybeApproved : Option (ByStr20))(approvals : Map (ByStr32) (ByStr20))[(node : ByStr32)]
  ($recordMemberOwner_837 : ByStr20) = (recordMemberOwner : Option (Record) -> ByStr20) (maybeRecord : Option (Record))
  (recordOwner : ByStr20) = ($recordMemberOwner_837 : ByStr20)
  match (maybeApproved : Option (ByStr20)) with
  | None =>
    (approved : ByStr20) = (zeroByStr20 : ByStr20)
  | Some (approved : ByStr20) =>
    (approved : ByStr20) = (approved : ByStr20)
  (currentRegistrar : ByStr20) <- (registrar : ByStr20)
  (isRecordUnowned : Bool) = eq (recordOwner : ByStr20) (zeroByStr20 : ByStr20)
  (isUnapproved : Bool) = eq (approved : ByStr20) (zeroByStr20 : ByStr20)
  ($andb_835 : Bool -> Bool) = (andb : Bool -> Bool -> Bool) (isRecordUnowned : Bool)
  ($andb_836 : Bool) = ($andb_835 : Bool -> Bool) (isUnapproved : Bool)
  (isOk : Bool) = ($andb_836 : Bool)
  match (isOk : Bool) with
  | True =>
    accept
    (m : Message) = { _tag : (String "register"); _amount : (_amount : Uint128); _recipient : (currentRegistrar : ByStr20); origin : (_sender : ByStr20); node : (node : ByStr32); parent : (parent : ByStr32); label : (label : String) }
    ($oneMsg_834 : List (Message)) = (oneMsg : Message -> List (Message)) (m : Message)
    (msgs : List (Message)) = ($oneMsg_834 : List (Message))
    send (msgs : List (Message))
  | False =>
    

transition onResolverConfigured ((node : ByStr32) : ByStr32)
  (maybeRecord : Option (Record))(records : Map (ByStr32) (Record))[(node : ByStr32)]
  match (maybeRecord : Option (Record)) with
  | None =>
    
  | Some (record : Record) =>
    match (record : Record) with
    | Record (owner : ByStr20) (resolver : ByStr20) =>
      (isOk : Bool) = eq (resolver : ByStr20) (_sender : ByStr20)
      match (isOk : Bool) with
      | True =>
        ($eConfigured_840 : ByStr20 -> ByStr20 -> Event) = (eConfigured : ByStr32 -> ByStr20 -> ByStr20 -> Event) (node : ByStr32)
        ($eConfigured_841 : ByStr20 -> Event) = ($eConfigured_840 : ByStr20 -> ByStr20 -> Event) (owner : ByStr20)
        ($eConfigured_842 : Event) = ($eConfigured_841 : ByStr20 -> Event) (resolver : ByStr20)
        (e : Event) = ($eConfigured_842 : Event)
        event (e : Event)
      | False =>
        

LLVM module:
; ModuleID = 'Registry'
source_filename = "Registry"

{ "warnings": [], "gas_remaining": "4001329" }
