

; gas_remaining: 4001998
; ModuleID = 'MmphTest'
source_filename = "MmphTest"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_5" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_37" = type { %TyDescrString, i32, i32, i32, %"$TyDescrTy_ADTTyp_Specl_36"** }
%TyDescrString = type { i8*, i32 }
%"$TyDescrTy_ADTTyp_Specl_36" = type { %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_38"**, %"$TyDescrTy_ADTTyp_37"* }
%"$TyDescrTy_ADTTyp_Constr_38" = type { %TyDescrString, i32, %_TyDescrTy_Typ** }
%"$TyDescr_AddrTyp_42" = type { i32, %"$TyDescr_AddrFieldTyp_41"* }
%"$TyDescr_AddrFieldTyp_41" = type { %TyDescrString, %_TyDescrTy_Typ* }
%Int32 = type { i32 }
%Uint32 = type { i32 }
%TName_Option_Uint32 = type { i8, %CName_Some_Uint32*, %CName_None_Uint32* }
%CName_Some_Uint32 = type <{ i8, %Uint32 }>
%CName_None_Uint32 = type <{ i8 }>
%"$ParamDescr_179" = type { %ParamDescrString, %_TyDescrTy_Typ* }
%ParamDescrString = type { i8*, i32 }
%"$TransDescr_180" = type { %ParamDescrString, i32, %"$ParamDescr_179"* }
%"$$fundef_3_env_57" = type { %Uint32 }
%Uint128 = type { i128 }
%String = type { i8*, i32 }

@_execptr = global i8* null
@_gasrem = global i64 0
@"$TyDescr_Int32_Prim_6" = global %"$TyDescrTy_PrimTyp_5" zeroinitializer
@"$TyDescr_Int32_7" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int32_Prim_6" to i8*) }
@"$TyDescr_Uint32_Prim_8" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 0 }
@"$TyDescr_Uint32_9" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint32_Prim_8" to i8*) }
@"$TyDescr_Int64_Prim_10" = global %"$TyDescrTy_PrimTyp_5" { i32 0, i32 1 }
@"$TyDescr_Int64_11" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int64_Prim_10" to i8*) }
@"$TyDescr_Uint64_Prim_12" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 1 }
@"$TyDescr_Uint64_13" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint64_Prim_12" to i8*) }
@"$TyDescr_Int128_Prim_14" = global %"$TyDescrTy_PrimTyp_5" { i32 0, i32 2 }
@"$TyDescr_Int128_15" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int128_Prim_14" to i8*) }
@"$TyDescr_Uint128_Prim_16" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 2 }
@"$TyDescr_Uint128_17" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint128_Prim_16" to i8*) }
@"$TyDescr_Int256_Prim_18" = global %"$TyDescrTy_PrimTyp_5" { i32 0, i32 3 }
@"$TyDescr_Int256_19" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int256_Prim_18" to i8*) }
@"$TyDescr_Uint256_Prim_20" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 3 }
@"$TyDescr_Uint256_21" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint256_Prim_20" to i8*) }
@"$TyDescr_String_Prim_22" = global %"$TyDescrTy_PrimTyp_5" { i32 2, i32 0 }
@"$TyDescr_String_23" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_String_Prim_22" to i8*) }
@"$TyDescr_Bnum_Prim_24" = global %"$TyDescrTy_PrimTyp_5" { i32 3, i32 0 }
@"$TyDescr_Bnum_25" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Bnum_Prim_24" to i8*) }
@"$TyDescr_Message_Prim_26" = global %"$TyDescrTy_PrimTyp_5" { i32 4, i32 0 }
@"$TyDescr_Message_27" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Message_Prim_26" to i8*) }
@"$TyDescr_Event_Prim_28" = global %"$TyDescrTy_PrimTyp_5" { i32 5, i32 0 }
@"$TyDescr_Event_29" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Event_Prim_28" to i8*) }
@"$TyDescr_Exception_Prim_30" = global %"$TyDescrTy_PrimTyp_5" { i32 6, i32 0 }
@"$TyDescr_Exception_31" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Exception_Prim_30" to i8*) }
@"$TyDescr_Bystr_Prim_32" = global %"$TyDescrTy_PrimTyp_5" { i32 7, i32 0 }
@"$TyDescr_Bystr_33" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Bystr_Prim_32" to i8*) }
@"$TyDescr_Bystr20_Prim_34" = global %"$TyDescrTy_PrimTyp_5" { i32 8, i32 20 }
@"$TyDescr_Bystr20_35" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Bystr20_Prim_34" to i8*) }
@"$TyDescr_ADT_Option_Uint32_39" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_36"* @"$TyDescr_Option_Uint32_ADTTyp_Specl_53" to i8*) }
@"$TyDescr_Addr_43" = unnamed_addr constant %_TyDescrTy_Typ { i32 3, i8* bitcast (%"$TyDescr_AddrTyp_42"* @"$TyDescr_AddrFields_56" to i8*) }
@"$TyDescr_Option_ADTTyp_44" = unnamed_addr constant %"$TyDescrTy_ADTTyp_37" { %TyDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$TyDescr_ADT_Option_55", i32 0, i32 0), i32 6 }, i32 1, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_36"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_36"*], [1 x %"$TyDescrTy_ADTTyp_Specl_36"*]* @"$TyDescr_Option_ADTTyp_m_specls_54", i32 0, i32 0) }
@"$TyDescr_Option_Some_Uint32_Constr_m_args_45" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Uint32_9"]
@"$TyDescr_ADT_Some_46" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_Some_Uint32_ADTTyp_Constr_47" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_38" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_46", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Uint32_Constr_m_args_45", i32 0, i32 0) }
@"$TyDescr_Option_None_Uint32_Constr_m_args_48" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_49" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_None_Uint32_ADTTyp_Constr_50" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_38" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_49", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Uint32_Constr_m_args_48", i32 0, i32 0) }
@"$TyDescr_Option_Uint32_ADTTyp_Specl_m_constrs_51" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_38"*] [%"$TyDescrTy_ADTTyp_Constr_38"* @"$TyDescr_Option_Some_Uint32_ADTTyp_Constr_47", %"$TyDescrTy_ADTTyp_Constr_38"* @"$TyDescr_Option_None_Uint32_ADTTyp_Constr_50"]
@"$TyDescr_Option_Uint32_ADTTyp_Specl_m_TArgs_52" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Uint32_9"]
@"$TyDescr_Option_Uint32_ADTTyp_Specl_53" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_36" { %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Uint32_ADTTyp_Specl_m_TArgs_52", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_38"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_38"*], [2 x %"$TyDescrTy_ADTTyp_Constr_38"*]* @"$TyDescr_Option_Uint32_ADTTyp_Specl_m_constrs_51", i32 0, i32 0), %"$TyDescrTy_ADTTyp_37"* @"$TyDescr_Option_ADTTyp_44" }
@"$TyDescr_Option_ADTTyp_m_specls_54" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_36"*] [%"$TyDescrTy_ADTTyp_Specl_36"* @"$TyDescr_Option_Uint32_ADTTyp_Specl_53"]
@"$TyDescr_ADT_Option_55" = unnamed_addr constant [6 x i8] c"Option"
@"$TyDescr_AddrFields_56" = unnamed_addr constant %"$TyDescr_AddrTyp_42" { i32 -3, %"$TyDescr_AddrFieldTyp_41"* null }
@"$_gas_charge_acc_1" = global %Int32 zeroinitializer
@"$_gas_charge_accMmphTest_0" = global %Int32 zeroinitializer
@MmphTest.option_uint32_value = global { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } zeroinitializer
@_cparam__scilla_version = global %Uint32 zeroinitializer
@_cparam__this_address = global [20 x i8] zeroinitializer
@_cparam__creation_block = global i8* null
@"$stringlit_143" = unnamed_addr constant [10 x i8] c"_eventname"
@"$stringlit_148" = unnamed_addr constant [3 x i8] c"foo"
@"$stringlit_151" = unnamed_addr constant [3 x i8] c"res"
@_tydescr_table = constant [17 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Event_29", %_TyDescrTy_Typ* @"$TyDescr_Int64_11", %_TyDescrTy_Typ* @"$TyDescr_Addr_43", %_TyDescrTy_Typ* @"$TyDescr_Bystr20_35", %_TyDescrTy_Typ* @"$TyDescr_Uint256_21", %_TyDescrTy_Typ* @"$TyDescr_Uint32_9", %_TyDescrTy_Typ* @"$TyDescr_Uint64_13", %_TyDescrTy_Typ* @"$TyDescr_Bnum_25", %_TyDescrTy_Typ* @"$TyDescr_Uint128_17", %_TyDescrTy_Typ* @"$TyDescr_Exception_31", %_TyDescrTy_Typ* @"$TyDescr_String_23", %_TyDescrTy_Typ* @"$TyDescr_Int256_19", %_TyDescrTy_Typ* @"$TyDescr_Int128_15", %_TyDescrTy_Typ* @"$TyDescr_Bystr_33", %_TyDescrTy_Typ* @"$TyDescr_Message_27", %_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Uint32_39", %_TyDescrTy_Typ* @"$TyDescr_Int32_7"]
@_tydescr_table_length = constant i32 17
@"$pname__scilla_version_181" = unnamed_addr constant [15 x i8] c"_scilla_version"
@"$pname__this_address_182" = unnamed_addr constant [13 x i8] c"_this_address"
@"$pname__creation_block_183" = unnamed_addr constant [15 x i8] c"_creation_block"
@_contract_parameters = constant [3 x %"$ParamDescr_179"] [%"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__scilla_version_181", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Uint32_9" }, %"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"$pname__this_address_182", i32 0, i32 0), i32 13 }, %_TyDescrTy_Typ* @"$TyDescr_Bystr20_35" }, %"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__creation_block_183", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Bnum_25" }]
@_contract_parameters_length = constant i32 3
@"$tpname__amount_184" = unnamed_addr constant [7 x i8] c"_amount"
@"$tpname__origin_185" = unnamed_addr constant [7 x i8] c"_origin"
@"$tpname__sender_186" = unnamed_addr constant [7 x i8] c"_sender"
@"$tpname_uintopt_187" = unnamed_addr constant [7 x i8] c"uintopt"
@"$tparams_foo_188" = unnamed_addr constant [4 x %"$ParamDescr_179"] [%"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__amount_184", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Uint128_17" }, %"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__origin_185", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_43" }, %"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__sender_186", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_43" }, %"$ParamDescr_179" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname_uintopt_187", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Uint32_39" }]
@"$tname_foo_189" = unnamed_addr constant [3 x i8] c"foo"
@_transition_parameters = constant [1 x %"$TransDescr_180"] [%"$TransDescr_180" { %ParamDescrString { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$tname_foo_189", i32 0, i32 0), i32 3 }, i32 4, %"$ParamDescr_179"* getelementptr inbounds ([4 x %"$ParamDescr_179"], [4 x %"$ParamDescr_179"]* @"$tparams_foo_188", i32 0, i32 0) }]
@_transition_parameters_length = constant i32 1

define internal %Uint32 @"$fundef_3"(%"$$fundef_3_env_57"* %0, %TName_Option_Uint32* %1) !dbg !4 {
entry:
  %"$$fundef_3_env_default_58" = getelementptr inbounds %"$$fundef_3_env_57", %"$$fundef_3_env_57"* %0, i32 0, i32 0
  %"$default_envload_59" = load %Uint32, %Uint32* %"$$fundef_3_env_default_58", align 4
  %default = alloca %Uint32, align 8
  store %Uint32 %"$default_envload_59", %Uint32* %default, align 4
  %"$retval_4" = alloca %Uint32, align 8
  %"$gasrem_60" = load i64, i64* @_gasrem, align 8
  %"$gascmp_61" = icmp ugt i64 2, %"$gasrem_60"
  br i1 %"$gascmp_61", label %"$out_of_gas_62", label %"$have_gas_63"

"$out_of_gas_62":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_63"

"$have_gas_63":                                   ; preds = %"$out_of_gas_62", %entry
  %"$consume_64" = sub i64 %"$gasrem_60", 2
  store i64 %"$consume_64", i64* @_gasrem, align 8
  %"$opt_val_tag_66" = getelementptr inbounds %TName_Option_Uint32, %TName_Option_Uint32* %1, i32 0, i32 0
  %"$opt_val_tag_67" = load i8, i8* %"$opt_val_tag_66", align 1
  switch i8 %"$opt_val_tag_67", label %"$empty_default_68" [
    i8 0, label %"$Some_69"
    i8 1, label %"$None_79"
  ], !dbg !8

"$Some_69":                                       ; preds = %"$have_gas_63"
  %"$opt_val_70" = bitcast %TName_Option_Uint32* %1 to %CName_Some_Uint32*
  %"$v_gep_71" = getelementptr inbounds %CName_Some_Uint32, %CName_Some_Uint32* %"$opt_val_70", i32 0, i32 1
  %"$v_load_72" = load %Uint32, %Uint32* %"$v_gep_71", align 4
  %v = alloca %Uint32, align 8
  store %Uint32 %"$v_load_72", %Uint32* %v, align 4
  %"$gasrem_73" = load i64, i64* @_gasrem, align 8
  %"$gascmp_74" = icmp ugt i64 1, %"$gasrem_73"
  br i1 %"$gascmp_74", label %"$out_of_gas_75", label %"$have_gas_76"

"$out_of_gas_75":                                 ; preds = %"$Some_69"
  call void @_out_of_gas()
  br label %"$have_gas_76"

"$have_gas_76":                                   ; preds = %"$out_of_gas_75", %"$Some_69"
  %"$consume_77" = sub i64 %"$gasrem_73", 1
  store i64 %"$consume_77", i64* @_gasrem, align 8
  %"$v_78" = load %Uint32, %Uint32* %v, align 4
  store %Uint32 %"$v_78", %Uint32* %"$retval_4", align 4, !dbg !9
  br label %"$matchsucc_65"

"$None_79":                                       ; preds = %"$have_gas_63"
  %"$opt_val_80" = bitcast %TName_Option_Uint32* %1 to %CName_None_Uint32*
  %"$gasrem_81" = load i64, i64* @_gasrem, align 8
  %"$gascmp_82" = icmp ugt i64 1, %"$gasrem_81"
  br i1 %"$gascmp_82", label %"$out_of_gas_83", label %"$have_gas_84"

"$out_of_gas_83":                                 ; preds = %"$None_79"
  call void @_out_of_gas()
  br label %"$have_gas_84"

"$have_gas_84":                                   ; preds = %"$out_of_gas_83", %"$None_79"
  %"$consume_85" = sub i64 %"$gasrem_81", 1
  store i64 %"$consume_85", i64* @_gasrem, align 8
  %"$default_86" = load %Uint32, %Uint32* %default, align 4
  store %Uint32 %"$default_86", %Uint32* %"$retval_4", align 4, !dbg !12
  br label %"$matchsucc_65"

"$empty_default_68":                              ; preds = %"$have_gas_63"
  br label %"$matchsucc_65"

"$matchsucc_65":                                  ; preds = %"$have_gas_84", %"$have_gas_76", %"$empty_default_68"
  %"$$retval_4_87" = load %Uint32, %Uint32* %"$retval_4", align 4
  ret %Uint32 %"$$retval_4_87"
}

declare void @_out_of_gas()

define void @_init_libs() !dbg !14 {
entry:
  %"$gasrem_88" = load i64, i64* @_gasrem, align 8
  %"$gascmp_89" = icmp ugt i64 5, %"$gasrem_88"
  br i1 %"$gascmp_89", label %"$out_of_gas_90", label %"$have_gas_91"

"$out_of_gas_90":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_91"

"$have_gas_91":                                   ; preds = %"$out_of_gas_90", %entry
  %"$consume_92" = sub i64 %"$gasrem_88", 5
  store i64 %"$consume_92", i64* @_gasrem, align 8
  store %Int32 { i32 5 }, %Int32* @"$_gas_charge_acc_1", align 4, !dbg !16
  %"$gasrem_93" = load i64, i64* @_gasrem, align 8
  %"$gascmp_94" = icmp ugt i64 3, %"$gasrem_93"
  br i1 %"$gascmp_94", label %"$out_of_gas_95", label %"$have_gas_96"

"$out_of_gas_95":                                 ; preds = %"$have_gas_91"
  call void @_out_of_gas()
  br label %"$have_gas_96"

"$have_gas_96":                                   ; preds = %"$out_of_gas_95", %"$have_gas_91"
  %"$consume_97" = sub i64 %"$gasrem_93", 3
  store i64 %"$consume_97", i64* @_gasrem, align 8
  store %Int32 { i32 3 }, %Int32* @"$_gas_charge_accMmphTest_0", align 4, !dbg !16
  %"$gasrem_98" = load i64, i64* @_gasrem, align 8
  %"$gascmp_99" = icmp ugt i64 5, %"$gasrem_98"
  br i1 %"$gascmp_99", label %"$out_of_gas_100", label %"$have_gas_101"

"$out_of_gas_100":                                ; preds = %"$have_gas_96"
  call void @_out_of_gas()
  br label %"$have_gas_101"

"$have_gas_101":                                  ; preds = %"$out_of_gas_100", %"$have_gas_96"
  %"$consume_102" = sub i64 %"$gasrem_98", 5
  store i64 %"$consume_102", i64* @_gasrem, align 8
  %default = alloca %Uint32, align 8
  store %Uint32 zeroinitializer, %Uint32* %default, align 4, !dbg !16
  %"$$fundef_3_envp_103_load" = load i8*, i8** @_execptr, align 8
  %"$$fundef_3_envp_103_salloc" = call i8* @_salloc(i8* %"$$fundef_3_envp_103_load", i64 4)
  %"$$fundef_3_envp_103" = bitcast i8* %"$$fundef_3_envp_103_salloc" to %"$$fundef_3_env_57"*
  %"$$fundef_3_env_voidp_105" = bitcast %"$$fundef_3_env_57"* %"$$fundef_3_envp_103" to i8*
  %"$$fundef_3_cloval_106" = insertvalue { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } { %Uint32 (i8*, %TName_Option_Uint32*)* bitcast (%Uint32 (%"$$fundef_3_env_57"*, %TName_Option_Uint32*)* @"$fundef_3" to %Uint32 (i8*, %TName_Option_Uint32*)*), i8* undef }, i8* %"$$fundef_3_env_voidp_105", 1
  %"$$fundef_3_env_default_107" = getelementptr inbounds %"$$fundef_3_env_57", %"$$fundef_3_env_57"* %"$$fundef_3_envp_103", i32 0, i32 0
  %"$default_108" = load %Uint32, %Uint32* %default, align 4
  store %Uint32 %"$default_108", %Uint32* %"$$fundef_3_env_default_107", align 4
  store { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } %"$$fundef_3_cloval_106", { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* }* @MmphTest.option_uint32_value, align 8, !dbg !17
  ret void
}

declare i8* @_salloc(i8*, i64)

define void @_deploy_ops() !dbg !18 {
entry:
  %"$gasrem_109" = load i64, i64* @_gasrem, align 8
  %"$gascmp_110" = icmp ugt i64 1, %"$gasrem_109"
  br i1 %"$gascmp_110", label %"$out_of_gas_111", label %"$have_gas_112"

"$out_of_gas_111":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_112"

"$have_gas_112":                                  ; preds = %"$out_of_gas_111", %entry
  %"$consume_113" = sub i64 %"$gasrem_109", 1
  store i64 %"$consume_113", i64* @_gasrem, align 8
  ret void
}

define internal void @"$foo_114"(%Uint128 %_amount, [20 x i8]* %"$_origin_115", [20 x i8]* %"$_sender_116", %TName_Option_Uint32* %uintopt) !dbg !19 {
entry:
  %_origin = load [20 x i8], [20 x i8]* %"$_origin_115", align 1
  %_sender = load [20 x i8], [20 x i8]* %"$_sender_116", align 1
  %"$gasrem_117" = load i64, i64* @_gasrem, align 8
  %"$gascmp_118" = icmp ugt i64 1, %"$gasrem_117"
  br i1 %"$gascmp_118", label %"$out_of_gas_119", label %"$have_gas_120"

"$out_of_gas_119":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_120"

"$have_gas_120":                                  ; preds = %"$out_of_gas_119", %entry
  %"$consume_121" = sub i64 %"$gasrem_117", 1
  store i64 %"$consume_121", i64* @_gasrem, align 8
  %res = alloca %Uint32, align 8
  %"$gasrem_122" = load i64, i64* @_gasrem, align 8
  %"$gascmp_123" = icmp ugt i64 1, %"$gasrem_122"
  br i1 %"$gascmp_123", label %"$out_of_gas_124", label %"$have_gas_125"

"$out_of_gas_124":                                ; preds = %"$have_gas_120"
  call void @_out_of_gas()
  br label %"$have_gas_125"

"$have_gas_125":                                  ; preds = %"$out_of_gas_124", %"$have_gas_120"
  %"$consume_126" = sub i64 %"$gasrem_122", 1
  store i64 %"$consume_126", i64* @_gasrem, align 8
  %"$MmphTest.option_uint32_value_2" = alloca %Uint32, align 8
  %"$MmphTest.option_uint32_value_127" = load { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* }, { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* }* @MmphTest.option_uint32_value, align 8
  %"$MmphTest.option_uint32_value_fptr_128" = extractvalue { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } %"$MmphTest.option_uint32_value_127", 0
  %"$MmphTest.option_uint32_value_envptr_129" = extractvalue { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } %"$MmphTest.option_uint32_value_127", 1
  %"$MmphTest.option_uint32_value_call_130" = call %Uint32 %"$MmphTest.option_uint32_value_fptr_128"(i8* %"$MmphTest.option_uint32_value_envptr_129", %TName_Option_Uint32* %uintopt), !dbg !20
  store %Uint32 %"$MmphTest.option_uint32_value_call_130", %Uint32* %"$MmphTest.option_uint32_value_2", align 4, !dbg !20
  %"$$MmphTest.option_uint32_value_2_131" = load %Uint32, %Uint32* %"$MmphTest.option_uint32_value_2", align 4
  store %Uint32 %"$$MmphTest.option_uint32_value_2_131", %Uint32* %res, align 4, !dbg !20
  %"$gasrem_132" = load i64, i64* @_gasrem, align 8
  %"$gascmp_133" = icmp ugt i64 1, %"$gasrem_132"
  br i1 %"$gascmp_133", label %"$out_of_gas_134", label %"$have_gas_135"

"$out_of_gas_134":                                ; preds = %"$have_gas_125"
  call void @_out_of_gas()
  br label %"$have_gas_135"

"$have_gas_135":                                  ; preds = %"$out_of_gas_134", %"$have_gas_125"
  %"$consume_136" = sub i64 %"$gasrem_132", 1
  store i64 %"$consume_136", i64* @_gasrem, align 8
  %e = alloca i8*, align 8
  %"$gasrem_137" = load i64, i64* @_gasrem, align 8
  %"$gascmp_138" = icmp ugt i64 1, %"$gasrem_137"
  br i1 %"$gascmp_138", label %"$out_of_gas_139", label %"$have_gas_140"

"$out_of_gas_139":                                ; preds = %"$have_gas_135"
  call void @_out_of_gas()
  br label %"$have_gas_140"

"$have_gas_140":                                  ; preds = %"$out_of_gas_139", %"$have_gas_135"
  %"$consume_141" = sub i64 %"$gasrem_137", 1
  store i64 %"$consume_141", i64* @_gasrem, align 8
  %"$msgobj_142_salloc_load" = load i8*, i8** @_execptr, align 8
  %"$msgobj_142_salloc_salloc" = call i8* @_salloc(i8* %"$msgobj_142_salloc_load", i64 69)
  %"$msgobj_142_salloc" = bitcast i8* %"$msgobj_142_salloc_salloc" to [69 x i8]*
  %"$msgobj_142" = bitcast [69 x i8]* %"$msgobj_142_salloc" to i8*
  store i8 2, i8* %"$msgobj_142", align 1
  %"$msgobj_fname_144" = getelementptr i8, i8* %"$msgobj_142", i32 1
  %"$msgobj_fname_145" = bitcast i8* %"$msgobj_fname_144" to %String*
  store %String { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"$stringlit_143", i32 0, i32 0), i32 10 }, %String* %"$msgobj_fname_145", align 8
  %"$msgobj_td_146" = getelementptr i8, i8* %"$msgobj_142", i32 17
  %"$msgobj_td_147" = bitcast i8* %"$msgobj_td_146" to %_TyDescrTy_Typ**
  store %_TyDescrTy_Typ* @"$TyDescr_String_23", %_TyDescrTy_Typ** %"$msgobj_td_147", align 8
  %"$msgobj_v_149" = getelementptr i8, i8* %"$msgobj_142", i32 25
  %"$msgobj_v_150" = bitcast i8* %"$msgobj_v_149" to %String*
  store %String { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$stringlit_148", i32 0, i32 0), i32 3 }, %String* %"$msgobj_v_150", align 8
  %"$msgobj_fname_152" = getelementptr i8, i8* %"$msgobj_142", i32 41
  %"$msgobj_fname_153" = bitcast i8* %"$msgobj_fname_152" to %String*
  store %String { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$stringlit_151", i32 0, i32 0), i32 3 }, %String* %"$msgobj_fname_153", align 8
  %"$msgobj_td_154" = getelementptr i8, i8* %"$msgobj_142", i32 57
  %"$msgobj_td_155" = bitcast i8* %"$msgobj_td_154" to %_TyDescrTy_Typ**
  store %_TyDescrTy_Typ* @"$TyDescr_Uint32_9", %_TyDescrTy_Typ** %"$msgobj_td_155", align 8
  %"$res_156" = load %Uint32, %Uint32* %res, align 4
  %"$msgobj_v_157" = getelementptr i8, i8* %"$msgobj_142", i32 65
  %"$msgobj_v_158" = bitcast i8* %"$msgobj_v_157" to %Uint32*
  store %Uint32 %"$res_156", %Uint32* %"$msgobj_v_158", align 4
  store i8* %"$msgobj_142", i8** %e, align 8, !dbg !21
  %"$e_160" = load i8*, i8** %e, align 8
  %"$_literal_cost_call_162" = call i64 @_literal_cost(%_TyDescrTy_Typ* @"$TyDescr_Event_29", i8* %"$e_160")
  %"$gasrem_163" = load i64, i64* @_gasrem, align 8
  %"$gascmp_164" = icmp ugt i64 %"$_literal_cost_call_162", %"$gasrem_163"
  br i1 %"$gascmp_164", label %"$out_of_gas_165", label %"$have_gas_166"

"$out_of_gas_165":                                ; preds = %"$have_gas_140"
  call void @_out_of_gas()
  br label %"$have_gas_166"

"$have_gas_166":                                  ; preds = %"$out_of_gas_165", %"$have_gas_140"
  %"$consume_167" = sub i64 %"$gasrem_163", %"$_literal_cost_call_162"
  store i64 %"$consume_167", i64* @_gasrem, align 8
  %"$execptr_load_168" = load i8*, i8** @_execptr, align 8
  %"$e_169" = load i8*, i8** %e, align 8
  call void @_event(i8* %"$execptr_load_168", %_TyDescrTy_Typ* @"$TyDescr_Event_29", i8* %"$e_169"), !dbg !22
  ret void
}

declare i64 @_literal_cost(%_TyDescrTy_Typ*, i8*)

declare void @_event(i8*, %_TyDescrTy_Typ*, i8*)

define void @foo(i8* %0) !dbg !23 {
entry:
  %"$_amount_171" = getelementptr i8, i8* %0, i32 0
  %"$_amount_172" = bitcast i8* %"$_amount_171" to %Uint128*
  %_amount = load %Uint128, %Uint128* %"$_amount_172", align 8
  %"$_origin_173" = getelementptr i8, i8* %0, i32 16
  %"$_origin_174" = bitcast i8* %"$_origin_173" to [20 x i8]*
  %"$_sender_175" = getelementptr i8, i8* %0, i32 36
  %"$_sender_176" = bitcast i8* %"$_sender_175" to [20 x i8]*
  %"$uintopt_177" = getelementptr i8, i8* %0, i32 56
  %"$uintopt_178" = bitcast i8* %"$uintopt_177" to %TName_Option_Uint32**
  %uintopt = load %TName_Option_Uint32*, %TName_Option_Uint32** %"$uintopt_178", align 8
  call void @"$foo_114"(%Uint128 %_amount, [20 x i8]* %"$_origin_174", [20 x i8]* %"$_sender_176", %TName_Option_Uint32* %uintopt), !dbg !24
  ret void
}

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C89, file: !2, producer: "Scilla Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: LineTablesOnly, enums: !3, splitDebugInlining: false)
!2 = !DIFile(filename: "MmphTest.scilla", directory: "codegen/contr")
!3 = !{}
!4 = distinct !DISubprogram(name: "$fundef_3", linkageName: "$fundef_3", scope: !2, file: !2, line: 12, type: !5, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "void")
!8 = !DILocation(line: 12, column: 5, scope: !4)
!9 = !DILocation(line: 13, column: 17, scope: !10)
!10 = distinct !DILexicalBlock(scope: !11, file: !2, line: 13, column: 7)
!11 = distinct !DILexicalBlock(scope: !4, file: !2, line: 12, column: 5)
!12 = !DILocation(line: 14, column: 15, scope: !13)
!13 = distinct !DILexicalBlock(scope: !11, file: !2, line: 14, column: 7)
!14 = distinct !DISubprogram(name: "_init_libs", linkageName: "_init_libs", scope: !15, file: !15, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!15 = !DIFile(filename: ".", directory: ".")
!16 = !DILocation(line: 0, scope: !14)
!17 = !DILocation(line: 12, column: 5, scope: !14)
!18 = distinct !DISubprogram(name: "_deploy_ops", linkageName: "_deploy_ops", scope: !15, file: !15, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!19 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !2, file: !2, line: 26, type: !5, scopeLine: 26, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!20 = !DILocation(line: 27, column: 9, scope: !19)
!21 = !DILocation(line: 28, column: 7, scope: !19)
!22 = !DILocation(line: 29, column: 3, scope: !19)
!23 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !2, file: !2, line: 26, type: !5, scopeLine: 26, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!24 = !DILocation(line: 26, column: 12, scope: !23)
