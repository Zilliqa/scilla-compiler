

; gas_remaining: 4001998
; ModuleID = 'MmphTest'
source_filename = "MmphTest"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"$TyDescrTy_PrimTyp_5" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_39" = type { %TyDescrString, i32, i32, i32, %"$TyDescrTy_ADTTyp_Specl_38"** }
%TyDescrString = type { i8*, i32 }
%"$TyDescrTy_ADTTyp_Specl_38" = type { %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_40"**, %"$TyDescrTy_ADTTyp_39"* }
%"$TyDescrTy_ADTTyp_Constr_40" = type { %TyDescrString, i32, %_TyDescrTy_Typ** }
%"$TyDescr_AddrTyp_44" = type { i32, %"$TyDescr_AddrFieldTyp_43"* }
%"$TyDescr_AddrFieldTyp_43" = type { %TyDescrString, %_TyDescrTy_Typ* }
%Int32 = type { i32 }
%Uint32 = type { i32 }
%TName_Option_Uint32 = type { i8, %CName_Some_Uint32*, %CName_None_Uint32* }
%CName_Some_Uint32 = type <{ i8, %Uint32 }>
%CName_None_Uint32 = type <{ i8 }>
%"$ParamDescr_186" = type { %ParamDescrString, %_TyDescrTy_Typ* }
%ParamDescrString = type { i8*, i32 }
%"$TransDescr_187" = type { %ParamDescrString, i32, %"$ParamDescr_186"* }
%"$$fundef_3_env_59" = type { %Uint32 }
%Uint128 = type { i128 }
%String = type { i8*, i32 }

@_execptr = global i8* null
@_gasrem = global i64 0
@"$TyDescr_Int32_Prim_6" = global %"$TyDescrTy_PrimTyp_5" zeroinitializer
@"$TyDescr_Int32_7" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int32_Prim_6" to i8*) }
@"$TyDescr_Uint32_Prim_8" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 0 }
@"$TyDescr_Uint32_9" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint32_Prim_8" to i8*) }
@"$TyDescr_Int64_Prim_10" = global %"$TyDescrTy_PrimTyp_5" { i32 0, i32 1 }
@"$TyDescr_Int64_11" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int64_Prim_10" to i8*) }
@"$TyDescr_Uint64_Prim_12" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 1 }
@"$TyDescr_Uint64_13" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint64_Prim_12" to i8*) }
@"$TyDescr_Int128_Prim_14" = global %"$TyDescrTy_PrimTyp_5" { i32 0, i32 2 }
@"$TyDescr_Int128_15" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int128_Prim_14" to i8*) }
@"$TyDescr_Uint128_Prim_16" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 2 }
@"$TyDescr_Uint128_17" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint128_Prim_16" to i8*) }
@"$TyDescr_Int256_Prim_18" = global %"$TyDescrTy_PrimTyp_5" { i32 0, i32 3 }
@"$TyDescr_Int256_19" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Int256_Prim_18" to i8*) }
@"$TyDescr_Uint256_Prim_20" = global %"$TyDescrTy_PrimTyp_5" { i32 1, i32 3 }
@"$TyDescr_Uint256_21" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Uint256_Prim_20" to i8*) }
@"$TyDescr_String_Prim_22" = global %"$TyDescrTy_PrimTyp_5" { i32 2, i32 0 }
@"$TyDescr_String_23" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_String_Prim_22" to i8*) }
@"$TyDescr_Bnum_Prim_24" = global %"$TyDescrTy_PrimTyp_5" { i32 3, i32 0 }
@"$TyDescr_Bnum_25" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Bnum_Prim_24" to i8*) }
@"$TyDescr_Message_Prim_26" = global %"$TyDescrTy_PrimTyp_5" { i32 4, i32 0 }
@"$TyDescr_Message_27" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Message_Prim_26" to i8*) }
@"$TyDescr_Event_Prim_28" = global %"$TyDescrTy_PrimTyp_5" { i32 5, i32 0 }
@"$TyDescr_Event_29" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Event_Prim_28" to i8*) }
@"$TyDescr_Exception_Prim_30" = global %"$TyDescrTy_PrimTyp_5" { i32 6, i32 0 }
@"$TyDescr_Exception_31" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Exception_Prim_30" to i8*) }
@"$TyDescr_ReplicateContr_Prim_32" = global %"$TyDescrTy_PrimTyp_5" { i32 9, i32 0 }
@"$TyDescr_ReplicateContr_33" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_ReplicateContr_Prim_32" to i8*) }
@"$TyDescr_Bystr_Prim_34" = global %"$TyDescrTy_PrimTyp_5" { i32 7, i32 0 }
@"$TyDescr_Bystr_35" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Bystr_Prim_34" to i8*) }
@"$TyDescr_Bystr20_Prim_36" = global %"$TyDescrTy_PrimTyp_5" { i32 8, i32 20 }
@"$TyDescr_Bystr20_37" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_5"* @"$TyDescr_Bystr20_Prim_36" to i8*) }
@"$TyDescr_ADT_Option_Uint32_41" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_38"* @"$TyDescr_Option_Uint32_ADTTyp_Specl_55" to i8*) }
@"$TyDescr_Addr_45" = unnamed_addr constant %_TyDescrTy_Typ { i32 3, i8* bitcast (%"$TyDescr_AddrTyp_44"* @"$TyDescr_AddrFields_58" to i8*) }
@"$TyDescr_Option_ADTTyp_46" = unnamed_addr constant %"$TyDescrTy_ADTTyp_39" { %TyDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$TyDescr_ADT_Option_57", i32 0, i32 0), i32 6 }, i32 1, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_38"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_38"*], [1 x %"$TyDescrTy_ADTTyp_Specl_38"*]* @"$TyDescr_Option_ADTTyp_m_specls_56", i32 0, i32 0) }
@"$TyDescr_Option_Some_Uint32_Constr_m_args_47" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Uint32_9"]
@"$TyDescr_ADT_Some_48" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_Some_Uint32_ADTTyp_Constr_49" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_40" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_48", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Uint32_Constr_m_args_47", i32 0, i32 0) }
@"$TyDescr_Option_None_Uint32_Constr_m_args_50" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_51" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_None_Uint32_ADTTyp_Constr_52" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_40" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_51", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Uint32_Constr_m_args_50", i32 0, i32 0) }
@"$TyDescr_Option_Uint32_ADTTyp_Specl_m_constrs_53" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_40"*] [%"$TyDescrTy_ADTTyp_Constr_40"* @"$TyDescr_Option_Some_Uint32_ADTTyp_Constr_49", %"$TyDescrTy_ADTTyp_Constr_40"* @"$TyDescr_Option_None_Uint32_ADTTyp_Constr_52"]
@"$TyDescr_Option_Uint32_ADTTyp_Specl_m_TArgs_54" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Uint32_9"]
@"$TyDescr_Option_Uint32_ADTTyp_Specl_55" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_38" { %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Uint32_ADTTyp_Specl_m_TArgs_54", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_40"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_40"*], [2 x %"$TyDescrTy_ADTTyp_Constr_40"*]* @"$TyDescr_Option_Uint32_ADTTyp_Specl_m_constrs_53", i32 0, i32 0), %"$TyDescrTy_ADTTyp_39"* @"$TyDescr_Option_ADTTyp_46" }
@"$TyDescr_Option_ADTTyp_m_specls_56" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_38"*] [%"$TyDescrTy_ADTTyp_Specl_38"* @"$TyDescr_Option_Uint32_ADTTyp_Specl_55"]
@"$TyDescr_ADT_Option_57" = unnamed_addr constant [6 x i8] c"Option"
@"$TyDescr_AddrFields_58" = unnamed_addr constant %"$TyDescr_AddrTyp_44" { i32 -3, %"$TyDescr_AddrFieldTyp_43"* null }
@"$_gas_charge_acc_1" = global %Int32 zeroinitializer
@"$_gas_charge_accMmphTest_0" = global %Int32 zeroinitializer
@MmphTest.option_uint32_value = global { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } zeroinitializer
@_cparam__scilla_version = global %Uint32 zeroinitializer
@_cparam__this_address = global [20 x i8] zeroinitializer
@_cparam__creation_block = global i8* null
@"$stringlit_146" = unnamed_addr constant [10 x i8] c"_eventname"
@"$stringlit_151" = unnamed_addr constant [3 x i8] c"foo"
@"$stringlit_154" = unnamed_addr constant [3 x i8] c"res"
@_tydescr_table = constant [18 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Event_29", %_TyDescrTy_Typ* @"$TyDescr_Int64_11", %_TyDescrTy_Typ* @"$TyDescr_Addr_45", %_TyDescrTy_Typ* @"$TyDescr_Bystr20_37", %_TyDescrTy_Typ* @"$TyDescr_Uint256_21", %_TyDescrTy_Typ* @"$TyDescr_Uint32_9", %_TyDescrTy_Typ* @"$TyDescr_Uint64_13", %_TyDescrTy_Typ* @"$TyDescr_Bnum_25", %_TyDescrTy_Typ* @"$TyDescr_Uint128_17", %_TyDescrTy_Typ* @"$TyDescr_Exception_31", %_TyDescrTy_Typ* @"$TyDescr_String_23", %_TyDescrTy_Typ* @"$TyDescr_Int256_19", %_TyDescrTy_Typ* @"$TyDescr_Int128_15", %_TyDescrTy_Typ* @"$TyDescr_Bystr_35", %_TyDescrTy_Typ* @"$TyDescr_ReplicateContr_33", %_TyDescrTy_Typ* @"$TyDescr_Message_27", %_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Uint32_41", %_TyDescrTy_Typ* @"$TyDescr_Int32_7"]
@_tydescr_table_length = constant i32 18
@"$pname__scilla_version_188" = unnamed_addr constant [15 x i8] c"_scilla_version"
@"$pname__this_address_189" = unnamed_addr constant [13 x i8] c"_this_address"
@"$pname__creation_block_190" = unnamed_addr constant [15 x i8] c"_creation_block"
@_contract_parameters = constant [3 x %"$ParamDescr_186"] [%"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__scilla_version_188", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Uint32_9" }, %"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"$pname__this_address_189", i32 0, i32 0), i32 13 }, %_TyDescrTy_Typ* @"$TyDescr_Bystr20_37" }, %"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__creation_block_190", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Bnum_25" }]
@_contract_parameters_length = constant i32 3
@"$tpname__amount_191" = unnamed_addr constant [7 x i8] c"_amount"
@"$tpname__origin_192" = unnamed_addr constant [7 x i8] c"_origin"
@"$tpname__sender_193" = unnamed_addr constant [7 x i8] c"_sender"
@"$tpname_uintopt_194" = unnamed_addr constant [7 x i8] c"uintopt"
@"$tparams_foo_195" = unnamed_addr constant [4 x %"$ParamDescr_186"] [%"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__amount_191", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Uint128_17" }, %"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__origin_192", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_45" }, %"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__sender_193", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_45" }, %"$ParamDescr_186" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname_uintopt_194", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Uint32_41" }]
@"$tname_foo_196" = unnamed_addr constant [3 x i8] c"foo"
@_transition_parameters = constant [1 x %"$TransDescr_187"] [%"$TransDescr_187" { %ParamDescrString { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$tname_foo_196", i32 0, i32 0), i32 3 }, i32 4, %"$ParamDescr_186"* getelementptr inbounds ([4 x %"$ParamDescr_186"], [4 x %"$ParamDescr_186"]* @"$tparams_foo_195", i32 0, i32 0) }]
@_transition_parameters_length = constant i32 1

define internal %Uint32 @"$fundef_3"(%"$$fundef_3_env_59"* %0, %TName_Option_Uint32* %1) !dbg !3 {
entry:
  %"$opt_val_90" = alloca %TName_Option_Uint32*, align 8
  store %TName_Option_Uint32* %1, %TName_Option_Uint32** %"$opt_val_90", align 8
  call void @llvm.dbg.declare(metadata %TName_Option_Uint32** %"$opt_val_90", metadata !8, metadata !DIExpression()), !dbg !11
  %"$$fundef_3_env_default_60" = getelementptr inbounds %"$$fundef_3_env_59", %"$$fundef_3_env_59"* %0, i32 0, i32 0
  %"$default_envload_61" = load %Uint32, %Uint32* %"$$fundef_3_env_default_60", align 4
  %default = alloca %Uint32, align 8
  store %Uint32 %"$default_envload_61", %Uint32* %default, align 4
  %"$retval_4" = alloca %Uint32, align 8
  call void @llvm.dbg.declare(metadata %Uint32* %"$retval_4", metadata !12, metadata !DIExpression()), !dbg !14
  %"$gasrem_62" = load i64, i64* @_gasrem, align 8
  %"$gascmp_63" = icmp ugt i64 2, %"$gasrem_62"
  br i1 %"$gascmp_63", label %"$out_of_gas_64", label %"$have_gas_65"

"$out_of_gas_64":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_65"

"$have_gas_65":                                   ; preds = %"$out_of_gas_64", %entry
  %"$consume_66" = sub i64 %"$gasrem_62", 2
  store i64 %"$consume_66", i64* @_gasrem, align 8
  %"$opt_val_tag_68" = getelementptr inbounds %TName_Option_Uint32, %TName_Option_Uint32* %1, i32 0, i32 0
  %"$opt_val_tag_69" = load i8, i8* %"$opt_val_tag_68", align 1
  switch i8 %"$opt_val_tag_69", label %"$empty_default_70" [
    i8 0, label %"$Some_71"
    i8 1, label %"$None_81"
  ], !dbg !14

"$Some_71":                                       ; preds = %"$have_gas_65"
  %"$opt_val_72" = bitcast %TName_Option_Uint32* %1 to %CName_Some_Uint32*
  %"$v_gep_73" = getelementptr inbounds %CName_Some_Uint32, %CName_Some_Uint32* %"$opt_val_72", i32 0, i32 1
  %"$v_load_74" = load %Uint32, %Uint32* %"$v_gep_73", align 4
  %v = alloca %Uint32, align 8
  store %Uint32 %"$v_load_74", %Uint32* %v, align 4
  %"$gasrem_75" = load i64, i64* @_gasrem, align 8
  %"$gascmp_76" = icmp ugt i64 1, %"$gasrem_75"
  br i1 %"$gascmp_76", label %"$out_of_gas_77", label %"$have_gas_78"

"$out_of_gas_77":                                 ; preds = %"$Some_71"
  call void @_out_of_gas()
  br label %"$have_gas_78"

"$have_gas_78":                                   ; preds = %"$out_of_gas_77", %"$Some_71"
  %"$consume_79" = sub i64 %"$gasrem_75", 1
  store i64 %"$consume_79", i64* @_gasrem, align 8
  %"$v_80" = load %Uint32, %Uint32* %v, align 4
  store %Uint32 %"$v_80", %Uint32* %"$retval_4", align 4, !dbg !15
  br label %"$matchsucc_67"

"$None_81":                                       ; preds = %"$have_gas_65"
  %"$opt_val_82" = bitcast %TName_Option_Uint32* %1 to %CName_None_Uint32*
  %"$gasrem_83" = load i64, i64* @_gasrem, align 8
  %"$gascmp_84" = icmp ugt i64 1, %"$gasrem_83"
  br i1 %"$gascmp_84", label %"$out_of_gas_85", label %"$have_gas_86"

"$out_of_gas_85":                                 ; preds = %"$None_81"
  call void @_out_of_gas()
  br label %"$have_gas_86"

"$have_gas_86":                                   ; preds = %"$out_of_gas_85", %"$None_81"
  %"$consume_87" = sub i64 %"$gasrem_83", 1
  store i64 %"$consume_87", i64* @_gasrem, align 8
  %"$default_88" = load %Uint32, %Uint32* %default, align 4
  store %Uint32 %"$default_88", %Uint32* %"$retval_4", align 4, !dbg !18
  br label %"$matchsucc_67"

"$empty_default_70":                              ; preds = %"$have_gas_65"
  br label %"$matchsucc_67"

"$matchsucc_67":                                  ; preds = %"$have_gas_86", %"$have_gas_78", %"$empty_default_70"
  %"$$retval_4_89" = load %Uint32, %Uint32* %"$retval_4", align 4
  ret %Uint32 %"$$retval_4_89"
}

; Function Attrs: nocallback nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #0

declare void @_out_of_gas()

define void @_init_libs() !dbg !20 {
entry:
  %"$gasrem_91" = load i64, i64* @_gasrem, align 8
  %"$gascmp_92" = icmp ugt i64 5, %"$gasrem_91"
  br i1 %"$gascmp_92", label %"$out_of_gas_93", label %"$have_gas_94"

"$out_of_gas_93":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_94"

"$have_gas_94":                                   ; preds = %"$out_of_gas_93", %entry
  %"$consume_95" = sub i64 %"$gasrem_91", 5
  store i64 %"$consume_95", i64* @_gasrem, align 8
  store %Int32 { i32 5 }, %Int32* @"$_gas_charge_acc_1", align 4, !dbg !22
  %"$gasrem_96" = load i64, i64* @_gasrem, align 8
  %"$gascmp_97" = icmp ugt i64 3, %"$gasrem_96"
  br i1 %"$gascmp_97", label %"$out_of_gas_98", label %"$have_gas_99"

"$out_of_gas_98":                                 ; preds = %"$have_gas_94"
  call void @_out_of_gas()
  br label %"$have_gas_99"

"$have_gas_99":                                   ; preds = %"$out_of_gas_98", %"$have_gas_94"
  %"$consume_100" = sub i64 %"$gasrem_96", 3
  store i64 %"$consume_100", i64* @_gasrem, align 8
  store %Int32 { i32 3 }, %Int32* @"$_gas_charge_accMmphTest_0", align 4, !dbg !22
  %"$gasrem_101" = load i64, i64* @_gasrem, align 8
  %"$gascmp_102" = icmp ugt i64 5, %"$gasrem_101"
  br i1 %"$gascmp_102", label %"$out_of_gas_103", label %"$have_gas_104"

"$out_of_gas_103":                                ; preds = %"$have_gas_99"
  call void @_out_of_gas()
  br label %"$have_gas_104"

"$have_gas_104":                                  ; preds = %"$out_of_gas_103", %"$have_gas_99"
  %"$consume_105" = sub i64 %"$gasrem_101", 5
  store i64 %"$consume_105", i64* @_gasrem, align 8
  %default = alloca %Uint32, align 8
  call void @llvm.dbg.declare(metadata %Uint32* %default, metadata !23, metadata !DIExpression()), !dbg !24
  store %Uint32 zeroinitializer, %Uint32* %default, align 4, !dbg !22
  %"$$fundef_3_envp_106_load" = load i8*, i8** @_execptr, align 8
  %"$$fundef_3_envp_106_salloc" = call i8* @_salloc(i8* %"$$fundef_3_envp_106_load", i64 4)
  %"$$fundef_3_envp_106" = bitcast i8* %"$$fundef_3_envp_106_salloc" to %"$$fundef_3_env_59"*
  %"$$fundef_3_env_voidp_108" = bitcast %"$$fundef_3_env_59"* %"$$fundef_3_envp_106" to i8*
  %"$$fundef_3_cloval_109" = insertvalue { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } { %Uint32 (i8*, %TName_Option_Uint32*)* bitcast (%Uint32 (%"$$fundef_3_env_59"*, %TName_Option_Uint32*)* @"$fundef_3" to %Uint32 (i8*, %TName_Option_Uint32*)*), i8* undef }, i8* %"$$fundef_3_env_voidp_108", 1
  %"$$fundef_3_env_default_110" = getelementptr inbounds %"$$fundef_3_env_59", %"$$fundef_3_env_59"* %"$$fundef_3_envp_106", i32 0, i32 0
  %"$default_111" = load %Uint32, %Uint32* %default, align 4
  store %Uint32 %"$default_111", %Uint32* %"$$fundef_3_env_default_110", align 4
  store { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } %"$$fundef_3_cloval_109", { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* }* @MmphTest.option_uint32_value, align 8, !dbg !25
  ret void
}

declare i8* @_salloc(i8*, i64)

define void @_deploy_ops() !dbg !26 {
entry:
  %"$gasrem_112" = load i64, i64* @_gasrem, align 8
  %"$gascmp_113" = icmp ugt i64 1, %"$gasrem_112"
  br i1 %"$gascmp_113", label %"$out_of_gas_114", label %"$have_gas_115"

"$out_of_gas_114":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_115"

"$have_gas_115":                                  ; preds = %"$out_of_gas_114", %entry
  %"$consume_116" = sub i64 %"$gasrem_112", 1
  store i64 %"$consume_116", i64* @_gasrem, align 8
  ret void
}

define internal void @"$foo_117"(%Uint128 %_amount, [20 x i8]* %"$_origin_118", [20 x i8]* %"$_sender_119", %TName_Option_Uint32* %uintopt) !dbg !27 {
entry:
  %"$uintopt_176" = alloca %TName_Option_Uint32*, align 8
  store %TName_Option_Uint32* %uintopt, %TName_Option_Uint32** %"$uintopt_176", align 8
  call void @llvm.dbg.declare(metadata %TName_Option_Uint32** %"$uintopt_176", metadata !28, metadata !DIExpression()), !dbg !29
  %"$_sender_175" = alloca [20 x i8]*, align 8
  store [20 x i8]* %"$_sender_119", [20 x i8]** %"$_sender_175", align 8
  call void @llvm.dbg.declare(metadata [20 x i8]** %"$_sender_175", metadata !30, metadata !DIExpression()), !dbg !32
  %"$_origin_174" = alloca [20 x i8]*, align 8
  store [20 x i8]* %"$_origin_118", [20 x i8]** %"$_origin_174", align 8
  call void @llvm.dbg.declare(metadata [20 x i8]** %"$_origin_174", metadata !33, metadata !DIExpression()), !dbg !32
  %"$_amount_173" = alloca %Uint128, align 8
  store %Uint128 %_amount, %Uint128* %"$_amount_173", align 8
  call void @llvm.dbg.declare(metadata %Uint128* %"$_amount_173", metadata !34, metadata !DIExpression()), !dbg !32
  %_origin = load [20 x i8], [20 x i8]* %"$_origin_118", align 1
  %_sender = load [20 x i8], [20 x i8]* %"$_sender_119", align 1
  %"$gasrem_120" = load i64, i64* @_gasrem, align 8
  %"$gascmp_121" = icmp ugt i64 1, %"$gasrem_120"
  br i1 %"$gascmp_121", label %"$out_of_gas_122", label %"$have_gas_123"

"$out_of_gas_122":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_123"

"$have_gas_123":                                  ; preds = %"$out_of_gas_122", %entry
  %"$consume_124" = sub i64 %"$gasrem_120", 1
  store i64 %"$consume_124", i64* @_gasrem, align 8
  %res = alloca %Uint32, align 8
  call void @llvm.dbg.declare(metadata %Uint32* %res, metadata !36, metadata !DIExpression()), !dbg !37
  %"$gasrem_125" = load i64, i64* @_gasrem, align 8
  %"$gascmp_126" = icmp ugt i64 1, %"$gasrem_125"
  br i1 %"$gascmp_126", label %"$out_of_gas_127", label %"$have_gas_128"

"$out_of_gas_127":                                ; preds = %"$have_gas_123"
  call void @_out_of_gas()
  br label %"$have_gas_128"

"$have_gas_128":                                  ; preds = %"$out_of_gas_127", %"$have_gas_123"
  %"$consume_129" = sub i64 %"$gasrem_125", 1
  store i64 %"$consume_129", i64* @_gasrem, align 8
  %"$MmphTest.option_uint32_value_2" = alloca %Uint32, align 8
  call void @llvm.dbg.declare(metadata %Uint32* %"$MmphTest.option_uint32_value_2", metadata !38, metadata !DIExpression()), !dbg !39
  %"$MmphTest.option_uint32_value_130" = load { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* }, { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* }* @MmphTest.option_uint32_value, align 8
  %"$MmphTest.option_uint32_value_fptr_131" = extractvalue { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } %"$MmphTest.option_uint32_value_130", 0
  %"$MmphTest.option_uint32_value_envptr_132" = extractvalue { %Uint32 (i8*, %TName_Option_Uint32*)*, i8* } %"$MmphTest.option_uint32_value_130", 1
  %"$MmphTest.option_uint32_value_call_133" = call %Uint32 %"$MmphTest.option_uint32_value_fptr_131"(i8* %"$MmphTest.option_uint32_value_envptr_132", %TName_Option_Uint32* %uintopt), !dbg !39
  store %Uint32 %"$MmphTest.option_uint32_value_call_133", %Uint32* %"$MmphTest.option_uint32_value_2", align 4, !dbg !39
  %"$$MmphTest.option_uint32_value_2_134" = load %Uint32, %Uint32* %"$MmphTest.option_uint32_value_2", align 4
  store %Uint32 %"$$MmphTest.option_uint32_value_2_134", %Uint32* %res, align 4, !dbg !39
  %"$gasrem_135" = load i64, i64* @_gasrem, align 8
  %"$gascmp_136" = icmp ugt i64 1, %"$gasrem_135"
  br i1 %"$gascmp_136", label %"$out_of_gas_137", label %"$have_gas_138"

"$out_of_gas_137":                                ; preds = %"$have_gas_128"
  call void @_out_of_gas()
  br label %"$have_gas_138"

"$have_gas_138":                                  ; preds = %"$out_of_gas_137", %"$have_gas_128"
  %"$consume_139" = sub i64 %"$gasrem_135", 1
  store i64 %"$consume_139", i64* @_gasrem, align 8
  %e = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %e, metadata !40, metadata !DIExpression()), !dbg !43
  %"$gasrem_140" = load i64, i64* @_gasrem, align 8
  %"$gascmp_141" = icmp ugt i64 1, %"$gasrem_140"
  br i1 %"$gascmp_141", label %"$out_of_gas_142", label %"$have_gas_143"

"$out_of_gas_142":                                ; preds = %"$have_gas_138"
  call void @_out_of_gas()
  br label %"$have_gas_143"

"$have_gas_143":                                  ; preds = %"$out_of_gas_142", %"$have_gas_138"
  %"$consume_144" = sub i64 %"$gasrem_140", 1
  store i64 %"$consume_144", i64* @_gasrem, align 8
  %"$msgobj_145_salloc_load" = load i8*, i8** @_execptr, align 8
  %"$msgobj_145_salloc_salloc" = call i8* @_salloc(i8* %"$msgobj_145_salloc_load", i64 69)
  %"$msgobj_145_salloc" = bitcast i8* %"$msgobj_145_salloc_salloc" to [69 x i8]*
  %"$msgobj_145" = bitcast [69 x i8]* %"$msgobj_145_salloc" to i8*
  store i8 2, i8* %"$msgobj_145", align 1
  %"$msgobj_fname_147" = getelementptr i8, i8* %"$msgobj_145", i32 1
  %"$msgobj_fname_148" = bitcast i8* %"$msgobj_fname_147" to %String*
  store %String { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @"$stringlit_146", i32 0, i32 0), i32 10 }, %String* %"$msgobj_fname_148", align 8
  %"$msgobj_td_149" = getelementptr i8, i8* %"$msgobj_145", i32 17
  %"$msgobj_td_150" = bitcast i8* %"$msgobj_td_149" to %_TyDescrTy_Typ**
  store %_TyDescrTy_Typ* @"$TyDescr_String_23", %_TyDescrTy_Typ** %"$msgobj_td_150", align 8
  %"$msgobj_v_152" = getelementptr i8, i8* %"$msgobj_145", i32 25
  %"$msgobj_v_153" = bitcast i8* %"$msgobj_v_152" to %String*
  store %String { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$stringlit_151", i32 0, i32 0), i32 3 }, %String* %"$msgobj_v_153", align 8
  %"$msgobj_fname_155" = getelementptr i8, i8* %"$msgobj_145", i32 41
  %"$msgobj_fname_156" = bitcast i8* %"$msgobj_fname_155" to %String*
  store %String { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$stringlit_154", i32 0, i32 0), i32 3 }, %String* %"$msgobj_fname_156", align 8
  %"$msgobj_td_157" = getelementptr i8, i8* %"$msgobj_145", i32 57
  %"$msgobj_td_158" = bitcast i8* %"$msgobj_td_157" to %_TyDescrTy_Typ**
  store %_TyDescrTy_Typ* @"$TyDescr_Uint32_9", %_TyDescrTy_Typ** %"$msgobj_td_158", align 8
  %"$res_159" = load %Uint32, %Uint32* %res, align 4
  %"$msgobj_v_160" = getelementptr i8, i8* %"$msgobj_145", i32 65
  %"$msgobj_v_161" = bitcast i8* %"$msgobj_v_160" to %Uint32*
  store %Uint32 %"$res_159", %Uint32* %"$msgobj_v_161", align 4
  store i8* %"$msgobj_145", i8** %e, align 8, !dbg !44
  %"$e_163" = load i8*, i8** %e, align 8
  %"$_literal_cost_call_165" = call i64 @_literal_cost(%_TyDescrTy_Typ* @"$TyDescr_Event_29", i8* %"$e_163")
  %"$gasrem_166" = load i64, i64* @_gasrem, align 8
  %"$gascmp_167" = icmp ugt i64 %"$_literal_cost_call_165", %"$gasrem_166"
  br i1 %"$gascmp_167", label %"$out_of_gas_168", label %"$have_gas_169"

"$out_of_gas_168":                                ; preds = %"$have_gas_143"
  call void @_out_of_gas()
  br label %"$have_gas_169"

"$have_gas_169":                                  ; preds = %"$out_of_gas_168", %"$have_gas_143"
  %"$consume_170" = sub i64 %"$gasrem_166", %"$_literal_cost_call_165"
  store i64 %"$consume_170", i64* @_gasrem, align 8
  %"$execptr_load_171" = load i8*, i8** @_execptr, align 8
  %"$e_172" = load i8*, i8** %e, align 8
  call void @_event(i8* %"$execptr_load_171", %_TyDescrTy_Typ* @"$TyDescr_Event_29", i8* %"$e_172"), !dbg !45
  ret void
}

declare i64 @_literal_cost(%_TyDescrTy_Typ*, i8*)

declare void @_event(i8*, %_TyDescrTy_Typ*, i8*)

define void @foo(i8* %0) !dbg !46 {
entry:
  %"$_amount_178" = getelementptr i8, i8* %0, i32 0
  %"$_amount_179" = bitcast i8* %"$_amount_178" to %Uint128*
  %_amount = load %Uint128, %Uint128* %"$_amount_179", align 8
  %"$_origin_180" = getelementptr i8, i8* %0, i32 16
  %"$_origin_181" = bitcast i8* %"$_origin_180" to [20 x i8]*
  %"$_sender_182" = getelementptr i8, i8* %0, i32 36
  %"$_sender_183" = bitcast i8* %"$_sender_182" to [20 x i8]*
  %"$uintopt_184" = getelementptr i8, i8* %0, i32 56
  %"$uintopt_185" = bitcast i8* %"$uintopt_184" to %TName_Option_Uint32**
  %uintopt = load %TName_Option_Uint32*, %TName_Option_Uint32** %"$uintopt_185", align 8
  call void @"$foo_117"(%Uint128 %_amount, [20 x i8]* %"$_origin_181", [20 x i8]* %"$_sender_183", %TName_Option_Uint32* %uintopt), !dbg !47
  ret void
}

attributes #0 = { nocallback nofree nosync nounwind readnone speculatable willreturn }

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C89, file: !2, producer: "Scilla Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false)
!2 = !DIFile(filename: "MmphTest.scilla", directory: "codegen/contr")
!3 = distinct !DISubprogram(name: "$fundef_3", linkageName: "$fundef_3", scope: !2, file: !2, line: 12, type: !4, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !7)
!4 = !DISubroutineType(types: !5)
!5 = !{!6}
!6 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "void")
!7 = !{}
!8 = !DILocalVariable(name: "opt_val", scope: !3, file: !2, line: 11, type: !9)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Option (Uint32)", baseType: !10, size: 8, align: 8, dwarfAddressSpace: 0)
!10 = !DIBasicType(name: "Option (Uint32)", size: 8)
!11 = !DILocation(line: 11, column: 8, scope: !3)
!12 = !DILocalVariable(name: "$retval_4", scope: !3, file: !2, line: 12, type: !13)
!13 = !DIBasicType(name: "Uint32", size: 4)
!14 = !DILocation(line: 12, column: 5, scope: !3)
!15 = !DILocation(line: 13, column: 17, scope: !16)
!16 = distinct !DILexicalBlock(scope: !17, file: !2, line: 13, column: 7)
!17 = distinct !DILexicalBlock(scope: !3, file: !2, line: 12, column: 5)
!18 = !DILocation(line: 14, column: 15, scope: !19)
!19 = distinct !DILexicalBlock(scope: !17, file: !2, line: 14, column: 7)
!20 = distinct !DISubprogram(name: "_init_libs", linkageName: "_init_libs", scope: !21, file: !21, type: !4, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !7)
!21 = !DIFile(filename: ".", directory: ".")
!22 = !DILocation(line: 0, scope: !20)
!23 = !DILocalVariable(name: "default", scope: !20, file: !2, line: 14, type: !13)
!24 = !DILocation(line: 14, column: 15, scope: !20)
!25 = !DILocation(line: 12, column: 5, scope: !20)
!26 = distinct !DISubprogram(name: "_deploy_ops", linkageName: "_deploy_ops", scope: !21, file: !21, type: !4, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !7)
!27 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !2, file: !2, line: 26, type: !4, scopeLine: 26, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !7)
!28 = !DILocalVariable(name: "uintopt", scope: !27, file: !2, line: 26, type: !9)
!29 = !DILocation(line: 26, column: 16, scope: !27)
!30 = !DILocalVariable(name: "_sender", scope: !27, file: !2, line: 26, type: !31)
!31 = !DIBasicType(name: "ByStr20 with end", size: 20)
!32 = !DILocation(line: 26, column: 12, scope: !27)
!33 = !DILocalVariable(name: "_origin", scope: !27, file: !2, line: 26, type: !31)
!34 = !DILocalVariable(name: "_amount", scope: !27, file: !2, line: 26, type: !35)
!35 = !DIBasicType(name: "Uint128", size: 16)
!36 = !DILocalVariable(name: "res", scope: !27, file: !2, line: 27, type: !13)
!37 = !DILocation(line: 27, column: 3, scope: !27)
!38 = !DILocalVariable(name: "$MmphTest.option_uint32_value_2", scope: !27, file: !2, line: 27, type: !13)
!39 = !DILocation(line: 27, column: 9, scope: !27)
!40 = !DILocalVariable(name: "e", scope: !27, file: !2, line: 28, type: !41)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "Event", baseType: !42, size: 8, align: 8, dwarfAddressSpace: 0)
!42 = !DIBasicType(name: "Event", size: 8)
!43 = !DILocation(line: 28, column: 3, scope: !27)
!44 = !DILocation(line: 28, column: 7, scope: !27)
!45 = !DILocation(line: 29, column: 3, scope: !27)
!46 = distinct !DISubprogram(name: "foo", linkageName: "foo", scope: !2, file: !2, line: 26, type: !4, scopeLine: 26, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !7)
!47 = !DILocation(line: 26, column: 12, scope: !46)
