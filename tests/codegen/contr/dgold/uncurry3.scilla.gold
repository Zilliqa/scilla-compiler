

; gas_remaining: 4002000
; ModuleID = 'SimpleUnuccury3'
source_filename = "SimpleUnuccury3"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-darwin19.6.0"

%"$TyDescrTy_PrimTyp_21" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescr_AddrTyp_57" = type { i32, %"$TyDescr_AddrFieldTyp_56"* }
%"$TyDescr_AddrFieldTyp_56" = type { %TyDescrString, %_TyDescrTy_Typ* }
%TyDescrString = type { i8*, i32 }
%Int32 = type { i32 }
%Uint32 = type { i32 }
%"$ParamDescr_401" = type { %ParamDescrString, %_TyDescrTy_Typ* }
%ParamDescrString = type { i8*, i32 }
%"$TransDescr_402" = type { %ParamDescrString, i32, %"$ParamDescr_401"* }
%"$$fundef_19_env_60" = type {}
%"$$fundef_8_env_61" = type {}
%"$$fundef_12_env_62" = type { %Int32 }
%"$$fundef_10_env_63" = type {}
%"$$fundef_16_env_64" = type { %Int32 }
%"$$fundef_14_env_65" = type {}
%Uint128 = type { i128 }
%TName_uncurry3.T = type { i8, %CName_uncurry3.C1*, %CName_uncurry3.C2* }
%CName_uncurry3.C1 = type <{ i8, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } }>
%CName_uncurry3.C2 = type <{ i8, %TName_Bool* }>
%TName_Bool = type { i8, %CName_True*, %CName_False* }
%CName_True = type <{ i8 }>
%CName_False = type <{ i8 }>

@_execptr = global i8* null
@_gasrem = global i64 0
@"$TyDescr_Int32_Prim_22" = global %"$TyDescrTy_PrimTyp_21" zeroinitializer
@"$TyDescr_Int32_23" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Int32_Prim_22" to i8*) }
@"$TyDescr_Uint32_Prim_24" = global %"$TyDescrTy_PrimTyp_21" { i32 1, i32 0 }
@"$TyDescr_Uint32_25" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Uint32_Prim_24" to i8*) }
@"$TyDescr_Int64_Prim_26" = global %"$TyDescrTy_PrimTyp_21" { i32 0, i32 1 }
@"$TyDescr_Int64_27" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Int64_Prim_26" to i8*) }
@"$TyDescr_Uint64_Prim_28" = global %"$TyDescrTy_PrimTyp_21" { i32 1, i32 1 }
@"$TyDescr_Uint64_29" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Uint64_Prim_28" to i8*) }
@"$TyDescr_Int128_Prim_30" = global %"$TyDescrTy_PrimTyp_21" { i32 0, i32 2 }
@"$TyDescr_Int128_31" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Int128_Prim_30" to i8*) }
@"$TyDescr_Uint128_Prim_32" = global %"$TyDescrTy_PrimTyp_21" { i32 1, i32 2 }
@"$TyDescr_Uint128_33" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Uint128_Prim_32" to i8*) }
@"$TyDescr_Int256_Prim_34" = global %"$TyDescrTy_PrimTyp_21" { i32 0, i32 3 }
@"$TyDescr_Int256_35" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Int256_Prim_34" to i8*) }
@"$TyDescr_Uint256_Prim_36" = global %"$TyDescrTy_PrimTyp_21" { i32 1, i32 3 }
@"$TyDescr_Uint256_37" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Uint256_Prim_36" to i8*) }
@"$TyDescr_String_Prim_38" = global %"$TyDescrTy_PrimTyp_21" { i32 2, i32 0 }
@"$TyDescr_String_39" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_String_Prim_38" to i8*) }
@"$TyDescr_Bnum_Prim_40" = global %"$TyDescrTy_PrimTyp_21" { i32 3, i32 0 }
@"$TyDescr_Bnum_41" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Bnum_Prim_40" to i8*) }
@"$TyDescr_Message_Prim_42" = global %"$TyDescrTy_PrimTyp_21" { i32 4, i32 0 }
@"$TyDescr_Message_43" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Message_Prim_42" to i8*) }
@"$TyDescr_Event_Prim_44" = global %"$TyDescrTy_PrimTyp_21" { i32 5, i32 0 }
@"$TyDescr_Event_45" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Event_Prim_44" to i8*) }
@"$TyDescr_Exception_Prim_46" = global %"$TyDescrTy_PrimTyp_21" { i32 6, i32 0 }
@"$TyDescr_Exception_47" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Exception_Prim_46" to i8*) }
@"$TyDescr_Bystr_Prim_48" = global %"$TyDescrTy_PrimTyp_21" { i32 7, i32 0 }
@"$TyDescr_Bystr_49" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Bystr_Prim_48" to i8*) }
@"$TyDescr_Bystr20_Prim_50" = global %"$TyDescrTy_PrimTyp_21" { i32 8, i32 20 }
@"$TyDescr_Bystr20_51" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_21"* @"$TyDescr_Bystr20_Prim_50" to i8*) }
@"$TyDescr_Addr_58" = unnamed_addr constant %_TyDescrTy_Typ { i32 3, i8* bitcast (%"$TyDescr_AddrTyp_57"* @"$TyDescr_AddrFields_59" to i8*) }
@"$TyDescr_AddrFields_59" = unnamed_addr constant %"$TyDescr_AddrTyp_57" { i32 -1, %"$TyDescr_AddrFieldTyp_56"* null }
@uncurry3.uncur_lib_func1 = global { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } zeroinitializer
@uncurry3.uncur_lib_func2 = global { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } zeroinitializer
@uncurry3.uncur_lib_func3 = global { %Int32 (i8*, %Int32, %Int32)*, i8* } zeroinitializer
@_cparam__scilla_version = global %Uint32 zeroinitializer
@_cparam__this_address = global [20 x i8] zeroinitializer
@_cparam__creation_block = global i8* null
@"$res_186" = unnamed_addr constant [4 x i8] c"res\00"
@"$res_271" = unnamed_addr constant [4 x i8] c"res\00"
@"$res_344" = unnamed_addr constant [4 x i8] c"res\00"
@"$res_386" = unnamed_addr constant [4 x i8] c"res\00"
@_tydescr_table = constant [16 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Event_45", %_TyDescrTy_Typ* @"$TyDescr_Int64_27", %_TyDescrTy_Typ* @"$TyDescr_Addr_58", %_TyDescrTy_Typ* @"$TyDescr_Bystr20_51", %_TyDescrTy_Typ* @"$TyDescr_Uint256_37", %_TyDescrTy_Typ* @"$TyDescr_Uint32_25", %_TyDescrTy_Typ* @"$TyDescr_Uint64_29", %_TyDescrTy_Typ* @"$TyDescr_Bnum_41", %_TyDescrTy_Typ* @"$TyDescr_Uint128_33", %_TyDescrTy_Typ* @"$TyDescr_Exception_47", %_TyDescrTy_Typ* @"$TyDescr_String_39", %_TyDescrTy_Typ* @"$TyDescr_Int256_35", %_TyDescrTy_Typ* @"$TyDescr_Int128_31", %_TyDescrTy_Typ* @"$TyDescr_Bystr_49", %_TyDescrTy_Typ* @"$TyDescr_Message_43", %_TyDescrTy_Typ* @"$TyDescr_Int32_23"]
@_tydescr_table_length = constant i32 16
@"$pname__scilla_version_403" = unnamed_addr constant [15 x i8] c"_scilla_version"
@"$pname__this_address_404" = unnamed_addr constant [13 x i8] c"_this_address"
@"$pname__creation_block_405" = unnamed_addr constant [15 x i8] c"_creation_block"
@_contract_parameters = constant [3 x %"$ParamDescr_401"] [%"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__scilla_version_403", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Uint32_25" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"$pname__this_address_404", i32 0, i32 0), i32 13 }, %_TyDescrTy_Typ* @"$TyDescr_Bystr20_51" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__creation_block_405", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Bnum_41" }]
@_contract_parameters_length = constant i32 3
@"$tpname__amount_406" = unnamed_addr constant [7 x i8] c"_amount"
@"$tpname__origin_407" = unnamed_addr constant [7 x i8] c"_origin"
@"$tpname__sender_408" = unnamed_addr constant [7 x i8] c"_sender"
@"$tpname_x1_409" = unnamed_addr constant [2 x i8] c"x1"
@"$tpname_x2_410" = unnamed_addr constant [2 x i8] c"x2"
@"$tparams_dummy1_411" = unnamed_addr constant [5 x %"$ParamDescr_401"] [%"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__amount_406", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Uint128_33" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__origin_407", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_58" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__sender_408", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_58" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x1_409", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_23" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x2_410", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_23" }]
@"$tname_dummy1_412" = unnamed_addr constant [6 x i8] c"dummy1"
@"$tpname__amount_413" = unnamed_addr constant [7 x i8] c"_amount"
@"$tpname__origin_414" = unnamed_addr constant [7 x i8] c"_origin"
@"$tpname__sender_415" = unnamed_addr constant [7 x i8] c"_sender"
@"$tpname_x1_416" = unnamed_addr constant [2 x i8] c"x1"
@"$tpname_x2_417" = unnamed_addr constant [2 x i8] c"x2"
@"$tparams_dummy2_418" = unnamed_addr constant [5 x %"$ParamDescr_401"] [%"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__amount_413", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Uint128_33" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__origin_414", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_58" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__sender_415", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_58" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x1_416", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_23" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x2_417", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_23" }]
@"$tname_dummy2_419" = unnamed_addr constant [6 x i8] c"dummy2"
@"$tpname__amount_420" = unnamed_addr constant [7 x i8] c"_amount"
@"$tpname__origin_421" = unnamed_addr constant [7 x i8] c"_origin"
@"$tpname__sender_422" = unnamed_addr constant [7 x i8] c"_sender"
@"$tpname_x1_423" = unnamed_addr constant [2 x i8] c"x1"
@"$tpname_x2_424" = unnamed_addr constant [2 x i8] c"x2"
@"$tparams_dummy3_425" = unnamed_addr constant [5 x %"$ParamDescr_401"] [%"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__amount_420", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Uint128_33" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__origin_421", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_58" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__sender_422", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_58" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x1_423", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_23" }, %"$ParamDescr_401" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x2_424", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_23" }]
@"$tname_dummy3_426" = unnamed_addr constant [6 x i8] c"dummy3"
@_transition_parameters = constant [3 x %"$TransDescr_402"] [%"$TransDescr_402" { %ParamDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$tname_dummy1_412", i32 0, i32 0), i32 6 }, i32 5, %"$ParamDescr_401"* getelementptr inbounds ([5 x %"$ParamDescr_401"], [5 x %"$ParamDescr_401"]* @"$tparams_dummy1_411", i32 0, i32 0) }, %"$TransDescr_402" { %ParamDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$tname_dummy2_419", i32 0, i32 0), i32 6 }, i32 5, %"$ParamDescr_401"* getelementptr inbounds ([5 x %"$ParamDescr_401"], [5 x %"$ParamDescr_401"]* @"$tparams_dummy2_418", i32 0, i32 0) }, %"$TransDescr_402" { %ParamDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$tname_dummy3_426", i32 0, i32 0), i32 6 }, i32 5, %"$ParamDescr_401"* getelementptr inbounds ([5 x %"$ParamDescr_401"], [5 x %"$ParamDescr_401"]* @"$tparams_dummy3_425", i32 0, i32 0) }]
@_transition_parameters_length = constant i32 3

define internal %Int32 @"$fundef_19"(%"$$fundef_19_env_60"* %0, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %1) !dbg !4 {
entry:
  %"$retval_20" = alloca %Int32, align 8
  %"$gasrem_125" = load i64, i64* @_gasrem, align 8
  %"$gascmp_126" = icmp ugt i64 1, %"$gasrem_125"
  br i1 %"$gascmp_126", label %"$out_of_gas_127", label %"$have_gas_128"

"$out_of_gas_127":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_128"

"$have_gas_128":                                  ; preds = %"$out_of_gas_127", %entry
  %"$consume_129" = sub i64 %"$gasrem_125", 1
  store i64 %"$consume_129", i64* @_gasrem, align 8
  %n1 = alloca %Int32, align 8
  %"$gasrem_130" = load i64, i64* @_gasrem, align 8
  %"$gascmp_131" = icmp ugt i64 1, %"$gasrem_130"
  br i1 %"$gascmp_131", label %"$out_of_gas_132", label %"$have_gas_133"

"$out_of_gas_132":                                ; preds = %"$have_gas_128"
  call void @_out_of_gas()
  br label %"$have_gas_133"

"$have_gas_133":                                  ; preds = %"$out_of_gas_132", %"$have_gas_128"
  %"$consume_134" = sub i64 %"$gasrem_130", 1
  store i64 %"$consume_134", i64* @_gasrem, align 8
  store %Int32 { i32 1 }, %Int32* %n1, align 4, !dbg !8
  %"$gasrem_135" = load i64, i64* @_gasrem, align 8
  %"$gascmp_136" = icmp ugt i64 1, %"$gasrem_135"
  br i1 %"$gascmp_136", label %"$out_of_gas_137", label %"$have_gas_138"

"$out_of_gas_137":                                ; preds = %"$have_gas_133"
  call void @_out_of_gas()
  br label %"$have_gas_138"

"$have_gas_138":                                  ; preds = %"$out_of_gas_137", %"$have_gas_133"
  %"$consume_139" = sub i64 %"$gasrem_135", 1
  store i64 %"$consume_139", i64* @_gasrem, align 8
  %n2 = alloca %Int32, align 8
  %"$gasrem_140" = load i64, i64* @_gasrem, align 8
  %"$gascmp_141" = icmp ugt i64 1, %"$gasrem_140"
  br i1 %"$gascmp_141", label %"$out_of_gas_142", label %"$have_gas_143"

"$out_of_gas_142":                                ; preds = %"$have_gas_138"
  call void @_out_of_gas()
  br label %"$have_gas_143"

"$have_gas_143":                                  ; preds = %"$out_of_gas_142", %"$have_gas_138"
  %"$consume_144" = sub i64 %"$gasrem_140", 1
  store i64 %"$consume_144", i64* @_gasrem, align 8
  store %Int32 { i32 2 }, %Int32* %n2, align 4, !dbg !9
  %"$gasrem_145" = load i64, i64* @_gasrem, align 8
  %"$gascmp_146" = icmp ugt i64 1, %"$gasrem_145"
  br i1 %"$gascmp_146", label %"$out_of_gas_147", label %"$have_gas_148"

"$out_of_gas_147":                                ; preds = %"$have_gas_143"
  call void @_out_of_gas()
  br label %"$have_gas_148"

"$have_gas_148":                                  ; preds = %"$out_of_gas_147", %"$have_gas_143"
  %"$consume_149" = sub i64 %"$gasrem_145", 1
  store i64 %"$consume_149", i64* @_gasrem, align 8
  %"$f__5" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$f__fptr_150" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %1, 0
  %"$f__envptr_151" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %1, 1
  %"$n1_152" = load %Int32, %Int32* %n1, align 4
  %"$f__call_153" = call { %Int32 (i8*, %Int32)*, i8* } %"$f__fptr_150"(i8* %"$f__envptr_151", %Int32 %"$n1_152"), !dbg !10
  store { %Int32 (i8*, %Int32)*, i8* } %"$f__call_153", { %Int32 (i8*, %Int32)*, i8* }* %"$f__5", align 8, !dbg !10
  %"$f__6" = alloca %Int32, align 8
  %"$$f__5_154" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$f__5", align 8
  %"$$f__5_fptr_155" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$$f__5_154", 0
  %"$$f__5_envptr_156" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$$f__5_154", 1
  %"$n2_157" = load %Int32, %Int32* %n2, align 4
  %"$$f__5_call_158" = call %Int32 %"$$f__5_fptr_155"(i8* %"$$f__5_envptr_156", %Int32 %"$n2_157"), !dbg !10
  store %Int32 %"$$f__5_call_158", %Int32* %"$f__6", align 4, !dbg !10
  %"$$f__6_159" = load %Int32, %Int32* %"$f__6", align 4
  store %Int32 %"$$f__6_159", %Int32* %"$retval_20", align 4, !dbg !10
  %"$$retval_20_160" = load %Int32, %Int32* %"$retval_20", align 4
  ret %Int32 %"$$retval_20_160"
}

define internal %Int32 @"$fundef_8"(%"$$fundef_8_env_61"* %0, %Int32 %1, %Int32 %2) !dbg !11 {
entry:
  %"$retval_9" = alloca %Int32, align 8
  %"$gasrem_108" = load i64, i64* @_gasrem, align 8
  %"$gascmp_109" = icmp ugt i64 1, %"$gasrem_108"
  br i1 %"$gascmp_109", label %"$out_of_gas_110", label %"$have_gas_111"

"$out_of_gas_110":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_111"

"$have_gas_111":                                  ; preds = %"$out_of_gas_110", %entry
  %"$consume_112" = sub i64 %"$gasrem_108", 1
  store i64 %"$consume_112", i64* @_gasrem, align 8
  %"$gasrem_113" = load i64, i64* @_gasrem, align 8
  %"$gascmp_114" = icmp ugt i64 1, %"$gasrem_113"
  br i1 %"$gascmp_114", label %"$out_of_gas_115", label %"$have_gas_116"

"$out_of_gas_115":                                ; preds = %"$have_gas_111"
  call void @_out_of_gas()
  br label %"$have_gas_116"

"$have_gas_116":                                  ; preds = %"$out_of_gas_115", %"$have_gas_111"
  %"$consume_117" = sub i64 %"$gasrem_113", 1
  store i64 %"$consume_117", i64* @_gasrem, align 8
  %"$gasrem_118" = load i64, i64* @_gasrem, align 8
  %"$gascmp_119" = icmp ugt i64 4, %"$gasrem_118"
  br i1 %"$gascmp_119", label %"$out_of_gas_120", label %"$have_gas_121"

"$out_of_gas_120":                                ; preds = %"$have_gas_116"
  call void @_out_of_gas()
  br label %"$have_gas_121"

"$have_gas_121":                                  ; preds = %"$out_of_gas_120", %"$have_gas_116"
  %"$consume_122" = sub i64 %"$gasrem_118", 4
  store i64 %"$consume_122", i64* @_gasrem, align 8
  %"$add_call_123" = call %Int32 @_add_Int32(%Int32 %1, %Int32 %2), !dbg !12
  store %Int32 %"$add_call_123", %Int32* %"$retval_9", align 4, !dbg !12
  %"$$retval_9_124" = load %Int32, %Int32* %"$retval_9", align 4
  ret %Int32 %"$$retval_9_124"
}

define internal %Int32 @"$fundef_12"(%"$$fundef_12_env_62"* %0, %Int32 %1) !dbg !13 {
entry:
  %"$$fundef_12_env_a_98" = getelementptr inbounds %"$$fundef_12_env_62", %"$$fundef_12_env_62"* %0, i32 0, i32 0
  %"$a_envload_99" = load %Int32, %Int32* %"$$fundef_12_env_a_98", align 4
  %a = alloca %Int32, align 8
  store %Int32 %"$a_envload_99", %Int32* %a, align 4
  %"$retval_13" = alloca %Int32, align 8
  %"$gasrem_100" = load i64, i64* @_gasrem, align 8
  %"$gascmp_101" = icmp ugt i64 4, %"$gasrem_100"
  br i1 %"$gascmp_101", label %"$out_of_gas_102", label %"$have_gas_103"

"$out_of_gas_102":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_103"

"$have_gas_103":                                  ; preds = %"$out_of_gas_102", %entry
  %"$consume_104" = sub i64 %"$gasrem_100", 4
  store i64 %"$consume_104", i64* @_gasrem, align 8
  %"$a_105" = load %Int32, %Int32* %a, align 4
  %"$add_call_106" = call %Int32 @_add_Int32(%Int32 %"$a_105", %Int32 %1), !dbg !14
  store %Int32 %"$add_call_106", %Int32* %"$retval_13", align 4, !dbg !14
  %"$$retval_13_107" = load %Int32, %Int32* %"$retval_13", align 4
  ret %Int32 %"$$retval_13_107"
}

define internal { %Int32 (i8*, %Int32)*, i8* } @"$fundef_10"(%"$$fundef_10_env_63"* %0, %Int32 %1) !dbg !15 {
entry:
  %"$retval_11" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$gasrem_87" = load i64, i64* @_gasrem, align 8
  %"$gascmp_88" = icmp ugt i64 1, %"$gasrem_87"
  br i1 %"$gascmp_88", label %"$out_of_gas_89", label %"$have_gas_90"

"$out_of_gas_89":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_90"

"$have_gas_90":                                   ; preds = %"$out_of_gas_89", %entry
  %"$consume_91" = sub i64 %"$gasrem_87", 1
  store i64 %"$consume_91", i64* @_gasrem, align 8
  %"$$fundef_12_envp_92_load" = load i8*, i8** @_execptr, align 8
  %"$$fundef_12_envp_92_salloc" = call i8* @_salloc(i8* %"$$fundef_12_envp_92_load", i64 4)
  %"$$fundef_12_envp_92" = bitcast i8* %"$$fundef_12_envp_92_salloc" to %"$$fundef_12_env_62"*
  %"$$fundef_12_env_voidp_94" = bitcast %"$$fundef_12_env_62"* %"$$fundef_12_envp_92" to i8*
  %"$$fundef_12_cloval_95" = insertvalue { %Int32 (i8*, %Int32)*, i8* } { %Int32 (i8*, %Int32)* bitcast (%Int32 (%"$$fundef_12_env_62"*, %Int32)* @"$fundef_12" to %Int32 (i8*, %Int32)*), i8* undef }, i8* %"$$fundef_12_env_voidp_94", 1
  %"$$fundef_12_env_a_96" = getelementptr inbounds %"$$fundef_12_env_62", %"$$fundef_12_env_62"* %"$$fundef_12_envp_92", i32 0, i32 0
  store %Int32 %1, %Int32* %"$$fundef_12_env_a_96", align 4
  store { %Int32 (i8*, %Int32)*, i8* } %"$$fundef_12_cloval_95", { %Int32 (i8*, %Int32)*, i8* }* %"$retval_11", align 8, !dbg !16
  %"$$retval_11_97" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$retval_11", align 8
  ret { %Int32 (i8*, %Int32)*, i8* } %"$$retval_11_97"
}

define internal %Int32 @"$fundef_16"(%"$$fundef_16_env_64"* %0, %Int32 %1) !dbg !17 {
entry:
  %"$$fundef_16_env_a_77" = getelementptr inbounds %"$$fundef_16_env_64", %"$$fundef_16_env_64"* %0, i32 0, i32 0
  %"$a_envload_78" = load %Int32, %Int32* %"$$fundef_16_env_a_77", align 4
  %a = alloca %Int32, align 8
  store %Int32 %"$a_envload_78", %Int32* %a, align 4
  %"$retval_17" = alloca %Int32, align 8
  %"$gasrem_79" = load i64, i64* @_gasrem, align 8
  %"$gascmp_80" = icmp ugt i64 4, %"$gasrem_79"
  br i1 %"$gascmp_80", label %"$out_of_gas_81", label %"$have_gas_82"

"$out_of_gas_81":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_82"

"$have_gas_82":                                   ; preds = %"$out_of_gas_81", %entry
  %"$consume_83" = sub i64 %"$gasrem_79", 4
  store i64 %"$consume_83", i64* @_gasrem, align 8
  %"$a_84" = load %Int32, %Int32* %a, align 4
  %"$add_call_85" = call %Int32 @_add_Int32(%Int32 %"$a_84", %Int32 %1), !dbg !18
  store %Int32 %"$add_call_85", %Int32* %"$retval_17", align 4, !dbg !18
  %"$$retval_17_86" = load %Int32, %Int32* %"$retval_17", align 4
  ret %Int32 %"$$retval_17_86"
}

define internal { %Int32 (i8*, %Int32)*, i8* } @"$fundef_14"(%"$$fundef_14_env_65"* %0, %Int32 %1) !dbg !19 {
entry:
  %"$retval_15" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$gasrem_66" = load i64, i64* @_gasrem, align 8
  %"$gascmp_67" = icmp ugt i64 1, %"$gasrem_66"
  br i1 %"$gascmp_67", label %"$out_of_gas_68", label %"$have_gas_69"

"$out_of_gas_68":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_69"

"$have_gas_69":                                   ; preds = %"$out_of_gas_68", %entry
  %"$consume_70" = sub i64 %"$gasrem_66", 1
  store i64 %"$consume_70", i64* @_gasrem, align 8
  %"$$fundef_16_envp_71_load" = load i8*, i8** @_execptr, align 8
  %"$$fundef_16_envp_71_salloc" = call i8* @_salloc(i8* %"$$fundef_16_envp_71_load", i64 4)
  %"$$fundef_16_envp_71" = bitcast i8* %"$$fundef_16_envp_71_salloc" to %"$$fundef_16_env_64"*
  %"$$fundef_16_env_voidp_73" = bitcast %"$$fundef_16_env_64"* %"$$fundef_16_envp_71" to i8*
  %"$$fundef_16_cloval_74" = insertvalue { %Int32 (i8*, %Int32)*, i8* } { %Int32 (i8*, %Int32)* bitcast (%Int32 (%"$$fundef_16_env_64"*, %Int32)* @"$fundef_16" to %Int32 (i8*, %Int32)*), i8* undef }, i8* %"$$fundef_16_env_voidp_73", 1
  %"$$fundef_16_env_a_75" = getelementptr inbounds %"$$fundef_16_env_64", %"$$fundef_16_env_64"* %"$$fundef_16_envp_71", i32 0, i32 0
  store %Int32 %1, %Int32* %"$$fundef_16_env_a_75", align 4
  store { %Int32 (i8*, %Int32)*, i8* } %"$$fundef_16_cloval_74", { %Int32 (i8*, %Int32)*, i8* }* %"$retval_15", align 8, !dbg !20
  %"$$retval_15_76" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$retval_15", align 8
  ret { %Int32 (i8*, %Int32)*, i8* } %"$$retval_15_76"
}

declare void @_out_of_gas()

declare i8* @_salloc(i8*, i64)

declare %Int32 @_add_Int32(%Int32, %Int32)

define void @_init_libs() !dbg !21 {
entry:
  %"$gasrem_161" = load i64, i64* @_gasrem, align 8
  %"$gascmp_162" = icmp ugt i64 1, %"$gasrem_161"
  br i1 %"$gascmp_162", label %"$out_of_gas_163", label %"$have_gas_164"

"$out_of_gas_163":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_164"

"$have_gas_164":                                  ; preds = %"$out_of_gas_163", %entry
  %"$consume_165" = sub i64 %"$gasrem_161", 1
  store i64 %"$consume_165", i64* @_gasrem, align 8
  store { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)* bitcast ({ %Int32 (i8*, %Int32)*, i8* } (%"$$fundef_14_env_65"*, %Int32)* @"$fundef_14" to { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*), i8* null }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry3.uncur_lib_func1, align 8, !dbg !23
  %"$gasrem_169" = load i64, i64* @_gasrem, align 8
  %"$gascmp_170" = icmp ugt i64 1, %"$gasrem_169"
  br i1 %"$gascmp_170", label %"$out_of_gas_171", label %"$have_gas_172"

"$out_of_gas_171":                                ; preds = %"$have_gas_164"
  call void @_out_of_gas()
  br label %"$have_gas_172"

"$have_gas_172":                                  ; preds = %"$out_of_gas_171", %"$have_gas_164"
  %"$consume_173" = sub i64 %"$gasrem_169", 1
  store i64 %"$consume_173", i64* @_gasrem, align 8
  store { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)* bitcast ({ %Int32 (i8*, %Int32)*, i8* } (%"$$fundef_10_env_63"*, %Int32)* @"$fundef_10" to { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*), i8* null }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry3.uncur_lib_func2, align 8, !dbg !24
  store { %Int32 (i8*, %Int32, %Int32)*, i8* } { %Int32 (i8*, %Int32, %Int32)* bitcast (%Int32 (%"$$fundef_8_env_61"*, %Int32, %Int32)* @"$fundef_8" to %Int32 (i8*, %Int32, %Int32)*), i8* null }, { %Int32 (i8*, %Int32, %Int32)*, i8* }* @uncurry3.uncur_lib_func3, align 8, !dbg !25
  ret void
}

define void @_init_state() !dbg !26 {
entry:
  %"$res_18" = alloca %Int32, align 8
  %"$gasrem_180" = load i64, i64* @_gasrem, align 8
  %"$gascmp_181" = icmp ugt i64 1, %"$gasrem_180"
  br i1 %"$gascmp_181", label %"$out_of_gas_182", label %"$have_gas_183"

"$out_of_gas_182":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_183"

"$have_gas_183":                                  ; preds = %"$out_of_gas_182", %entry
  %"$consume_184" = sub i64 %"$gasrem_180", 1
  store i64 %"$consume_184", i64* @_gasrem, align 8
  store %Int32 zeroinitializer, %Int32* %"$res_18", align 4, !dbg !27
  %"$execptr_load_185" = load i8*, i8** @_execptr, align 8
  %"$$res_18_187" = load %Int32, %Int32* %"$res_18", align 4
  %"$update_value_188" = alloca %Int32, align 8
  store %Int32 %"$$res_18_187", %Int32* %"$update_value_188", align 4
  %"$update_value_189" = bitcast %Int32* %"$update_value_188" to i8*
  call void @_update_field(i8* %"$execptr_load_185", i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$res_186", i32 0, i32 0), %_TyDescrTy_Typ* @"$TyDescr_Int32_23", i32 0, i8* null, i8* %"$update_value_189"), !dbg !27
  ret void
}

declare void @_update_field(i8*, i8*, %_TyDescrTy_Typ*, i32, i8*, i8*)

define internal void @"$dummy1_190"(%Uint128 %_amount, [20 x i8]* %"$_origin_191", [20 x i8]* %"$_sender_192", %Int32 %x1, %Int32 %x2) !dbg !28 {
entry:
  %_origin = load [20 x i8], [20 x i8]* %"$_origin_191", align 1
  %_sender = load [20 x i8], [20 x i8]* %"$_sender_192", align 1
  %"$gasrem_193" = load i64, i64* @_gasrem, align 8
  %"$gascmp_194" = icmp ugt i64 1, %"$gasrem_193"
  br i1 %"$gascmp_194", label %"$out_of_gas_195", label %"$have_gas_196"

"$out_of_gas_195":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_196"

"$have_gas_196":                                  ; preds = %"$out_of_gas_195", %entry
  %"$consume_197" = sub i64 %"$gasrem_193", 1
  store i64 %"$consume_197", i64* @_gasrem, align 8
  %total_app = alloca %Int32, align 8
  %"$gasrem_198" = load i64, i64* @_gasrem, align 8
  %"$gascmp_199" = icmp ugt i64 1, %"$gasrem_198"
  br i1 %"$gascmp_199", label %"$out_of_gas_200", label %"$have_gas_201"

"$out_of_gas_200":                                ; preds = %"$have_gas_196"
  call void @_out_of_gas()
  br label %"$have_gas_201"

"$have_gas_201":                                  ; preds = %"$out_of_gas_200", %"$have_gas_196"
  %"$consume_202" = sub i64 %"$gasrem_198", 1
  store i64 %"$consume_202", i64* @_gasrem, align 8
  %"$uncurry3.uncur_lib_func1_1" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$uncurry3.uncur_lib_func1_203" = load { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry3.uncur_lib_func1, align 8
  %"$uncurry3.uncur_lib_func1_fptr_204" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$uncurry3.uncur_lib_func1_203", 0
  %"$uncurry3.uncur_lib_func1_envptr_205" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$uncurry3.uncur_lib_func1_203", 1
  %"$uncurry3.uncur_lib_func1_call_206" = call { %Int32 (i8*, %Int32)*, i8* } %"$uncurry3.uncur_lib_func1_fptr_204"(i8* %"$uncurry3.uncur_lib_func1_envptr_205", %Int32 %x1), !dbg !29
  store { %Int32 (i8*, %Int32)*, i8* } %"$uncurry3.uncur_lib_func1_call_206", { %Int32 (i8*, %Int32)*, i8* }* %"$uncurry3.uncur_lib_func1_1", align 8, !dbg !29
  %"$uncurry3.uncur_lib_func1_2" = alloca %Int32, align 8
  %"$$uncurry3.uncur_lib_func1_1_207" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$uncurry3.uncur_lib_func1_1", align 8
  %"$$uncurry3.uncur_lib_func1_1_fptr_208" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$$uncurry3.uncur_lib_func1_1_207", 0
  %"$$uncurry3.uncur_lib_func1_1_envptr_209" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$$uncurry3.uncur_lib_func1_1_207", 1
  %"$$uncurry3.uncur_lib_func1_1_call_210" = call %Int32 %"$$uncurry3.uncur_lib_func1_1_fptr_208"(i8* %"$$uncurry3.uncur_lib_func1_1_envptr_209", %Int32 %x2), !dbg !29
  store %Int32 %"$$uncurry3.uncur_lib_func1_1_call_210", %Int32* %"$uncurry3.uncur_lib_func1_2", align 4, !dbg !29
  %"$$uncurry3.uncur_lib_func1_2_211" = load %Int32, %Int32* %"$uncurry3.uncur_lib_func1_2", align 4
  store %Int32 %"$$uncurry3.uncur_lib_func1_2_211", %Int32* %total_app, align 4, !dbg !29
  %"$gasrem_212" = load i64, i64* @_gasrem, align 8
  %"$gascmp_213" = icmp ugt i64 1, %"$gasrem_212"
  br i1 %"$gascmp_213", label %"$out_of_gas_214", label %"$have_gas_215"

"$out_of_gas_214":                                ; preds = %"$have_gas_201"
  call void @_out_of_gas()
  br label %"$have_gas_215"

"$have_gas_215":                                  ; preds = %"$out_of_gas_214", %"$have_gas_201"
  %"$consume_216" = sub i64 %"$gasrem_212", 1
  store i64 %"$consume_216", i64* @_gasrem, align 8
  %x = alloca %TName_uncurry3.T*, align 8
  %"$gasrem_217" = load i64, i64* @_gasrem, align 8
  %"$gascmp_218" = icmp ugt i64 1, %"$gasrem_217"
  br i1 %"$gascmp_218", label %"$out_of_gas_219", label %"$have_gas_220"

"$out_of_gas_219":                                ; preds = %"$have_gas_215"
  call void @_out_of_gas()
  br label %"$have_gas_220"

"$have_gas_220":                                  ; preds = %"$out_of_gas_219", %"$have_gas_215"
  %"$consume_221" = sub i64 %"$gasrem_217", 1
  store i64 %"$consume_221", i64* @_gasrem, align 8
  %"$uncurry3.uncur_lib_func1_222" = load { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry3.uncur_lib_func1, align 8
  %"$adtval_223_load" = load i8*, i8** @_execptr, align 8
  %"$adtval_223_salloc" = call i8* @_salloc(i8* %"$adtval_223_load", i64 17)
  %"$adtval_223" = bitcast i8* %"$adtval_223_salloc" to %CName_uncurry3.C1*
  %"$adtgep_224" = getelementptr inbounds %CName_uncurry3.C1, %CName_uncurry3.C1* %"$adtval_223", i32 0, i32 0
  store i8 0, i8* %"$adtgep_224", align 1
  %"$adtgep_225" = getelementptr inbounds %CName_uncurry3.C1, %CName_uncurry3.C1* %"$adtval_223", i32 0, i32 1
  store { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$uncurry3.uncur_lib_func1_222", { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* %"$adtgep_225", align 8
  %"$adtptr_226" = bitcast %CName_uncurry3.C1* %"$adtval_223" to %TName_uncurry3.T*
  store %TName_uncurry3.T* %"$adtptr_226", %TName_uncurry3.T** %x, align 8, !dbg !30
  %"$gasrem_227" = load i64, i64* @_gasrem, align 8
  %"$gascmp_228" = icmp ugt i64 2, %"$gasrem_227"
  br i1 %"$gascmp_228", label %"$out_of_gas_229", label %"$have_gas_230"

"$out_of_gas_229":                                ; preds = %"$have_gas_220"
  call void @_out_of_gas()
  br label %"$have_gas_230"

"$have_gas_230":                                  ; preds = %"$out_of_gas_229", %"$have_gas_220"
  %"$consume_231" = sub i64 %"$gasrem_227", 2
  store i64 %"$consume_231", i64* @_gasrem, align 8
  %"$x_233" = load %TName_uncurry3.T*, %TName_uncurry3.T** %x, align 8
  %"$x_tag_234" = getelementptr inbounds %TName_uncurry3.T, %TName_uncurry3.T* %"$x_233", i32 0, i32 0
  %"$x_tag_235" = load i8, i8* %"$x_tag_234", align 1
  switch i8 %"$x_tag_235", label %"$default_236" [
    i8 0, label %"$uncurry3.C1_237"
  ], !dbg !31

"$uncurry3.C1_237":                               ; preds = %"$have_gas_230"
  %"$x_238" = bitcast %TName_uncurry3.T* %"$x_233" to %CName_uncurry3.C1*
  %"$v_gep_239" = getelementptr inbounds %CName_uncurry3.C1, %CName_uncurry3.C1* %"$x_238", i32 0, i32 1
  %"$v_load_240" = load { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* %"$v_gep_239", align 8
  %v = alloca { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, align 8
  store { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$v_load_240", { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* %v, align 8
  %"$gasrem_241" = load i64, i64* @_gasrem, align 8
  %"$gascmp_242" = icmp ugt i64 1, %"$gasrem_241"
  br i1 %"$gascmp_242", label %"$out_of_gas_243", label %"$have_gas_244"

"$out_of_gas_243":                                ; preds = %"$uncurry3.C1_237"
  call void @_out_of_gas()
  br label %"$have_gas_244"

"$have_gas_244":                                  ; preds = %"$out_of_gas_243", %"$uncurry3.C1_237"
  %"$consume_245" = sub i64 %"$gasrem_241", 1
  store i64 %"$consume_245", i64* @_gasrem, align 8
  %x_ = alloca %Int32, align 8
  %"$gasrem_246" = load i64, i64* @_gasrem, align 8
  %"$gascmp_247" = icmp ugt i64 1, %"$gasrem_246"
  br i1 %"$gascmp_247", label %"$out_of_gas_248", label %"$have_gas_249"

"$out_of_gas_248":                                ; preds = %"$have_gas_244"
  call void @_out_of_gas()
  br label %"$have_gas_249"

"$have_gas_249":                                  ; preds = %"$out_of_gas_248", %"$have_gas_244"
  %"$consume_250" = sub i64 %"$gasrem_246", 1
  store i64 %"$consume_250", i64* @_gasrem, align 8
  %"$v_3" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$v_251" = load { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* %v, align 8
  %"$v_fptr_252" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$v_251", 0
  %"$v_envptr_253" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$v_251", 1
  %"$total_app_254" = load %Int32, %Int32* %total_app, align 4
  %"$v_call_255" = call { %Int32 (i8*, %Int32)*, i8* } %"$v_fptr_252"(i8* %"$v_envptr_253", %Int32 %"$total_app_254"), !dbg !32
  store { %Int32 (i8*, %Int32)*, i8* } %"$v_call_255", { %Int32 (i8*, %Int32)*, i8* }* %"$v_3", align 8, !dbg !32
  %"$v_4" = alloca %Int32, align 8
  %"$$v_3_256" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$v_3", align 8
  %"$$v_3_fptr_257" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$$v_3_256", 0
  %"$$v_3_envptr_258" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$$v_3_256", 1
  %"$$v_3_call_259" = call %Int32 %"$$v_3_fptr_257"(i8* %"$$v_3_envptr_258", %Int32 %x1), !dbg !32
  store %Int32 %"$$v_3_call_259", %Int32* %"$v_4", align 4, !dbg !32
  %"$$v_4_260" = load %Int32, %Int32* %"$v_4", align 4
  store %Int32 %"$$v_4_260", %Int32* %x_, align 4, !dbg !32
  %"$_literal_cost_x__261" = alloca %Int32, align 8
  %"$x__262" = load %Int32, %Int32* %x_, align 4
  store %Int32 %"$x__262", %Int32* %"$_literal_cost_x__261", align 4
  %"$$_literal_cost_x__261_263" = bitcast %Int32* %"$_literal_cost_x__261" to i8*
  %"$_literal_cost_call_264" = call i64 @_literal_cost(%_TyDescrTy_Typ* @"$TyDescr_Int32_23", i8* %"$$_literal_cost_x__261_263")
  %"$gasrem_265" = load i64, i64* @_gasrem, align 8
  %"$gascmp_266" = icmp ugt i64 %"$_literal_cost_call_264", %"$gasrem_265"
  br i1 %"$gascmp_266", label %"$out_of_gas_267", label %"$have_gas_268"

"$out_of_gas_267":                                ; preds = %"$have_gas_249"
  call void @_out_of_gas()
  br label %"$have_gas_268"

"$have_gas_268":                                  ; preds = %"$out_of_gas_267", %"$have_gas_249"
  %"$consume_269" = sub i64 %"$gasrem_265", %"$_literal_cost_call_264"
  store i64 %"$consume_269", i64* @_gasrem, align 8
  %"$execptr_load_270" = load i8*, i8** @_execptr, align 8
  %"$x__272" = load %Int32, %Int32* %x_, align 4
  %"$update_value_273" = alloca %Int32, align 8
  store %Int32 %"$x__272", %Int32* %"$update_value_273", align 4
  %"$update_value_274" = bitcast %Int32* %"$update_value_273" to i8*
  call void @_update_field(i8* %"$execptr_load_270", i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$res_271", i32 0, i32 0), %_TyDescrTy_Typ* @"$TyDescr_Int32_23", i32 0, i8* null, i8* %"$update_value_274"), !dbg !35
  br label %"$matchsucc_232"

"$default_236":                                   ; preds = %"$have_gas_230"
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_236"
  br label %"$matchsucc_232"

"$matchsucc_232":                                 ; preds = %"$have_gas_268", %"$joinp_0"
  ret void
}

declare i64 @_literal_cost(%_TyDescrTy_Typ*, i8*)

define void @dummy1(i8* %0) !dbg !36 {
entry:
  %"$_amount_276" = getelementptr i8, i8* %0, i32 0
  %"$_amount_277" = bitcast i8* %"$_amount_276" to %Uint128*
  %_amount = load %Uint128, %Uint128* %"$_amount_277", align 8
  %"$_origin_278" = getelementptr i8, i8* %0, i32 16
  %"$_origin_279" = bitcast i8* %"$_origin_278" to [20 x i8]*
  %"$_sender_280" = getelementptr i8, i8* %0, i32 36
  %"$_sender_281" = bitcast i8* %"$_sender_280" to [20 x i8]*
  %"$x1_282" = getelementptr i8, i8* %0, i32 56
  %"$x1_283" = bitcast i8* %"$x1_282" to %Int32*
  %x1 = load %Int32, %Int32* %"$x1_283", align 4
  %"$x2_284" = getelementptr i8, i8* %0, i32 60
  %"$x2_285" = bitcast i8* %"$x2_284" to %Int32*
  %x2 = load %Int32, %Int32* %"$x2_285", align 4
  call void @"$dummy1_190"(%Uint128 %_amount, [20 x i8]* %"$_origin_279", [20 x i8]* %"$_sender_281", %Int32 %x1, %Int32 %x2), !dbg !37
  ret void
}

define internal void @"$dummy2_286"(%Uint128 %_amount, [20 x i8]* %"$_origin_287", [20 x i8]* %"$_sender_288", %Int32 %x1, %Int32 %x2) !dbg !38 {
entry:
  %_origin = load [20 x i8], [20 x i8]* %"$_origin_287", align 1
  %_sender = load [20 x i8], [20 x i8]* %"$_sender_288", align 1
  %"$gasrem_289" = load i64, i64* @_gasrem, align 8
  %"$gascmp_290" = icmp ugt i64 1, %"$gasrem_289"
  br i1 %"$gascmp_290", label %"$out_of_gas_291", label %"$have_gas_292"

"$out_of_gas_291":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_292"

"$have_gas_292":                                  ; preds = %"$out_of_gas_291", %entry
  %"$consume_293" = sub i64 %"$gasrem_289", 1
  store i64 %"$consume_293", i64* @_gasrem, align 8
  %"$gasrem_294" = load i64, i64* @_gasrem, align 8
  %"$gascmp_295" = icmp ugt i64 1, %"$gasrem_294"
  br i1 %"$gascmp_295", label %"$out_of_gas_296", label %"$have_gas_297"

"$out_of_gas_296":                                ; preds = %"$have_gas_292"
  call void @_out_of_gas()
  br label %"$have_gas_297"

"$have_gas_297":                                  ; preds = %"$out_of_gas_296", %"$have_gas_292"
  %"$consume_298" = sub i64 %"$gasrem_294", 1
  store i64 %"$consume_298", i64* @_gasrem, align 8
  %big_func = alloca { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }, align 8
  %"$gasrem_299" = load i64, i64* @_gasrem, align 8
  %"$gascmp_300" = icmp ugt i64 1, %"$gasrem_299"
  br i1 %"$gascmp_300", label %"$out_of_gas_301", label %"$have_gas_302"

"$out_of_gas_301":                                ; preds = %"$have_gas_297"
  call void @_out_of_gas()
  br label %"$have_gas_302"

"$have_gas_302":                                  ; preds = %"$out_of_gas_301", %"$have_gas_297"
  %"$consume_303" = sub i64 %"$gasrem_299", 1
  store i64 %"$consume_303", i64* @_gasrem, align 8
  %f = alloca { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }, align 8
  %"$gasrem_304" = load i64, i64* @_gasrem, align 8
  %"$gascmp_305" = icmp ugt i64 1, %"$gasrem_304"
  br i1 %"$gascmp_305", label %"$out_of_gas_306", label %"$have_gas_307"

"$out_of_gas_306":                                ; preds = %"$have_gas_302"
  call void @_out_of_gas()
  br label %"$have_gas_307"

"$have_gas_307":                                  ; preds = %"$out_of_gas_306", %"$have_gas_302"
  %"$consume_308" = sub i64 %"$gasrem_304", 1
  store i64 %"$consume_308", i64* @_gasrem, align 8
  store { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* } { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })* bitcast (%Int32 (%"$$fundef_19_env_60"*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })* @"$fundef_19" to %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*), i8* null }, { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }* %f, align 8, !dbg !39
  %"$gasrem_312" = load i64, i64* @_gasrem, align 8
  %"$gascmp_313" = icmp ugt i64 1, %"$gasrem_312"
  br i1 %"$gascmp_313", label %"$out_of_gas_314", label %"$have_gas_315"

"$out_of_gas_314":                                ; preds = %"$have_gas_307"
  call void @_out_of_gas()
  br label %"$have_gas_315"

"$have_gas_315":                                  ; preds = %"$out_of_gas_314", %"$have_gas_307"
  %"$consume_316" = sub i64 %"$gasrem_312", 1
  store i64 %"$consume_316", i64* @_gasrem, align 8
  %"$f_317" = load { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }, { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }* %f, align 8
  store { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* } %"$f_317", { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }* %big_func, align 8, !dbg !40
  %"$gasrem_318" = load i64, i64* @_gasrem, align 8
  %"$gascmp_319" = icmp ugt i64 1, %"$gasrem_318"
  br i1 %"$gascmp_319", label %"$out_of_gas_320", label %"$have_gas_321"

"$out_of_gas_320":                                ; preds = %"$have_gas_315"
  call void @_out_of_gas()
  br label %"$have_gas_321"

"$have_gas_321":                                  ; preds = %"$out_of_gas_320", %"$have_gas_315"
  %"$consume_322" = sub i64 %"$gasrem_318", 1
  store i64 %"$consume_322", i64* @_gasrem, align 8
  %x = alloca %Int32, align 8
  %"$gasrem_323" = load i64, i64* @_gasrem, align 8
  %"$gascmp_324" = icmp ugt i64 1, %"$gasrem_323"
  br i1 %"$gascmp_324", label %"$out_of_gas_325", label %"$have_gas_326"

"$out_of_gas_325":                                ; preds = %"$have_gas_321"
  call void @_out_of_gas()
  br label %"$have_gas_326"

"$have_gas_326":                                  ; preds = %"$out_of_gas_325", %"$have_gas_321"
  %"$consume_327" = sub i64 %"$gasrem_323", 1
  store i64 %"$consume_327", i64* @_gasrem, align 8
  %"$big_func_7" = alloca %Int32, align 8
  %"$big_func_328" = load { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }, { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* }* %big_func, align 8
  %"$big_func_fptr_329" = extractvalue { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* } %"$big_func_328", 0
  %"$big_func_envptr_330" = extractvalue { %Int32 (i8*, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* })*, i8* } %"$big_func_328", 1
  %"$uncurry3.uncur_lib_func2_331" = load { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry3.uncur_lib_func2, align 8
  %"$big_func_call_332" = call %Int32 %"$big_func_fptr_329"(i8* %"$big_func_envptr_330", { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$uncurry3.uncur_lib_func2_331"), !dbg !41
  store %Int32 %"$big_func_call_332", %Int32* %"$big_func_7", align 4, !dbg !41
  %"$$big_func_7_333" = load %Int32, %Int32* %"$big_func_7", align 4
  store %Int32 %"$$big_func_7_333", %Int32* %x, align 4, !dbg !41
  %"$_literal_cost_x_334" = alloca %Int32, align 8
  %"$x_335" = load %Int32, %Int32* %x, align 4
  store %Int32 %"$x_335", %Int32* %"$_literal_cost_x_334", align 4
  %"$$_literal_cost_x_334_336" = bitcast %Int32* %"$_literal_cost_x_334" to i8*
  %"$_literal_cost_call_337" = call i64 @_literal_cost(%_TyDescrTy_Typ* @"$TyDescr_Int32_23", i8* %"$$_literal_cost_x_334_336")
  %"$gasrem_338" = load i64, i64* @_gasrem, align 8
  %"$gascmp_339" = icmp ugt i64 %"$_literal_cost_call_337", %"$gasrem_338"
  br i1 %"$gascmp_339", label %"$out_of_gas_340", label %"$have_gas_341"

"$out_of_gas_340":                                ; preds = %"$have_gas_326"
  call void @_out_of_gas()
  br label %"$have_gas_341"

"$have_gas_341":                                  ; preds = %"$out_of_gas_340", %"$have_gas_326"
  %"$consume_342" = sub i64 %"$gasrem_338", %"$_literal_cost_call_337"
  store i64 %"$consume_342", i64* @_gasrem, align 8
  %"$execptr_load_343" = load i8*, i8** @_execptr, align 8
  %"$x_345" = load %Int32, %Int32* %x, align 4
  %"$update_value_346" = alloca %Int32, align 8
  store %Int32 %"$x_345", %Int32* %"$update_value_346", align 4
  %"$update_value_347" = bitcast %Int32* %"$update_value_346" to i8*
  call void @_update_field(i8* %"$execptr_load_343", i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$res_344", i32 0, i32 0), %_TyDescrTy_Typ* @"$TyDescr_Int32_23", i32 0, i8* null, i8* %"$update_value_347"), !dbg !42
  ret void
}

define void @dummy2(i8* %0) !dbg !43 {
entry:
  %"$_amount_349" = getelementptr i8, i8* %0, i32 0
  %"$_amount_350" = bitcast i8* %"$_amount_349" to %Uint128*
  %_amount = load %Uint128, %Uint128* %"$_amount_350", align 8
  %"$_origin_351" = getelementptr i8, i8* %0, i32 16
  %"$_origin_352" = bitcast i8* %"$_origin_351" to [20 x i8]*
  %"$_sender_353" = getelementptr i8, i8* %0, i32 36
  %"$_sender_354" = bitcast i8* %"$_sender_353" to [20 x i8]*
  %"$x1_355" = getelementptr i8, i8* %0, i32 56
  %"$x1_356" = bitcast i8* %"$x1_355" to %Int32*
  %x1 = load %Int32, %Int32* %"$x1_356", align 4
  %"$x2_357" = getelementptr i8, i8* %0, i32 60
  %"$x2_358" = bitcast i8* %"$x2_357" to %Int32*
  %x2 = load %Int32, %Int32* %"$x2_358", align 4
  call void @"$dummy2_286"(%Uint128 %_amount, [20 x i8]* %"$_origin_352", [20 x i8]* %"$_sender_354", %Int32 %x1, %Int32 %x2), !dbg !44
  ret void
}

define internal void @"$dummy3_359"(%Uint128 %_amount, [20 x i8]* %"$_origin_360", [20 x i8]* %"$_sender_361", %Int32 %x1, %Int32 %x2) !dbg !45 {
entry:
  %_origin = load [20 x i8], [20 x i8]* %"$_origin_360", align 1
  %_sender = load [20 x i8], [20 x i8]* %"$_sender_361", align 1
  %"$gasrem_362" = load i64, i64* @_gasrem, align 8
  %"$gascmp_363" = icmp ugt i64 1, %"$gasrem_362"
  br i1 %"$gascmp_363", label %"$out_of_gas_364", label %"$have_gas_365"

"$out_of_gas_364":                                ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_365"

"$have_gas_365":                                  ; preds = %"$out_of_gas_364", %entry
  %"$consume_366" = sub i64 %"$gasrem_362", 1
  store i64 %"$consume_366", i64* @_gasrem, align 8
  %total_app = alloca %Int32, align 8
  %"$gasrem_367" = load i64, i64* @_gasrem, align 8
  %"$gascmp_368" = icmp ugt i64 1, %"$gasrem_367"
  br i1 %"$gascmp_368", label %"$out_of_gas_369", label %"$have_gas_370"

"$out_of_gas_369":                                ; preds = %"$have_gas_365"
  call void @_out_of_gas()
  br label %"$have_gas_370"

"$have_gas_370":                                  ; preds = %"$out_of_gas_369", %"$have_gas_365"
  %"$consume_371" = sub i64 %"$gasrem_367", 1
  store i64 %"$consume_371", i64* @_gasrem, align 8
  %"$uncurry3.uncur_lib_func3_372" = load { %Int32 (i8*, %Int32, %Int32)*, i8* }, { %Int32 (i8*, %Int32, %Int32)*, i8* }* @uncurry3.uncur_lib_func3, align 8
  %"$uncurry3.uncur_lib_func3_fptr_373" = extractvalue { %Int32 (i8*, %Int32, %Int32)*, i8* } %"$uncurry3.uncur_lib_func3_372", 0
  %"$uncurry3.uncur_lib_func3_envptr_374" = extractvalue { %Int32 (i8*, %Int32, %Int32)*, i8* } %"$uncurry3.uncur_lib_func3_372", 1
  %"$uncurry3.uncur_lib_func3_call_375" = call %Int32 %"$uncurry3.uncur_lib_func3_fptr_373"(i8* %"$uncurry3.uncur_lib_func3_envptr_374", %Int32 %x1, %Int32 %x2), !dbg !46
  store %Int32 %"$uncurry3.uncur_lib_func3_call_375", %Int32* %total_app, align 4, !dbg !46
  %"$_literal_cost_total_app_376" = alloca %Int32, align 8
  %"$total_app_377" = load %Int32, %Int32* %total_app, align 4
  store %Int32 %"$total_app_377", %Int32* %"$_literal_cost_total_app_376", align 4
  %"$$_literal_cost_total_app_376_378" = bitcast %Int32* %"$_literal_cost_total_app_376" to i8*
  %"$_literal_cost_call_379" = call i64 @_literal_cost(%_TyDescrTy_Typ* @"$TyDescr_Int32_23", i8* %"$$_literal_cost_total_app_376_378")
  %"$gasrem_380" = load i64, i64* @_gasrem, align 8
  %"$gascmp_381" = icmp ugt i64 %"$_literal_cost_call_379", %"$gasrem_380"
  br i1 %"$gascmp_381", label %"$out_of_gas_382", label %"$have_gas_383"

"$out_of_gas_382":                                ; preds = %"$have_gas_370"
  call void @_out_of_gas()
  br label %"$have_gas_383"

"$have_gas_383":                                  ; preds = %"$out_of_gas_382", %"$have_gas_370"
  %"$consume_384" = sub i64 %"$gasrem_380", %"$_literal_cost_call_379"
  store i64 %"$consume_384", i64* @_gasrem, align 8
  %"$execptr_load_385" = load i8*, i8** @_execptr, align 8
  %"$total_app_387" = load %Int32, %Int32* %total_app, align 4
  %"$update_value_388" = alloca %Int32, align 8
  store %Int32 %"$total_app_387", %Int32* %"$update_value_388", align 4
  %"$update_value_389" = bitcast %Int32* %"$update_value_388" to i8*
  call void @_update_field(i8* %"$execptr_load_385", i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$res_386", i32 0, i32 0), %_TyDescrTy_Typ* @"$TyDescr_Int32_23", i32 0, i8* null, i8* %"$update_value_389"), !dbg !47
  ret void
}

define void @dummy3(i8* %0) !dbg !48 {
entry:
  %"$_amount_391" = getelementptr i8, i8* %0, i32 0
  %"$_amount_392" = bitcast i8* %"$_amount_391" to %Uint128*
  %_amount = load %Uint128, %Uint128* %"$_amount_392", align 8
  %"$_origin_393" = getelementptr i8, i8* %0, i32 16
  %"$_origin_394" = bitcast i8* %"$_origin_393" to [20 x i8]*
  %"$_sender_395" = getelementptr i8, i8* %0, i32 36
  %"$_sender_396" = bitcast i8* %"$_sender_395" to [20 x i8]*
  %"$x1_397" = getelementptr i8, i8* %0, i32 56
  %"$x1_398" = bitcast i8* %"$x1_397" to %Int32*
  %x1 = load %Int32, %Int32* %"$x1_398", align 4
  %"$x2_399" = getelementptr i8, i8* %0, i32 60
  %"$x2_400" = bitcast i8* %"$x2_399" to %Int32*
  %x2 = load %Int32, %Int32* %"$x2_400", align 4
  call void @"$dummy3_359"(%Uint128 %_amount, [20 x i8]* %"$_origin_394", [20 x i8]* %"$_sender_396", %Int32 %x1, %Int32 %x2), !dbg !49
  ret void
}

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C89, file: !2, producer: "Scilla Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: LineTablesOnly, enums: !3, splitDebugInlining: false)
!2 = !DIFile(filename: "uncurry3.scilla", directory: "codegen/contr")
!3 = !{}
!4 = distinct !DISubprogram(name: "$fundef_19", linkageName: "$fundef_19", scope: !2, file: !2, line: 53, type: !5, scopeLine: 53, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "void")
!8 = !DILocation(line: 53, column: 26, scope: !4)
!9 = !DILocation(line: 54, column: 26, scope: !4)
!10 = !DILocation(line: 55, column: 17, scope: !4)
!11 = distinct !DISubprogram(name: "$fundef_8", linkageName: "$fundef_8", scope: !2, file: !2, line: 18, type: !5, scopeLine: 18, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!12 = !DILocation(line: 19, column: 13, scope: !11)
!13 = distinct !DISubprogram(name: "$fundef_12", linkageName: "$fundef_12", scope: !2, file: !2, line: 13, type: !5, scopeLine: 13, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!14 = !DILocation(line: 13, column: 13, scope: !13)
!15 = distinct !DISubprogram(name: "$fundef_10", linkageName: "$fundef_10", scope: !2, file: !2, line: 12, type: !5, scopeLine: 12, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!16 = !DILocation(line: 13, column: 13, scope: !15)
!17 = distinct !DISubprogram(name: "$fundef_16", linkageName: "$fundef_16", scope: !2, file: !2, line: 8, type: !5, scopeLine: 8, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!18 = !DILocation(line: 8, column: 13, scope: !17)
!19 = distinct !DISubprogram(name: "$fundef_14", linkageName: "$fundef_14", scope: !2, file: !2, line: 7, type: !5, scopeLine: 7, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!20 = !DILocation(line: 8, column: 13, scope: !19)
!21 = distinct !DISubprogram(name: "_init_libs", linkageName: "_init_libs", scope: !22, file: !22, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!22 = !DIFile(filename: ".", directory: ".")
!23 = !DILocation(line: 7, column: 9, scope: !21)
!24 = !DILocation(line: 12, column: 9, scope: !21)
!25 = !DILocation(line: 18, column: 9, scope: !21)
!26 = distinct !DISubprogram(name: "_init_state", linkageName: "_init_state", scope: !22, file: !22, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!27 = !DILocation(line: 27, column: 21, scope: !26)
!28 = distinct !DISubprogram(name: "dummy1", linkageName: "dummy1", scope: !2, file: !2, line: 29, type: !5, scopeLine: 29, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!29 = !DILocation(line: 32, column: 17, scope: !28)
!30 = !DILocation(line: 35, column: 9, scope: !28)
!31 = !DILocation(line: 37, column: 5, scope: !28)
!32 = !DILocation(line: 39, column: 14, scope: !33)
!33 = distinct !DILexicalBlock(scope: !34, file: !2, line: 38, column: 7)
!34 = distinct !DILexicalBlock(scope: !28, file: !2, line: 37, column: 5)
!35 = !DILocation(line: 40, column: 9, scope: !33)
!36 = distinct !DISubprogram(name: "dummy1", linkageName: "dummy1", scope: !2, file: !2, line: 29, type: !5, scopeLine: 29, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!37 = !DILocation(line: 29, column: 12, scope: !36)
!38 = distinct !DISubprogram(name: "dummy2", linkageName: "dummy2", scope: !2, file: !2, line: 45, type: !5, scopeLine: 45, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!39 = !DILocation(line: 53, column: 17, scope: !38)
!40 = !DILocation(line: 57, column: 9, scope: !38)
!41 = !DILocation(line: 60, column: 9, scope: !38)
!42 = !DILocation(line: 61, column: 5, scope: !38)
!43 = distinct !DISubprogram(name: "dummy2", linkageName: "dummy2", scope: !2, file: !2, line: 45, type: !5, scopeLine: 45, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!44 = !DILocation(line: 45, column: 12, scope: !43)
!45 = distinct !DISubprogram(name: "dummy3", linkageName: "dummy3", scope: !2, file: !2, line: 64, type: !5, scopeLine: 64, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!46 = !DILocation(line: 66, column: 17, scope: !45)
!47 = !DILocation(line: 67, column: 5, scope: !45)
!48 = distinct !DISubprogram(name: "dummy3", linkageName: "dummy3", scope: !2, file: !2, line: 64, type: !5, scopeLine: 64, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!49 = !DILocation(line: 64, column: 12, scope: !48)
