

; gas_remaining: 4002000
; ModuleID = 'SimpleUnuccury2'
source_filename = "SimpleUnuccury2"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-darwin19.6.0"

%"$TyDescrTy_PrimTyp_7" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescr_AddrTyp_43" = type { i32, %"$TyDescr_AddrFieldTyp_42"* }
%"$TyDescr_AddrFieldTyp_42" = type { %TyDescrString, %_TyDescrTy_Typ* }
%TyDescrString = type { i8*, i32 }
%Int32 = type { i32 }
%Uint32 = type { i32 }
%"$ParamDescr_147" = type { %ParamDescrString, %_TyDescrTy_Typ* }
%ParamDescrString = type { i8*, i32 }
%"$TransDescr_148" = type { %ParamDescrString, i32, %"$ParamDescr_147"* }
%"$$fundef_4_env_46" = type { %Int32 }
%"$$fundef_2_env_47" = type {}
%Uint128 = type { i128 }

@_execptr = global i8* null
@_gasrem = global i64 0
@"$TyDescr_Int32_Prim_8" = global %"$TyDescrTy_PrimTyp_7" zeroinitializer
@"$TyDescr_Int32_9" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Int32_Prim_8" to i8*) }
@"$TyDescr_Uint32_Prim_10" = global %"$TyDescrTy_PrimTyp_7" { i32 1, i32 0 }
@"$TyDescr_Uint32_11" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Uint32_Prim_10" to i8*) }
@"$TyDescr_Int64_Prim_12" = global %"$TyDescrTy_PrimTyp_7" { i32 0, i32 1 }
@"$TyDescr_Int64_13" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Int64_Prim_12" to i8*) }
@"$TyDescr_Uint64_Prim_14" = global %"$TyDescrTy_PrimTyp_7" { i32 1, i32 1 }
@"$TyDescr_Uint64_15" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Uint64_Prim_14" to i8*) }
@"$TyDescr_Int128_Prim_16" = global %"$TyDescrTy_PrimTyp_7" { i32 0, i32 2 }
@"$TyDescr_Int128_17" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Int128_Prim_16" to i8*) }
@"$TyDescr_Uint128_Prim_18" = global %"$TyDescrTy_PrimTyp_7" { i32 1, i32 2 }
@"$TyDescr_Uint128_19" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Uint128_Prim_18" to i8*) }
@"$TyDescr_Int256_Prim_20" = global %"$TyDescrTy_PrimTyp_7" { i32 0, i32 3 }
@"$TyDescr_Int256_21" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Int256_Prim_20" to i8*) }
@"$TyDescr_Uint256_Prim_22" = global %"$TyDescrTy_PrimTyp_7" { i32 1, i32 3 }
@"$TyDescr_Uint256_23" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Uint256_Prim_22" to i8*) }
@"$TyDescr_String_Prim_24" = global %"$TyDescrTy_PrimTyp_7" { i32 2, i32 0 }
@"$TyDescr_String_25" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_String_Prim_24" to i8*) }
@"$TyDescr_Bnum_Prim_26" = global %"$TyDescrTy_PrimTyp_7" { i32 3, i32 0 }
@"$TyDescr_Bnum_27" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Bnum_Prim_26" to i8*) }
@"$TyDescr_Message_Prim_28" = global %"$TyDescrTy_PrimTyp_7" { i32 4, i32 0 }
@"$TyDescr_Message_29" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Message_Prim_28" to i8*) }
@"$TyDescr_Event_Prim_30" = global %"$TyDescrTy_PrimTyp_7" { i32 5, i32 0 }
@"$TyDescr_Event_31" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Event_Prim_30" to i8*) }
@"$TyDescr_Exception_Prim_32" = global %"$TyDescrTy_PrimTyp_7" { i32 6, i32 0 }
@"$TyDescr_Exception_33" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Exception_Prim_32" to i8*) }
@"$TyDescr_Bystr_Prim_34" = global %"$TyDescrTy_PrimTyp_7" { i32 7, i32 0 }
@"$TyDescr_Bystr_35" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Bystr_Prim_34" to i8*) }
@"$TyDescr_Bystr20_Prim_36" = global %"$TyDescrTy_PrimTyp_7" { i32 8, i32 20 }
@"$TyDescr_Bystr20_37" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_7"* @"$TyDescr_Bystr20_Prim_36" to i8*) }
@"$TyDescr_Addr_44" = unnamed_addr constant %_TyDescrTy_Typ { i32 3, i8* bitcast (%"$TyDescr_AddrTyp_43"* @"$TyDescr_AddrFields_45" to i8*) }
@"$TyDescr_AddrFields_45" = unnamed_addr constant %"$TyDescr_AddrTyp_43" { i32 -1, %"$TyDescr_AddrFieldTyp_42"* null }
@uncurry2.uncur_lib_func = global { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } zeroinitializer
@_scilla_version = global %Uint32 zeroinitializer
@_this_address = global [20 x i8] zeroinitializer
@_creation_block = global i8* null
@"$res_78" = unnamed_addr constant [4 x i8] c"res\00"
@"$res_132" = unnamed_addr constant [4 x i8] c"res\00"
@_tydescr_table = constant [16 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Event_31", %_TyDescrTy_Typ* @"$TyDescr_Int64_13", %_TyDescrTy_Typ* @"$TyDescr_Addr_44", %_TyDescrTy_Typ* @"$TyDescr_Bystr20_37", %_TyDescrTy_Typ* @"$TyDescr_Uint256_23", %_TyDescrTy_Typ* @"$TyDescr_Uint32_11", %_TyDescrTy_Typ* @"$TyDescr_Uint64_15", %_TyDescrTy_Typ* @"$TyDescr_Bnum_27", %_TyDescrTy_Typ* @"$TyDescr_Uint128_19", %_TyDescrTy_Typ* @"$TyDescr_Exception_33", %_TyDescrTy_Typ* @"$TyDescr_String_25", %_TyDescrTy_Typ* @"$TyDescr_Int256_21", %_TyDescrTy_Typ* @"$TyDescr_Int128_17", %_TyDescrTy_Typ* @"$TyDescr_Bystr_35", %_TyDescrTy_Typ* @"$TyDescr_Message_29", %_TyDescrTy_Typ* @"$TyDescr_Int32_9"]
@_tydescr_table_length = constant i32 16
@"$pname__scilla_version_149" = unnamed_addr constant [15 x i8] c"_scilla_version"
@"$pname__this_address_150" = unnamed_addr constant [13 x i8] c"_this_address"
@"$pname__creation_block_151" = unnamed_addr constant [15 x i8] c"_creation_block"
@_contract_parameters = constant [3 x %"$ParamDescr_147"] [%"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__scilla_version_149", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Uint32_11" }, %"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @"$pname__this_address_150", i32 0, i32 0), i32 13 }, %_TyDescrTy_Typ* @"$TyDescr_Bystr20_37" }, %"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @"$pname__creation_block_151", i32 0, i32 0), i32 15 }, %_TyDescrTy_Typ* @"$TyDescr_Bnum_27" }]
@_contract_parameters_length = constant i32 3
@"$tpname__amount_152" = unnamed_addr constant [7 x i8] c"_amount"
@"$tpname__origin_153" = unnamed_addr constant [7 x i8] c"_origin"
@"$tpname__sender_154" = unnamed_addr constant [7 x i8] c"_sender"
@"$tpname_x1_155" = unnamed_addr constant [2 x i8] c"x1"
@"$tpname_x2_156" = unnamed_addr constant [2 x i8] c"x2"
@"$tparams_dummy_157" = unnamed_addr constant [5 x %"$ParamDescr_147"] [%"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__amount_152", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Uint128_19" }, %"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__origin_153", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_44" }, %"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @"$tpname__sender_154", i32 0, i32 0), i32 7 }, %_TyDescrTy_Typ* @"$TyDescr_Addr_44" }, %"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x1_155", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_9" }, %"$ParamDescr_147" { %ParamDescrString { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @"$tpname_x2_156", i32 0, i32 0), i32 2 }, %_TyDescrTy_Typ* @"$TyDescr_Int32_9" }]
@"$tname_dummy_158" = unnamed_addr constant [5 x i8] c"dummy"
@_transition_parameters = constant [1 x %"$TransDescr_148"] [%"$TransDescr_148" { %ParamDescrString { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"$tname_dummy_158", i32 0, i32 0), i32 5 }, i32 5, %"$ParamDescr_147"* getelementptr inbounds ([5 x %"$ParamDescr_147"], [5 x %"$ParamDescr_147"]* @"$tparams_dummy_157", i32 0, i32 0) }]
@_transition_parameters_length = constant i32 1

define internal %Int32 @"$fundef_4"(%"$$fundef_4_env_46"* %0, %Int32 %1) !dbg !4 {
entry:
  %"$$fundef_4_env_a_59" = getelementptr inbounds %"$$fundef_4_env_46", %"$$fundef_4_env_46"* %0, i32 0, i32 0
  %"$a_envload_60" = load %Int32, %Int32* %"$$fundef_4_env_a_59", align 4
  %a = alloca %Int32, align 8
  store %Int32 %"$a_envload_60", %Int32* %a, align 4
  %"$retval_5" = alloca %Int32, align 8
  %"$a_61" = load %Int32, %Int32* %a, align 4
  %"$add_call_62" = call %Int32 @_add_Int32(%Int32 %"$a_61", %Int32 %1), !dbg !8
  store %Int32 %"$add_call_62", %Int32* %"$retval_5", align 4, !dbg !8
  %"$$retval_5_63" = load %Int32, %Int32* %"$retval_5", align 4
  ret %Int32 %"$$retval_5_63"
}

define internal { %Int32 (i8*, %Int32)*, i8* } @"$fundef_2"(%"$$fundef_2_env_47"* %0, %Int32 %1) !dbg !9 {
entry:
  %"$retval_3" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$gasrem_48" = load i64, i64* @_gasrem, align 8
  %"$gascmp_49" = icmp ugt i64 1, %"$gasrem_48"
  br i1 %"$gascmp_49", label %"$out_of_gas_50", label %"$have_gas_51"

"$out_of_gas_50":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_51"

"$have_gas_51":                                   ; preds = %"$out_of_gas_50", %entry
  %"$consume_52" = sub i64 %"$gasrem_48", 1
  store i64 %"$consume_52", i64* @_gasrem, align 8
  %"$$fundef_4_envp_53_load" = load i8*, i8** @_execptr, align 8
  %"$$fundef_4_envp_53_salloc" = call i8* @_salloc(i8* %"$$fundef_4_envp_53_load", i64 4)
  %"$$fundef_4_envp_53" = bitcast i8* %"$$fundef_4_envp_53_salloc" to %"$$fundef_4_env_46"*
  %"$$fundef_4_env_voidp_55" = bitcast %"$$fundef_4_env_46"* %"$$fundef_4_envp_53" to i8*
  %"$$fundef_4_cloval_56" = insertvalue { %Int32 (i8*, %Int32)*, i8* } { %Int32 (i8*, %Int32)* bitcast (%Int32 (%"$$fundef_4_env_46"*, %Int32)* @"$fundef_4" to %Int32 (i8*, %Int32)*), i8* undef }, i8* %"$$fundef_4_env_voidp_55", 1
  %"$$fundef_4_env_a_57" = getelementptr inbounds %"$$fundef_4_env_46", %"$$fundef_4_env_46"* %"$$fundef_4_envp_53", i32 0, i32 0
  store %Int32 %1, %Int32* %"$$fundef_4_env_a_57", align 4
  store { %Int32 (i8*, %Int32)*, i8* } %"$$fundef_4_cloval_56", { %Int32 (i8*, %Int32)*, i8* }* %"$retval_3", align 8, !dbg !10
  %"$$retval_3_58" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$retval_3", align 8
  ret { %Int32 (i8*, %Int32)*, i8* } %"$$retval_3_58"
}

declare void @_out_of_gas()

declare i8* @_salloc(i8*, i64)

declare %Int32 @_add_Int32(%Int32, %Int32)

define void @_init_libs() !dbg !11 {
entry:
  %"$gasrem_64" = load i64, i64* @_gasrem, align 8
  %"$gascmp_65" = icmp ugt i64 1, %"$gasrem_64"
  br i1 %"$gascmp_65", label %"$out_of_gas_66", label %"$have_gas_67"

"$out_of_gas_66":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_67"

"$have_gas_67":                                   ; preds = %"$out_of_gas_66", %entry
  %"$consume_68" = sub i64 %"$gasrem_64", 1
  store i64 %"$consume_68", i64* @_gasrem, align 8
  store { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)* bitcast ({ %Int32 (i8*, %Int32)*, i8* } (%"$$fundef_2_env_47"*, %Int32)* @"$fundef_2" to { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*), i8* null }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry2.uncur_lib_func, align 8, !dbg !13
  ret void
}

define void @_init_state() !dbg !14 {
entry:
  %"$res_6" = alloca %Int32, align 8
  %"$gasrem_72" = load i64, i64* @_gasrem, align 8
  %"$gascmp_73" = icmp ugt i64 1, %"$gasrem_72"
  br i1 %"$gascmp_73", label %"$out_of_gas_74", label %"$have_gas_75"

"$out_of_gas_74":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_75"

"$have_gas_75":                                   ; preds = %"$out_of_gas_74", %entry
  %"$consume_76" = sub i64 %"$gasrem_72", 1
  store i64 %"$consume_76", i64* @_gasrem, align 8
  store %Int32 zeroinitializer, %Int32* %"$res_6", align 4, !dbg !15
  %"$execptr_load_77" = load i8*, i8** @_execptr, align 8
  %"$$res_6_79" = load %Int32, %Int32* %"$res_6", align 4
  %"$update_value_80" = alloca %Int32, align 8
  store %Int32 %"$$res_6_79", %Int32* %"$update_value_80", align 4
  %"$update_value_81" = bitcast %Int32* %"$update_value_80" to i8*
  call void @_update_field(i8* %"$execptr_load_77", i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$res_78", i32 0, i32 0), %_TyDescrTy_Typ* @"$TyDescr_Int32_9", i32 0, i8* null, i8* %"$update_value_81"), !dbg !15
  ret void
}

declare void @_update_field(i8*, i8*, %_TyDescrTy_Typ*, i32, i8*, i8*)

define internal void @"$dummy_82"(%Uint128 %_amount, [20 x i8]* %"$_origin_83", [20 x i8]* %"$_sender_84", %Int32 %x1, %Int32 %x2) !dbg !16 {
entry:
  %_origin = load [20 x i8], [20 x i8]* %"$_origin_83", align 1
  %_sender = load [20 x i8], [20 x i8]* %"$_sender_84", align 1
  %"$gasrem_85" = load i64, i64* @_gasrem, align 8
  %"$gascmp_86" = icmp ugt i64 1, %"$gasrem_85"
  br i1 %"$gascmp_86", label %"$out_of_gas_87", label %"$have_gas_88"

"$out_of_gas_87":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_88"

"$have_gas_88":                                   ; preds = %"$out_of_gas_87", %entry
  %"$consume_89" = sub i64 %"$gasrem_85", 1
  store i64 %"$consume_89", i64* @_gasrem, align 8
  %partial_app1 = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$gasrem_90" = load i64, i64* @_gasrem, align 8
  %"$gascmp_91" = icmp ugt i64 1, %"$gasrem_90"
  br i1 %"$gascmp_91", label %"$out_of_gas_92", label %"$have_gas_93"

"$out_of_gas_92":                                 ; preds = %"$have_gas_88"
  call void @_out_of_gas()
  br label %"$have_gas_93"

"$have_gas_93":                                   ; preds = %"$out_of_gas_92", %"$have_gas_88"
  %"$consume_94" = sub i64 %"$gasrem_90", 1
  store i64 %"$consume_94", i64* @_gasrem, align 8
  %"$uncurry2.uncur_lib_func_1" = alloca { %Int32 (i8*, %Int32)*, i8* }, align 8
  %"$uncurry2.uncur_lib_func_95" = load { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }, { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* }* @uncurry2.uncur_lib_func, align 8
  %"$uncurry2.uncur_lib_func_fptr_96" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$uncurry2.uncur_lib_func_95", 0
  %"$uncurry2.uncur_lib_func_envptr_97" = extractvalue { { %Int32 (i8*, %Int32)*, i8* } (i8*, %Int32)*, i8* } %"$uncurry2.uncur_lib_func_95", 1
  %"$uncurry2.uncur_lib_func_call_98" = call { %Int32 (i8*, %Int32)*, i8* } %"$uncurry2.uncur_lib_func_fptr_96"(i8* %"$uncurry2.uncur_lib_func_envptr_97", %Int32 %x1), !dbg !17
  store { %Int32 (i8*, %Int32)*, i8* } %"$uncurry2.uncur_lib_func_call_98", { %Int32 (i8*, %Int32)*, i8* }* %"$uncurry2.uncur_lib_func_1", align 8, !dbg !17
  %"$$uncurry2.uncur_lib_func_1_99" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %"$uncurry2.uncur_lib_func_1", align 8
  store { %Int32 (i8*, %Int32)*, i8* } %"$$uncurry2.uncur_lib_func_1_99", { %Int32 (i8*, %Int32)*, i8* }* %partial_app1, align 8, !dbg !17
  %"$gasrem_100" = load i64, i64* @_gasrem, align 8
  %"$gascmp_101" = icmp ugt i64 1, %"$gasrem_100"
  br i1 %"$gascmp_101", label %"$out_of_gas_102", label %"$have_gas_103"

"$out_of_gas_102":                                ; preds = %"$have_gas_93"
  call void @_out_of_gas()
  br label %"$have_gas_103"

"$have_gas_103":                                  ; preds = %"$out_of_gas_102", %"$have_gas_93"
  %"$consume_104" = sub i64 %"$gasrem_100", 1
  store i64 %"$consume_104", i64* @_gasrem, align 8
  %total_app = alloca %Int32, align 8
  %"$gasrem_105" = load i64, i64* @_gasrem, align 8
  %"$gascmp_106" = icmp ugt i64 1, %"$gasrem_105"
  br i1 %"$gascmp_106", label %"$out_of_gas_107", label %"$have_gas_108"

"$out_of_gas_107":                                ; preds = %"$have_gas_103"
  call void @_out_of_gas()
  br label %"$have_gas_108"

"$have_gas_108":                                  ; preds = %"$out_of_gas_107", %"$have_gas_103"
  %"$consume_109" = sub i64 %"$gasrem_105", 1
  store i64 %"$consume_109", i64* @_gasrem, align 8
  %"$partial_app1_0" = alloca %Int32, align 8
  %"$partial_app1_110" = load { %Int32 (i8*, %Int32)*, i8* }, { %Int32 (i8*, %Int32)*, i8* }* %partial_app1, align 8
  %"$partial_app1_fptr_111" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$partial_app1_110", 0
  %"$partial_app1_envptr_112" = extractvalue { %Int32 (i8*, %Int32)*, i8* } %"$partial_app1_110", 1
  %"$partial_app1_call_113" = call %Int32 %"$partial_app1_fptr_111"(i8* %"$partial_app1_envptr_112", %Int32 %x2), !dbg !18
  store %Int32 %"$partial_app1_call_113", %Int32* %"$partial_app1_0", align 4, !dbg !18
  %"$$partial_app1_0_114" = load %Int32, %Int32* %"$partial_app1_0", align 4
  store %Int32 %"$$partial_app1_0_114", %Int32* %total_app, align 4, !dbg !18
  %"$gasrem_115" = load i64, i64* @_gasrem, align 8
  %"$gascmp_116" = icmp ugt i64 1, %"$gasrem_115"
  br i1 %"$gascmp_116", label %"$out_of_gas_117", label %"$have_gas_118"

"$out_of_gas_117":                                ; preds = %"$have_gas_108"
  call void @_out_of_gas()
  br label %"$have_gas_118"

"$have_gas_118":                                  ; preds = %"$out_of_gas_117", %"$have_gas_108"
  %"$consume_119" = sub i64 %"$gasrem_115", 1
  store i64 %"$consume_119", i64* @_gasrem, align 8
  %y = alloca %Int32, align 8
  %"$total_app_120" = load %Int32, %Int32* %total_app, align 4
  %"$add_call_121" = call %Int32 @_add_Int32(%Int32 %x1, %Int32 %"$total_app_120"), !dbg !19
  store %Int32 %"$add_call_121", %Int32* %y, align 4, !dbg !19
  %"$_literal_cost_y_122" = alloca %Int32, align 8
  %"$y_123" = load %Int32, %Int32* %y, align 4
  store %Int32 %"$y_123", %Int32* %"$_literal_cost_y_122", align 4
  %"$$_literal_cost_y_122_124" = bitcast %Int32* %"$_literal_cost_y_122" to i8*
  %"$_literal_cost_call_125" = call i64 @_literal_cost(%_TyDescrTy_Typ* @"$TyDescr_Int32_9", i8* %"$$_literal_cost_y_122_124")
  %"$gasrem_126" = load i64, i64* @_gasrem, align 8
  %"$gascmp_127" = icmp ugt i64 %"$_literal_cost_call_125", %"$gasrem_126"
  br i1 %"$gascmp_127", label %"$out_of_gas_128", label %"$have_gas_129"

"$out_of_gas_128":                                ; preds = %"$have_gas_118"
  call void @_out_of_gas()
  br label %"$have_gas_129"

"$have_gas_129":                                  ; preds = %"$out_of_gas_128", %"$have_gas_118"
  %"$consume_130" = sub i64 %"$gasrem_126", %"$_literal_cost_call_125"
  store i64 %"$consume_130", i64* @_gasrem, align 8
  %"$execptr_load_131" = load i8*, i8** @_execptr, align 8
  %"$y_133" = load %Int32, %Int32* %y, align 4
  %"$update_value_134" = alloca %Int32, align 8
  store %Int32 %"$y_133", %Int32* %"$update_value_134", align 4
  %"$update_value_135" = bitcast %Int32* %"$update_value_134" to i8*
  call void @_update_field(i8* %"$execptr_load_131", i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$res_132", i32 0, i32 0), %_TyDescrTy_Typ* @"$TyDescr_Int32_9", i32 0, i8* null, i8* %"$update_value_135"), !dbg !20
  ret void
}

declare i64 @_literal_cost(%_TyDescrTy_Typ*, i8*)

define void @dummy(i8* %0) !dbg !21 {
entry:
  %"$_amount_137" = getelementptr i8, i8* %0, i32 0
  %"$_amount_138" = bitcast i8* %"$_amount_137" to %Uint128*
  %_amount = load %Uint128, %Uint128* %"$_amount_138", align 8
  %"$_origin_139" = getelementptr i8, i8* %0, i32 16
  %"$_origin_140" = bitcast i8* %"$_origin_139" to [20 x i8]*
  %"$_sender_141" = getelementptr i8, i8* %0, i32 36
  %"$_sender_142" = bitcast i8* %"$_sender_141" to [20 x i8]*
  %"$x1_143" = getelementptr i8, i8* %0, i32 56
  %"$x1_144" = bitcast i8* %"$x1_143" to %Int32*
  %x1 = load %Int32, %Int32* %"$x1_144", align 4
  %"$x2_145" = getelementptr i8, i8* %0, i32 60
  %"$x2_146" = bitcast i8* %"$x2_145" to %Int32*
  %x2 = load %Int32, %Int32* %"$x2_146", align 4
  call void @"$dummy_82"(%Uint128 %_amount, [20 x i8]* %"$_origin_140", [20 x i8]* %"$_sender_142", %Int32 %x1, %Int32 %x2), !dbg !22
  ret void
}

!llvm.module.flags = !{!0}
!llvm.dbg.cu = !{!1}

!0 = !{i32 2, !"Debug Info Version", i32 3}
!1 = distinct !DICompileUnit(language: DW_LANG_C89, file: !2, producer: "Scilla Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: LineTablesOnly, enums: !3, splitDebugInlining: false)
!2 = !DIFile(filename: "uncurry2.scilla", directory: "codegen/contr")
!3 = !{}
!4 = distinct !DISubprogram(name: "$fundef_4", linkageName: "$fundef_4", scope: !2, file: !2, line: 9, type: !5, scopeLine: 9, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(tag: DW_TAG_unspecified_type, name: "void")
!8 = !DILocation(line: 9, column: 13, scope: !4)
!9 = distinct !DISubprogram(name: "$fundef_2", linkageName: "$fundef_2", scope: !2, file: !2, line: 8, type: !5, scopeLine: 8, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!10 = !DILocation(line: 9, column: 13, scope: !9)
!11 = distinct !DISubprogram(name: "_init_libs", linkageName: "_init_libs", scope: !12, file: !12, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!12 = !DIFile(filename: ".", directory: ".")
!13 = !DILocation(line: 8, column: 9, scope: !11)
!14 = distinct !DISubprogram(name: "_init_state", linkageName: "_init_state", scope: !12, file: !12, type: !5, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!15 = !DILocation(line: 14, column: 21, scope: !14)
!16 = distinct !DISubprogram(name: "dummy", linkageName: "dummy", scope: !2, file: !2, line: 16, type: !5, scopeLine: 16, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!17 = !DILocation(line: 17, column: 20, scope: !16)
!18 = !DILocation(line: 18, column: 17, scope: !16)
!19 = !DILocation(line: 20, column: 9, scope: !16)
!20 = !DILocation(line: 21, column: 5, scope: !16)
!21 = distinct !DISubprogram(name: "dummy", linkageName: "dummy", scope: !2, file: !2, line: 16, type: !5, scopeLine: 16, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1, retainedNodes: !3)
!22 = !DILocation(line: 16, column: 12, scope: !21)
