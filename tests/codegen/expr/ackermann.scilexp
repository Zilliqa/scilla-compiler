(* some helper functions one would hope to find in stdlib *)
let nat_succ : Nat -> Nat =
  fun (n : Nat) => Succ n
in

(* [nat_iter 'A f n] = f^n -- functional power operator *)
let nat_iter : forall 'A. ('A -> 'A) -> Nat -> ('A -> 'A) =
  tfun 'A =>
  fun (f : 'A -> 'A) =>
  fun (n : Nat) =>
  fun (x0 : 'A) =>
  let folder = @nat_fold 'A in
  let step = fun (x : 'A) => fun (unused : Nat) => f x in
  folder step x0 n
in

let ackermann : Nat -> Nat -> Nat =
  let iter_nat = @nat_iter Nat in
  let iter_nat_nat = @nat_iter (Nat -> Nat) in
  let zero = Zero in
  let one = Succ zero in
  let f = fun (ack : Nat -> Nat) =>
    let x0 = ack one in
    fun (n : Nat) => iter_nat ack n x0
  in fun (n : Nat) => iter_nat_nat f n nat_succ
in

(* tests *)
let uint0 = Uint32 0 in
let uint1 = Uint32 1 in
let uint2 = Uint32 2 in
let uint3 = Uint32 3 in
let uint4 = Uint32 4 in

let n0 = builtin to_nat uint0 in
let n1 = builtin to_nat uint1 in
let n2 = builtin to_nat uint2 in
let n3 = builtin to_nat uint3 in
let n4 = builtin to_nat uint4 in

let ack00 = ackermann n0 n0 in
let ack01 = ackermann n0 n1 in
let ack02 = ackermann n0 n2 in
let ack03 = ackermann n0 n3 in
let ack04 = ackermann n0 n4 in
let ack10 = ackermann n1 n0 in
let ack11 = ackermann n1 n1 in
let ack12 = ackermann n1 n2 in
let ack13 = ackermann n1 n3 in
let ack14 = ackermann n1 n4 in
let ack20 = ackermann n2 n0 in
let ack21 = ackermann n2 n1 in
let ack22 = ackermann n2 n2 in
let ack23 = ackermann n2 n3 in
let ack24 = ackermann n2 n4 in
let ack30 = ackermann n3 n0 in
let ack31 = ackermann n3 n1 in
let ack32 = ackermann n3 n2 in
let ack33 = ackermann n3 n3 in
let ack34 = ackermann n3 n4 in
let ack40 = ackermann n4 n0 in

let int01 = nat_to_int ack00 in
let int02 = nat_to_int ack02 in
let int03 = nat_to_int ack03 in
let int04 = nat_to_int ack04 in
let int10 = nat_to_int ack10 in
let int11 = nat_to_int ack11 in
let int12 = nat_to_int ack12 in
let int13 = nat_to_int ack13 in
let int14 = nat_to_int ack14 in
let int20 = nat_to_int ack20 in
let int21 = nat_to_int ack21 in
let int22 = nat_to_int ack22 in
let int23 = nat_to_int ack23 in
let int24 = nat_to_int ack23 in
let int30 = nat_to_int ack30 in
let int31 = nat_to_int ack31 in
let int32 = nat_to_int ack32 in
let int33 = nat_to_int ack33 in
let int34 = nat_to_int ack34 in
let int40 = nat_to_int ack40 in

let sum = builtin add int01 int02 in
let sum = builtin add sum int03 in
let sum = builtin add sum int04 in
let sum = builtin add sum int10 in
let sum = builtin add sum int11 in
let sum = builtin add sum int12 in
let sum = builtin add sum int13 in
let sum = builtin add sum int14 in
let sum = builtin add sum int20 in
let sum = builtin add sum int21 in
let sum = builtin add sum int22 in
let sum = builtin add sum int23 in
let sum = builtin add sum int24 in
let sum = builtin add sum int30 in
let sum = builtin add sum int31 in
let sum = builtin add sum int32 in
let sum = builtin add sum int33 in
let sum = builtin add sum int34 in
let sum = builtin add sum int40 in

sum
