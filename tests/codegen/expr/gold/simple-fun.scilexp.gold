Closure converted AST:
fundef ($fundef_2 : [Int32] -> Int32) ((a : Int32) : Int32)
environment: ()
body:
  decl ($retval_3 : Int32)
  ($retval_3 : Int32) = (a : Int32)
  ret ($retval_3 : Int32)

expr_body:
  decl ($expr_1 : Int32)
  decl (f : [Int32] -> Int32)
  (f : [Int32] -> Int32) = [($fundef_2 : [Int32] -> Int32)]
  decl (i : Int32)
  (i : Int32) = (Int32 0)
  decl ($f_0 : Int32)
  ($f_0 : Int32) = (f : [Int32] -> Int32) (i : Int32)
  ($expr_1 : Int32) = ($f_0 : Int32)
  ret ($expr_1 : Int32)

Specialized types:
ADTs:

Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_4" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, void* }
%"$$fundef_2_env_29" = type {}
%_Int32 = type { i32 }

@"$TyDescr_Int32_Prim_5" = global %"$TyDescrTy_PrimTyp_4" zeroinitializer
@"$TyDescr_Int32_6" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int32_Prim_5" }
@"$TyDescr_Uint32_Prim_7" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 0 }
@"$TyDescr_Uint32_8" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint32_Prim_7" }
@"$TyDescr_Int64_Prim_9" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 1 }
@"$TyDescr_Int64_10" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int64_Prim_9" }
@"$TyDescr_Uint64_Prim_11" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 1 }
@"$TyDescr_Uint64_12" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint64_Prim_11" }
@"$TyDescr_Int128_Prim_13" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 2 }
@"$TyDescr_Int128_14" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int128_Prim_13" }
@"$TyDescr_Uint128_Prim_15" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 2 }
@"$TyDescr_Uint128_16" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint128_Prim_15" }
@"$TyDescr_Int256_Prim_17" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 3 }
@"$TyDescr_Int256_18" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int256_Prim_17" }
@"$TyDescr_Uint256_Prim_19" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 3 }
@"$TyDescr_Uint256_20" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint256_Prim_19" }
@"$TyDescr_String_Prim_21" = global %"$TyDescrTy_PrimTyp_4" { i32 2, i32 0 }
@"$TyDescr_String_22" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_String_Prim_21" }
@"$TyDescr_Bystr_Prim_23" = global %"$TyDescrTy_PrimTyp_4" { i32 7, i32 0 }
@"$TyDescr_Bystr_24" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bystr_Prim_23" }

define %_Int32 @"$fundef_2"(%"$$fundef_2_env_29"*, %_Int32) {
entry:
  %"$retval_3" = alloca %_Int32
  store %_Int32 %1, %_Int32* %"$retval_3"
  %"$$retval_3_30" = load %_Int32, %_Int32* %"$retval_3"
  ret %_Int32 %"$$retval_3_30"
}

define %_Int32 @"$scilla_expr_31"(void*) {
entry:
  %"$expr_1" = alloca %_Int32
  %f = alloca { %_Int32 (void*, %_Int32)*, void* }
  store { %_Int32 (void*, %_Int32)*, void* } { %_Int32 (void*, %_Int32)* bitcast (%_Int32 (%"$$fundef_2_env_29"*, %_Int32)* @"$fundef_2" to %_Int32 (void*, %_Int32)*), void* null }, { %_Int32 (void*, %_Int32)*, void* }* %f
  %i = alloca %_Int32
  store %_Int32 zeroinitializer, %_Int32* %i
  %"$f_0" = alloca %_Int32
  %"$f_35" = load { %_Int32 (void*, %_Int32)*, void* }, { %_Int32 (void*, %_Int32)*, void* }* %f
  %"$f_fptr_36" = extractvalue { %_Int32 (void*, %_Int32)*, void* } %"$f_35", 0
  %"$f_envptr_37" = extractvalue { %_Int32 (void*, %_Int32)*, void* } %"$f_35", 1
  %"$i_38" = load %_Int32, %_Int32* %i
  %"$f_call_39" = call %_Int32 %"$f_fptr_36"(void* %"$f_envptr_37", %_Int32 %"$i_38")
  store %_Int32 %"$f_call_39", %_Int32* %"$f_0"
  %"$$f_0_40" = load %_Int32, %_Int32* %"$f_0"
  store %_Int32 %"$$f_0_40", %_Int32* %"$expr_1"
  %"$$expr_1_41" = load %_Int32, %_Int32* %"$expr_1"
  ret %_Int32 %"$$expr_1_41"
}

declare void @_print_scilla_val(%_TyDescrTy_Typ*, void*)

define void @scilla_main() {
entry:
  %"$exprval_42" = call %_Int32 @"$scilla_expr_31"(void* null)
  %"$pval_43" = alloca %_Int32
  %"$memvoidcast_44" = bitcast %_Int32* %"$pval_43" to void*
  store %_Int32 %"$exprval_42", %_Int32* %"$pval_43"
  call void @_print_scilla_val(%_TyDescrTy_Typ* @"$TyDescr_Int32_6", void* %"$memvoidcast_44")
  ret void
}

