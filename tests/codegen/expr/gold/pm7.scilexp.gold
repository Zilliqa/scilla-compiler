Closure converted AST:
fundef ($fundef_12 : [List (Option (Int32))] -> Int32) ((p : List (Option (Int32))) : List (Option (Int32)))
environment: ((v : Int32) : Int32 , (y : Int32) : Int32 , (z : Int32) : Int32)
body:
  (v : Int32) <- [($fundef_12 : [List (Option (Int32))] -> Int32)]((v : Int32))
  (y : Int32) <- [($fundef_12 : [List (Option (Int32))] -> Int32)]((y : Int32))
  (z : Int32) <- [($fundef_12 : [List (Option (Int32))] -> Int32)]((z : Int32))
  decl ($retval_13 : Int32)
  match (p : List (Option (Int32))) with
  | Cons ($p_1 : Option (Int32)) ($p_2 : List (Option (Int32))) =>
    match ($p_2 : List (Option (Int32))) with
    | Cons ($$p_2_5 : Option (Int32)) ($$p_2_6 : List (Option (Int32))) =>
      match ($$p_2_6 : List (Option (Int32))) with
      | Nil =>
        ($retval_13 : Int32) = (y : Int32)
      | Cons ($$$p_2_6_9 : Option (Int32)) ($$$p_2_6_10 : List (Option (Int32))) =>
        match ($$$p_2_6_10 : List (Option (Int32))) with
        | Nil =>
          ($retval_13 : Int32) = (z : Int32)
        | _ =>
          jump ($joinp_7 : Int32)
      join ($joinp_7 : Int32) =>
        match ($$p_2_5 : Option (Int32)) with
        | Some ($$$p_2_5_8 : Int32) =>
          ($retval_13 : Int32) = (y : Int32)
        | _ =>
          jump ($joinp_3 : Int32)
    | _ =>
      jump ($joinp_3 : Int32)
    join ($joinp_3 : Int32) =>
      match ($p_1 : Option (Int32)) with
      | Some ($$p_1_4 : Int32) =>
        ($retval_13 : Int32) = (v : Int32)
      | _ =>
        jump ($joinp_0 : Int32)
  | _ =>
    jump ($joinp_0 : Int32)
  join ($joinp_0 : Int32) =>
    ($retval_13 : Int32) = (z : Int32)
  ret ($retval_13 : Int32)

expr_body:
  decl ($expr_11 : [List (Option (Int32))] -> Int32)
  decl (z : Int32)
  (z : Int32) = (Int32 1)
  decl (y : Int32)
  (y : Int32) = (Int32 2)
  decl (v : Int32)
  (v : Int32) = (Int32 3)
  decl (f : [List (Option (Int32))] -> Int32)
  allocate_closure_env ($fundef_12 : [List (Option (Int32))] -> Int32)
  [($fundef_12 : [List (Option (Int32))] -> Int32)]((v : Int32)) <- (v : Int32)
  [($fundef_12 : [List (Option (Int32))] -> Int32)]((y : Int32)) <- (y : Int32)
  [($fundef_12 : [List (Option (Int32))] -> Int32)]((z : Int32)) <- (z : Int32)
  (f : [List (Option (Int32))] -> Int32) = [($fundef_12 : [List (Option (Int32))] -> Int32)]
  ($expr_11 : [List (Option (Int32))] -> Int32) = (f : [List (Option (Int32))] -> Int32)
  ret ($expr_11 : [List (Option (Int32))] -> Int32)

codegen/expr/pm7.scilexp:5:3: error: GenLlvm: internal error: cannot resolve $retval_13.
