Closure converted AST:
fundef ($fundef_2 : [Option (Option (Int32))] -> Int32) ((o : Option (Option (Int32))) : Option (Option (Int32)))
environment: ((x : Int32) : Int32 , (y : Int32) : Int32)
body:
  (x : Int32) <- [($fundef_2 : [Option (Option (Int32))] -> Int32)]((x : Int32))
  (y : Int32) <- [($fundef_2 : [Option (Option (Int32))] -> Int32)]((y : Int32))
  decl ($retval_3 : Int32)
  match (o : Option (Option (Int32))) with
  | None =>
    ($retval_3 : Int32) = (x : Int32)
  | Some ($o_0 : Option (Int32)) =>
    match ($o_0 : Option (Int32)) with
    | None =>
      ($retval_3 : Int32) = (y : Int32)
    | Some (z : Int32) =>
      ($retval_3 : Int32) = (z : Int32)
  ret ($retval_3 : Int32)

expr_body:
  decl ($expr_1 : [Option (Option (Int32))] -> Int32)
  decl (x : Int32)
  (x : Int32) = (Int32 42)
  decl (y : Int32)
  (y : Int32) = (Int32 41)
  decl (f : [Option (Option (Int32))] -> Int32)
  allocate_closure_env ($fundef_2 : [Option (Option (Int32))] -> Int32)
  [($fundef_2 : [Option (Option (Int32))] -> Int32)]((x : Int32)) <- (x : Int32)
  [($fundef_2 : [Option (Option (Int32))] -> Int32)]((y : Int32)) <- (y : Int32)
  (f : [Option (Option (Int32))] -> Int32) = [($fundef_2 : [Option (Option (Int32))] -> Int32)]
  ($expr_1 : [Option (Option (Int32))] -> Int32) = (f : [Option (Option (Int32))] -> Int32)
  ret ($expr_1 : [Option (Option (Int32))] -> Int32)

Specialized types:
ADTs:
Option:
  Int32
  Option (Int32)
Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_4" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, void* }
%"$TyDescrTy_ADTTyp_26" = type { { i8*, i32 }, i32, i32, %"$TyDescrTy_ADTTyp_Specl_25"** }
%"$TyDescrTy_ADTTyp_Specl_25" = type { i32, %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_27"**, %"$TyDescrTy_ADTTyp_26"* }
%"$TyDescrTy_ADTTyp_Constr_27" = type { { i8*, i32 }, i32, %_TyDescrTy_Typ** }
%TyDescrString = type { i8*, i32 }
%_Int32 = type { i32 }
%"$$fundef_2_env_48" = type { %_Int32, %_Int32 }
%"Option_Option_(Int32)" = type { i8, %"Some_Option_(Int32)"*, %"None_Option_(Int32)"* }
%"Some_Option_(Int32)" = type <{ i8, %Option_Int32* }>
%Option_Int32 = type { i8, %Some_Int32*, %None_Int32* }
%Some_Int32 = type <{ i8, %_Int32 }>
%None_Int32 = type <{ i8 }>
%"None_Option_(Int32)" = type <{ i8 }>

@"$TyDescr_Int32_Prim_5" = global %"$TyDescrTy_PrimTyp_4" zeroinitializer
@"$TyDescr_Int32_6" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int32_Prim_5" }
@"$TyDescr_Uint32_Prim_7" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 0 }
@"$TyDescr_Uint32_8" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint32_Prim_7" }
@"$TyDescr_Int64_Prim_9" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 1 }
@"$TyDescr_Int64_10" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int64_Prim_9" }
@"$TyDescr_Uint64_Prim_11" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 1 }
@"$TyDescr_Uint64_12" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint64_Prim_11" }
@"$TyDescr_Int128_Prim_13" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 2 }
@"$TyDescr_Int128_14" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int128_Prim_13" }
@"$TyDescr_Uint128_Prim_15" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 2 }
@"$TyDescr_Uint128_16" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint128_Prim_15" }
@"$TyDescr_Int256_Prim_17" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 3 }
@"$TyDescr_Int256_18" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int256_Prim_17" }
@"$TyDescr_Uint256_Prim_19" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 3 }
@"$TyDescr_Uint256_20" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint256_Prim_19" }
@"$TyDescr_String_Prim_21" = global %"$TyDescrTy_PrimTyp_4" { i32 2, i32 0 }
@"$TyDescr_String_22" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_String_Prim_21" }
@"$TyDescr_Bystr_Prim_23" = global %"$TyDescrTy_PrimTyp_4" { i32 7, i32 0 }
@"$TyDescr_Bystr_24" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bystr_Prim_23" }
@"$TyDescr_ADT_Option_Int32_28" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, %"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Option_Int32_ADTTyp_Specl_38" }
@"$TyDescr_ADT_Option_Option_(Int32)_29" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, %"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_45" }
@"$TyDescr_Option_ADTTyp_31" = unnamed_addr constant %"$TyDescrTy_ADTTyp_26" { %TyDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$TyDescr_ADT_Option_47", i32 0, i32 0), i32 6 }, i32 2, i32 2, %"$TyDescrTy_ADTTyp_Specl_25"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Specl_25"*], [2 x %"$TyDescrTy_ADTTyp_Specl_25"*]* @"$TyDescr_Option_ADTTyp_m_specls_46", i32 0, i32 0) }
@"$TyDescr_Option_Some_Int32_Constr_m_args_32" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_6"]
@"$TyDescr_ADT_Some_33" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_None_Int32_Constr_m_args_34" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_35" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_36" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_27"*] [%"$TyDescrTy_ADTTyp_Constr_27"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_33", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Int32_Constr_m_args_32", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_27"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_35", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Int32_Constr_m_args_34", i32 0, i32 0) }]
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_37" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_6"]
@"$TyDescr_Option_Int32_ADTTyp_Specl_38" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_25" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_37", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_27"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_27"*], [2 x %"$TyDescrTy_ADTTyp_Constr_27"*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_36", i32 0, i32 0), %"$TyDescrTy_ADTTyp_26"* @"$TyDescr_Option_ADTTyp_31" }
@"$TyDescr_Option_Some_Option_(Int32)_Constr_m_args_39" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_28"]
@"$TyDescr_ADT_Some_40" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_None_Option_(Int32)_Constr_m_args_41" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_42" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_constrs_43" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_27"*] [%"$TyDescrTy_ADTTyp_Constr_27"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_40", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Option_(Int32)_Constr_m_args_39", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_27"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_42", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Option_(Int32)_Constr_m_args_41", i32 0, i32 0) }]
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_TArgs_44" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_28"]
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_45" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_25" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_TArgs_44", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_27"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_27"*], [2 x %"$TyDescrTy_ADTTyp_Constr_27"*]* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_constrs_43", i32 0, i32 0), %"$TyDescrTy_ADTTyp_26"* @"$TyDescr_Option_ADTTyp_31" }
@"$TyDescr_Option_ADTTyp_m_specls_46" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Specl_25"*] [%"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Option_Int32_ADTTyp_Specl_38", %"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_45"]
@"$TyDescr_ADT_Option_47" = unnamed_addr constant [6 x i8] c"Option"

define %_Int32 @"$fundef_2"(%"$$fundef_2_env_48"*, %"Option_Option_(Int32)"*) {
entry:
  %"$$fundef_2_env_x_49" = getelementptr inbounds %"$$fundef_2_env_48", %"$$fundef_2_env_48"* %0, i32 0, i32 0
  %"$x_envload_50" = load %_Int32, %_Int32* %"$$fundef_2_env_x_49"
  %x = alloca %_Int32
  store %_Int32 %"$x_envload_50", %_Int32* %x
  %"$$fundef_2_env_y_51" = getelementptr inbounds %"$$fundef_2_env_48", %"$$fundef_2_env_48"* %0, i32 0, i32 1
  %"$y_envload_52" = load %_Int32, %_Int32* %"$$fundef_2_env_y_51"
  %y = alloca %_Int32
  store %_Int32 %"$y_envload_52", %_Int32* %y
  %"$retval_3" = alloca %_Int32
  %"$o_tag_54" = getelementptr inbounds %"Option_Option_(Int32)", %"Option_Option_(Int32)"* %1, i32 0, i32 0
  %"$o_tag_55" = load i8, i8* %"$o_tag_54"
  switch i8 %"$o_tag_55", label %"$empty_default_56" [
    i8 1, label %"$None_57"
    i8 0, label %"$Some_60"
  ]

"$None_57":                                       ; preds = %entry
  %"$o_58" = bitcast %"Option_Option_(Int32)"* %1 to %"None_Option_(Int32)"*
  %"$x_59" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_59", %_Int32* %"$retval_3"
  br label %"$matchsucc_53"

"$Some_60":                                       ; preds = %entry
  %"$o_61" = bitcast %"Option_Option_(Int32)"* %1 to %"Some_Option_(Int32)"*
  %"$$o_0_gep_62" = getelementptr inbounds %"Some_Option_(Int32)", %"Some_Option_(Int32)"* %"$o_61", i32 0, i32 1
  %"$$o_0_load_63" = load %Option_Int32*, %Option_Int32** %"$$o_0_gep_62"
  %"$o_0" = alloca %Option_Int32*
  store %Option_Int32* %"$$o_0_load_63", %Option_Int32** %"$o_0"
  %"$$o_0_65" = load %Option_Int32*, %Option_Int32** %"$o_0"
  %"$$o_0_tag_66" = getelementptr inbounds %Option_Int32, %Option_Int32* %"$$o_0_65", i32 0, i32 0
  %"$$o_0_tag_67" = load i8, i8* %"$$o_0_tag_66"
  switch i8 %"$$o_0_tag_67", label %"$empty_default_68" [
    i8 1, label %"$None_69"
    i8 0, label %"$Some_72"
  ]

"$None_69":                                       ; preds = %"$Some_60"
  %"$$o_0_70" = bitcast %Option_Int32* %"$$o_0_65" to %None_Int32*
  %"$y_71" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_71", %_Int32* %"$retval_3"
  br label %"$matchsucc_64"

"$Some_72":                                       ; preds = %"$Some_60"
  %"$$o_0_73" = bitcast %Option_Int32* %"$$o_0_65" to %Some_Int32*
  %"$z_gep_74" = getelementptr inbounds %Some_Int32, %Some_Int32* %"$$o_0_73", i32 0, i32 1
  %"$z_load_75" = load %_Int32, %_Int32* %"$z_gep_74"
  %z = alloca %_Int32
  store %_Int32 %"$z_load_75", %_Int32* %z
  %"$z_76" = load %_Int32, %_Int32* %z
  store %_Int32 %"$z_76", %_Int32* %"$retval_3"
  br label %"$matchsucc_64"

"$empty_default_68":                              ; preds = %"$Some_60"
  br label %"$matchsucc_64"

"$matchsucc_64":                                  ; preds = %"$Some_72", %"$None_69", %"$empty_default_68"
  br label %"$matchsucc_53"

"$empty_default_56":                              ; preds = %entry
  br label %"$matchsucc_53"

"$matchsucc_53":                                  ; preds = %"$matchsucc_64", %"$None_57", %"$empty_default_56"
  %"$$retval_3_77" = load %_Int32, %_Int32* %"$retval_3"
  ret %_Int32 %"$$retval_3_77"
}

define { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } @"$scilla_expr_78"(void*) {
entry:
  %"$expr_1" = alloca { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }
  %x = alloca %_Int32
  store %_Int32 { i32 42 }, %_Int32* %x
  %y = alloca %_Int32
  store %_Int32 { i32 41 }, %_Int32* %y
  %f = alloca { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %"$$fundef_2_envp_79" = bitcast i8* %malloccall to %"$$fundef_2_env_48"*
  %"$$fundef_2_env_voidp_81" = bitcast %"$$fundef_2_env_48"* %"$$fundef_2_envp_79" to void*
  %"$$fundef_2_cloval_82" = insertvalue { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } { %_Int32 (void*, %"Option_Option_(Int32)"*)* bitcast (%_Int32 (%"$$fundef_2_env_48"*, %"Option_Option_(Int32)"*)* @"$fundef_2" to %_Int32 (void*, %"Option_Option_(Int32)"*)*), void* undef }, void* %"$$fundef_2_env_voidp_81", 1
  %"$$fundef_2_envp_83" = extractvalue { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } %"$$fundef_2_cloval_82", 1
  %"$$fundef_2_envp_84" = bitcast void* %"$$fundef_2_envp_83" to %"$$fundef_2_env_48"*
  %"$$fundef_2_env_x_85" = getelementptr inbounds %"$$fundef_2_env_48", %"$$fundef_2_env_48"* %"$$fundef_2_envp_84", i32 0, i32 0
  %"$x_86" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_86", %_Int32* %"$$fundef_2_env_x_85"
  %"$$fundef_2_envp_87" = extractvalue { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } %"$$fundef_2_cloval_82", 1
  %"$$fundef_2_envp_88" = bitcast void* %"$$fundef_2_envp_87" to %"$$fundef_2_env_48"*
  %"$$fundef_2_env_y_89" = getelementptr inbounds %"$$fundef_2_env_48", %"$$fundef_2_env_48"* %"$$fundef_2_envp_88", i32 0, i32 1
  %"$y_90" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_90", %_Int32* %"$$fundef_2_env_y_89"
  store { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } %"$$fundef_2_cloval_82", { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }* %f
  %"$f_91" = load { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }, { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }* %f
  store { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } %"$f_91", { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }* %"$expr_1"
  %"$$expr_1_92" = load { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }, { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* }* %"$expr_1"
  ret { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } %"$$expr_1_92"
}

declare noalias i8* @malloc(i32)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, void*)

define void @scilla_main() {
entry:
  %"$cloval_93" = call { %_Int32 (void*, %"Option_Option_(Int32)"*)*, void* } @"$scilla_expr_78"(void* null)
  ret void
}

