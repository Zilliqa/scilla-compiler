Closure converted AST:
fundef ($fundef_8 : List (Option (Int32)) -> Int32) ((p : List (Option (Int32))) : List (Option (Int32)))
environment: ((v : Int32) : Int32 , (y : Int32) : Int32 , (z : Int32) : Int32)
body:
  (v : Int32) <- [$fundef_8]((v : Int32))
  (y : Int32) <- [$fundef_8]((y : Int32))
  (z : Int32) <- [$fundef_8]((z : Int32))
  match (p : List (Option (Int32))) with
  | Cons ($p_1 : Option (Int32)) ($p_2 : List (Option (Int32))) =>
    match ($p_2 : List (Option (Int32))) with
    | Cons ($$p_2_5 : Option (Int32)) ($$p_2_6 : List (Option (Int32))) =>
      match ($$p_2_6 : List (Option (Int32))) with
      | Nil =>
        ($retval_9 : Int32) = (y : Int32)
      | _ =>
        jump ($joinp_3 : Int32)
    | Nil =>
      ($retval_9 : Int32) = (z : Int32)
    join ($joinp_3 : Int32) =>
      match ($p_1 : Option (Int32)) with
      | Some ($$p_1_4 : Int32) =>
        ($retval_9 : Int32) = (v : Int32)
      | _ =>
        jump ($joinp_0 : Int32)
  | _ =>
    jump ($joinp_0 : Int32)
  join ($joinp_0 : Int32) =>
    ($retval_9 : Int32) = (z : Int32)
  ret ($retval_9 : Int32)

expr_body:
  (z : Int32) = (Int32 1)
  (y : Int32) = (Int32 2)
  (v : Int32) = (Int32 3)
  [$fundef_8]((v : Int32)) <- (v : Int32)
  [$fundef_8]((y : Int32)) <- (y : Int32)
  [$fundef_8]((z : Int32)) <- (z : Int32)
  (f : List (Option (Int32)) -> Int32) = [($fundef_8 : List (Option (Int32)) -> Int32)]
  ($expr_7 : List (Option (Int32)) -> Int32) = (f : List (Option (Int32)) -> Int32)
