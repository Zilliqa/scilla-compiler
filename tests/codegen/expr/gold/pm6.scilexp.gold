; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_10" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_40" = type { %TyDescrString, i32, i32, i32, %"$TyDescrTy_ADTTyp_Specl_39"** }
%TyDescrString = type { i8*, i32 }
%"$TyDescrTy_ADTTyp_Specl_39" = type { %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_41"**, %"$TyDescrTy_ADTTyp_40"* }
%"$TyDescrTy_ADTTyp_Constr_41" = type { %TyDescrString, i32, %_TyDescrTy_Typ** }
%Int32 = type { i32 }
%"$$fundef_8_env_69" = type { %Int32, %Int32, %Int32 }
%"TName_List_Option_(Int32)" = type { i8, %"CName_Cons_Option_(Int32)"*, %"CName_Nil_Option_(Int32)"* }
%"CName_Cons_Option_(Int32)" = type <{ i8, %TName_Option_Int32*, %"TName_List_Option_(Int32)"* }>
%TName_Option_Int32 = type { i8, %CName_Some_Int32*, %CName_None_Int32* }
%CName_Some_Int32 = type <{ i8, %Int32 }>
%CName_None_Int32 = type <{ i8 }>
%"CName_Nil_Option_(Int32)" = type <{ i8 }>

@_execptr = global i8* null
@"$TyDescr_Int32_Prim_11" = global %"$TyDescrTy_PrimTyp_10" zeroinitializer
@"$TyDescr_Int32_12" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Int32_Prim_11" to i8*) }
@"$TyDescr_Uint32_Prim_13" = global %"$TyDescrTy_PrimTyp_10" { i32 1, i32 0 }
@"$TyDescr_Uint32_14" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Uint32_Prim_13" to i8*) }
@"$TyDescr_Int64_Prim_15" = global %"$TyDescrTy_PrimTyp_10" { i32 0, i32 1 }
@"$TyDescr_Int64_16" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Int64_Prim_15" to i8*) }
@"$TyDescr_Uint64_Prim_17" = global %"$TyDescrTy_PrimTyp_10" { i32 1, i32 1 }
@"$TyDescr_Uint64_18" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Uint64_Prim_17" to i8*) }
@"$TyDescr_Int128_Prim_19" = global %"$TyDescrTy_PrimTyp_10" { i32 0, i32 2 }
@"$TyDescr_Int128_20" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Int128_Prim_19" to i8*) }
@"$TyDescr_Uint128_Prim_21" = global %"$TyDescrTy_PrimTyp_10" { i32 1, i32 2 }
@"$TyDescr_Uint128_22" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Uint128_Prim_21" to i8*) }
@"$TyDescr_Int256_Prim_23" = global %"$TyDescrTy_PrimTyp_10" { i32 0, i32 3 }
@"$TyDescr_Int256_24" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Int256_Prim_23" to i8*) }
@"$TyDescr_Uint256_Prim_25" = global %"$TyDescrTy_PrimTyp_10" { i32 1, i32 3 }
@"$TyDescr_Uint256_26" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Uint256_Prim_25" to i8*) }
@"$TyDescr_String_Prim_27" = global %"$TyDescrTy_PrimTyp_10" { i32 2, i32 0 }
@"$TyDescr_String_28" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_String_Prim_27" to i8*) }
@"$TyDescr_Bnum_Prim_29" = global %"$TyDescrTy_PrimTyp_10" { i32 3, i32 0 }
@"$TyDescr_Bnum_30" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Bnum_Prim_29" to i8*) }
@"$TyDescr_Message_Prim_31" = global %"$TyDescrTy_PrimTyp_10" { i32 4, i32 0 }
@"$TyDescr_Message_32" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Message_Prim_31" to i8*) }
@"$TyDescr_Event_Prim_33" = global %"$TyDescrTy_PrimTyp_10" { i32 5, i32 0 }
@"$TyDescr_Event_34" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Event_Prim_33" to i8*) }
@"$TyDescr_Exception_Prim_35" = global %"$TyDescrTy_PrimTyp_10" { i32 6, i32 0 }
@"$TyDescr_Exception_36" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Exception_Prim_35" to i8*) }
@"$TyDescr_Bystr_Prim_37" = global %"$TyDescrTy_PrimTyp_10" { i32 7, i32 0 }
@"$TyDescr_Bystr_38" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_10"* @"$TyDescr_Bystr_Prim_37" to i8*) }
@"$TyDescr_ADT_Option_Int32_42" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_39"* @"$TyDescr_Option_Int32_ADTTyp_Specl_54" to i8*) }
@"$TyDescr_ADT_List_Option_(Int32)_43" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_39"* @"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_66" to i8*) }
@"$TyDescr_Option_ADTTyp_45" = unnamed_addr constant %"$TyDescrTy_ADTTyp_40" { %TyDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$TyDescr_ADT_Option_56", i32 0, i32 0), i32 6 }, i32 1, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_39"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_39"*], [1 x %"$TyDescrTy_ADTTyp_Specl_39"*]* @"$TyDescr_Option_ADTTyp_m_specls_55", i32 0, i32 0) }
@"$TyDescr_Option_Some_Int32_Constr_m_args_46" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_12"]
@"$TyDescr_ADT_Some_47" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_Some_Int32_ADTTyp_Constr_48" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_41" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_47", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Int32_Constr_m_args_46", i32 0, i32 0) }
@"$TyDescr_Option_None_Int32_Constr_m_args_49" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_50" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_None_Int32_ADTTyp_Constr_51" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_41" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_50", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Int32_Constr_m_args_49", i32 0, i32 0) }
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_52" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_41"*] [%"$TyDescrTy_ADTTyp_Constr_41"* @"$TyDescr_Option_Some_Int32_ADTTyp_Constr_48", %"$TyDescrTy_ADTTyp_Constr_41"* @"$TyDescr_Option_None_Int32_ADTTyp_Constr_51"]
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_53" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_12"]
@"$TyDescr_Option_Int32_ADTTyp_Specl_54" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_39" { %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_53", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_41"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_41"*], [2 x %"$TyDescrTy_ADTTyp_Constr_41"*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_52", i32 0, i32 0), %"$TyDescrTy_ADTTyp_40"* @"$TyDescr_Option_ADTTyp_45" }
@"$TyDescr_Option_ADTTyp_m_specls_55" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_39"*] [%"$TyDescrTy_ADTTyp_Specl_39"* @"$TyDescr_Option_Int32_ADTTyp_Specl_54"]
@"$TyDescr_ADT_Option_56" = unnamed_addr constant [6 x i8] c"Option"
@"$TyDescr_List_ADTTyp_57" = unnamed_addr constant %"$TyDescrTy_ADTTyp_40" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_List_68", i32 0, i32 0), i32 4 }, i32 1, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_39"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_39"*], [1 x %"$TyDescrTy_ADTTyp_Specl_39"*]* @"$TyDescr_List_ADTTyp_m_specls_67", i32 0, i32 0) }
@"$TyDescr_List_Cons_Option_(Int32)_Constr_m_args_58" = unnamed_addr constant [2 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_42", %_TyDescrTy_Typ* @"$TyDescr_ADT_List_Option_(Int32)_43"]
@"$TyDescr_ADT_Cons_59" = unnamed_addr constant [4 x i8] c"Cons"
@"$TyDescr_List_Cons_Option_(Int32)_ADTTyp_Constr_60" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_41" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Cons_59", i32 0, i32 0), i32 4 }, i32 2, %_TyDescrTy_Typ** getelementptr inbounds ([2 x %_TyDescrTy_Typ*], [2 x %_TyDescrTy_Typ*]* @"$TyDescr_List_Cons_Option_(Int32)_Constr_m_args_58", i32 0, i32 0) }
@"$TyDescr_List_Nil_Option_(Int32)_Constr_m_args_61" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_Nil_62" = unnamed_addr constant [3 x i8] c"Nil"
@"$TyDescr_List_Nil_Option_(Int32)_ADTTyp_Constr_63" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_41" { %TyDescrString { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$TyDescr_ADT_Nil_62", i32 0, i32 0), i32 3 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_List_Nil_Option_(Int32)_Constr_m_args_61", i32 0, i32 0) }
@"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_m_constrs_64" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_41"*] [%"$TyDescrTy_ADTTyp_Constr_41"* @"$TyDescr_List_Cons_Option_(Int32)_ADTTyp_Constr_60", %"$TyDescrTy_ADTTyp_Constr_41"* @"$TyDescr_List_Nil_Option_(Int32)_ADTTyp_Constr_63"]
@"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_m_TArgs_65" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_42"]
@"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_66" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_39" { %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_m_TArgs_65", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_41"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_41"*], [2 x %"$TyDescrTy_ADTTyp_Constr_41"*]* @"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_m_constrs_64", i32 0, i32 0), %"$TyDescrTy_ADTTyp_40"* @"$TyDescr_List_ADTTyp_57" }
@"$TyDescr_List_ADTTyp_m_specls_67" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_39"*] [%"$TyDescrTy_ADTTyp_Specl_39"* @"$TyDescr_List_Option_(Int32)_ADTTyp_Specl_66"]
@"$TyDescr_ADT_List_68" = unnamed_addr constant [4 x i8] c"List"

define internal %Int32 @"$fundef_8"(%"$$fundef_8_env_69"* %0, %"TName_List_Option_(Int32)"* %1) {
entry:
  %"$$fundef_8_env_v_70" = getelementptr inbounds %"$$fundef_8_env_69", %"$$fundef_8_env_69"* %0, i32 0, i32 0
  %"$v_envload_71" = load %Int32, %Int32* %"$$fundef_8_env_v_70"
  %v = alloca %Int32
  store %Int32 %"$v_envload_71", %Int32* %v
  %"$$fundef_8_env_y_72" = getelementptr inbounds %"$$fundef_8_env_69", %"$$fundef_8_env_69"* %0, i32 0, i32 1
  %"$y_envload_73" = load %Int32, %Int32* %"$$fundef_8_env_y_72"
  %y = alloca %Int32
  store %Int32 %"$y_envload_73", %Int32* %y
  %"$$fundef_8_env_z_74" = getelementptr inbounds %"$$fundef_8_env_69", %"$$fundef_8_env_69"* %0, i32 0, i32 2
  %"$z_envload_75" = load %Int32, %Int32* %"$$fundef_8_env_z_74"
  %z = alloca %Int32
  store %Int32 %"$z_envload_75", %Int32* %z
  %"$retval_9" = alloca %Int32
  %"$p_tag_78" = getelementptr inbounds %"TName_List_Option_(Int32)", %"TName_List_Option_(Int32)"* %1, i32 0, i32 0
  %"$p_tag_79" = load i8, i8* %"$p_tag_78"
  switch i8 %"$p_tag_79", label %"$default_80" [
    i8 0, label %"$Cons_81"
  ]

"$Cons_81":                                       ; preds = %entry
  %"$p_82" = bitcast %"TName_List_Option_(Int32)"* %1 to %"CName_Cons_Option_(Int32)"*
  %"$$p_1_gep_83" = getelementptr inbounds %"CName_Cons_Option_(Int32)", %"CName_Cons_Option_(Int32)"* %"$p_82", i32 0, i32 1
  %"$$p_1_load_84" = load %TName_Option_Int32*, %TName_Option_Int32** %"$$p_1_gep_83"
  %"$p_1" = alloca %TName_Option_Int32*
  store %TName_Option_Int32* %"$$p_1_load_84", %TName_Option_Int32** %"$p_1"
  %"$$p_2_gep_85" = getelementptr inbounds %"CName_Cons_Option_(Int32)", %"CName_Cons_Option_(Int32)"* %"$p_82", i32 0, i32 2
  %"$$p_2_load_86" = load %"TName_List_Option_(Int32)"*, %"TName_List_Option_(Int32)"** %"$$p_2_gep_85"
  %"$p_2" = alloca %"TName_List_Option_(Int32)"*
  store %"TName_List_Option_(Int32)"* %"$$p_2_load_86", %"TName_List_Option_(Int32)"** %"$p_2"
  %"$$p_2_98" = load %"TName_List_Option_(Int32)"*, %"TName_List_Option_(Int32)"** %"$p_2"
  %"$$p_2_tag_99" = getelementptr inbounds %"TName_List_Option_(Int32)", %"TName_List_Option_(Int32)"* %"$$p_2_98", i32 0, i32 0
  %"$$p_2_tag_100" = load i8, i8* %"$$p_2_tag_99"
  switch i8 %"$$p_2_tag_100", label %"$empty_default_101" [
    i8 0, label %"$Cons_102"
    i8 1, label %"$Nil_116"
  ]

"$Cons_102":                                      ; preds = %"$Cons_81"
  %"$$p_2_103" = bitcast %"TName_List_Option_(Int32)"* %"$$p_2_98" to %"CName_Cons_Option_(Int32)"*
  %"$$$p_2_5_gep_104" = getelementptr inbounds %"CName_Cons_Option_(Int32)", %"CName_Cons_Option_(Int32)"* %"$$p_2_103", i32 0, i32 1
  %"$$$p_2_5_load_105" = load %TName_Option_Int32*, %TName_Option_Int32** %"$$$p_2_5_gep_104"
  %"$$p_2_5" = alloca %TName_Option_Int32*
  store %TName_Option_Int32* %"$$$p_2_5_load_105", %TName_Option_Int32** %"$$p_2_5"
  %"$$$p_2_6_gep_106" = getelementptr inbounds %"CName_Cons_Option_(Int32)", %"CName_Cons_Option_(Int32)"* %"$$p_2_103", i32 0, i32 2
  %"$$$p_2_6_load_107" = load %"TName_List_Option_(Int32)"*, %"TName_List_Option_(Int32)"** %"$$$p_2_6_gep_106"
  %"$$p_2_6" = alloca %"TName_List_Option_(Int32)"*
  store %"TName_List_Option_(Int32)"* %"$$$p_2_6_load_107", %"TName_List_Option_(Int32)"** %"$$p_2_6"
  %"$$$p_2_6_109" = load %"TName_List_Option_(Int32)"*, %"TName_List_Option_(Int32)"** %"$$p_2_6"
  %"$$$p_2_6_tag_110" = getelementptr inbounds %"TName_List_Option_(Int32)", %"TName_List_Option_(Int32)"* %"$$$p_2_6_109", i32 0, i32 0
  %"$$$p_2_6_tag_111" = load i8, i8* %"$$$p_2_6_tag_110"
  switch i8 %"$$$p_2_6_tag_111", label %"$default_112" [
    i8 1, label %"$Nil_113"
  ]

"$Nil_113":                                       ; preds = %"$Cons_102"
  %"$$$p_2_6_114" = bitcast %"TName_List_Option_(Int32)"* %"$$$p_2_6_109" to %"CName_Nil_Option_(Int32)"*
  %"$y_115" = load %Int32, %Int32* %y
  store %Int32 %"$y_115", %Int32* %"$retval_9"
  br label %"$matchsucc_108"

"$default_112":                                   ; preds = %"$Cons_102"
  br label %"$joinp_3"

"$matchsucc_108":                                 ; preds = %"$Nil_113"
  br label %"$matchsucc_87"

"$Nil_116":                                       ; preds = %"$Cons_81"
  %"$$p_2_117" = bitcast %"TName_List_Option_(Int32)"* %"$$p_2_98" to %"CName_Nil_Option_(Int32)"*
  %"$z_118" = load %Int32, %Int32* %z
  store %Int32 %"$z_118", %Int32* %"$retval_9"
  br label %"$matchsucc_87"

"$empty_default_101":                             ; preds = %"$Cons_81"
  br label %"$matchsucc_87"

"$joinp_3":                                       ; preds = %"$default_112"
  %"$$p_1_89" = load %TName_Option_Int32*, %TName_Option_Int32** %"$p_1"
  %"$$p_1_tag_90" = getelementptr inbounds %TName_Option_Int32, %TName_Option_Int32* %"$$p_1_89", i32 0, i32 0
  %"$$p_1_tag_91" = load i8, i8* %"$$p_1_tag_90"
  switch i8 %"$$p_1_tag_91", label %"$default_92" [
    i8 0, label %"$Some_93"
  ]

"$Some_93":                                       ; preds = %"$joinp_3"
  %"$$p_1_94" = bitcast %TName_Option_Int32* %"$$p_1_89" to %CName_Some_Int32*
  %"$$$p_1_4_gep_95" = getelementptr inbounds %CName_Some_Int32, %CName_Some_Int32* %"$$p_1_94", i32 0, i32 1
  %"$$$p_1_4_load_96" = load %Int32, %Int32* %"$$$p_1_4_gep_95"
  %"$$p_1_4" = alloca %Int32
  store %Int32 %"$$$p_1_4_load_96", %Int32* %"$$p_1_4"
  %"$v_97" = load %Int32, %Int32* %v
  store %Int32 %"$v_97", %Int32* %"$retval_9"
  br label %"$matchsucc_88"

"$default_92":                                    ; preds = %"$joinp_3"
  br label %"$joinp_0"

"$matchsucc_88":                                  ; preds = %"$Some_93"
  br label %"$matchsucc_87"

"$matchsucc_87":                                  ; preds = %"$Nil_116", %"$matchsucc_108", %"$empty_default_101", %"$matchsucc_88"
  br label %"$matchsucc_76"

"$default_80":                                    ; preds = %entry
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_92", %"$default_80"
  %"$z_77" = load %Int32, %Int32* %z
  store %Int32 %"$z_77", %Int32* %"$retval_9"
  br label %"$matchsucc_76"

"$matchsucc_76":                                  ; preds = %"$matchsucc_87", %"$joinp_0"
  %"$$retval_9_119" = load %Int32, %Int32* %"$retval_9"
  ret %Int32 %"$$retval_9_119"
}

define void @_init_libs() {
entry:
  ret void
}

define internal { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* } @"$scilla_expr_120"(i8* %0) {
entry:
  %"$expr_7" = alloca { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }
  %z = alloca %Int32
  store %Int32 { i32 1 }, %Int32* %z
  %y = alloca %Int32
  store %Int32 { i32 2 }, %Int32* %y
  %v = alloca %Int32
  store %Int32 { i32 3 }, %Int32* %v
  %f = alloca { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }
  %"$$fundef_8_envp_121_load" = load i8*, i8** @_execptr
  %"$$fundef_8_envp_121_salloc" = call i8* @_salloc(i8* %"$$fundef_8_envp_121_load", i64 12)
  %"$$fundef_8_envp_121" = bitcast i8* %"$$fundef_8_envp_121_salloc" to %"$$fundef_8_env_69"*
  %"$$fundef_8_env_voidp_123" = bitcast %"$$fundef_8_env_69"* %"$$fundef_8_envp_121" to i8*
  %"$$fundef_8_cloval_124" = insertvalue { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* } { %Int32 (i8*, %"TName_List_Option_(Int32)"*)* bitcast (%Int32 (%"$$fundef_8_env_69"*, %"TName_List_Option_(Int32)"*)* @"$fundef_8" to %Int32 (i8*, %"TName_List_Option_(Int32)"*)*), i8* undef }, i8* %"$$fundef_8_env_voidp_123", 1
  %"$$fundef_8_env_v_125" = getelementptr inbounds %"$$fundef_8_env_69", %"$$fundef_8_env_69"* %"$$fundef_8_envp_121", i32 0, i32 0
  %"$v_126" = load %Int32, %Int32* %v
  store %Int32 %"$v_126", %Int32* %"$$fundef_8_env_v_125"
  %"$$fundef_8_env_y_127" = getelementptr inbounds %"$$fundef_8_env_69", %"$$fundef_8_env_69"* %"$$fundef_8_envp_121", i32 0, i32 1
  %"$y_128" = load %Int32, %Int32* %y
  store %Int32 %"$y_128", %Int32* %"$$fundef_8_env_y_127"
  %"$$fundef_8_env_z_129" = getelementptr inbounds %"$$fundef_8_env_69", %"$$fundef_8_env_69"* %"$$fundef_8_envp_121", i32 0, i32 2
  %"$z_130" = load %Int32, %Int32* %z
  store %Int32 %"$z_130", %Int32* %"$$fundef_8_env_z_129"
  store { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* } %"$$fundef_8_cloval_124", { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }* %f
  %"$f_131" = load { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }, { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }* %f
  store { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* } %"$f_131", { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }* %"$expr_7"
  %"$$expr_7_132" = load { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }, { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* }* %"$expr_7"
  ret { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* } %"$$expr_7_132"
}

declare i8* @_salloc(i8*, i64)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$cloval_133" = call { %Int32 (i8*, %"TName_List_Option_(Int32)"*)*, i8* } @"$scilla_expr_120"(i8* null)
  ret void
}
