Closure converted AST:
fundef ($fundef_2 : [Bool] -> Int32) ((c : Bool) : Bool)
environment: ((x : Int32) : Int32 , (y : Int32) : Int32)
body:
  (x : Int32) <- [($fundef_2 : [Bool] -> Int32)]((x : Int32))
  (y : Int32) <- [($fundef_2 : [Bool] -> Int32)]((y : Int32))
  decl ($retval_3 : Int32)
  match (c : Bool) with
  | True =>
    ($retval_3 : Int32) = (x : Int32)
  | _ =>
    jump ($joinp_0 : Int32)
  join ($joinp_0 : Int32) =>
    ($retval_3 : Int32) = (y : Int32)
  ret ($retval_3 : Int32)

expr_body:
  decl ($expr_1 : [Bool] -> Int32)
  decl (x : Int32)
  (x : Int32) = (Int32 42)
  decl (y : Int32)
  (y : Int32) = (Int32 41)
  decl (f : [Bool] -> Int32)
  allocate_closure_env ($fundef_2 : [Bool] -> Int32)
  [($fundef_2 : [Bool] -> Int32)]((x : Int32)) <- (x : Int32)
  [($fundef_2 : [Bool] -> Int32)]((y : Int32)) <- (y : Int32)
  (f : [Bool] -> Int32) = [($fundef_2 : [Bool] -> Int32)]
  ($expr_1 : [Bool] -> Int32) = (f : [Bool] -> Int32)
  ret ($expr_1 : [Bool] -> Int32)

Specialized types:
ADTs:
Bool:
  
Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_4" = type { i32, i32 }
%"$TyDescrTy_Typ_5" = type { i32, void* }
%"$TyDescrTy_ADTTyp_27" = type { { i8*, i32 }, i32, i32, %"$TyDescrTy_ADTTyp_Specl_26"** }
%"$TyDescrTy_ADTTyp_Specl_26" = type { i32, %"$TyDescrTy_Typ_5"**, %"$TyDescrTy_ADTTyp_Constr_28"**, %"$TyDescrTy_ADTTyp_27"* }
%"$TyDescrTy_ADTTyp_Constr_28" = type { { i8*, i32 }, i32, %"$TyDescrTy_Typ_5"** }
%TyDescrString = type { i8*, i32 }
%Int32 = type { i32 }
%"$$fundef_2_env_41" = type { %Int32, %Int32 }
%Bool = type { i8, %True*, %False* }
%True = type <{ i8 }>
%False = type <{ i8 }>

@"$TyDescr_Int32_Prim_6" = global %"$TyDescrTy_PrimTyp_4" zeroinitializer
@"$TyDescr_Int32_7" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int32_Prim_6" }
@"$TyDescr_Uint32_Prim_8" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 0 }
@"$TyDescr_Uint32_9" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint32_Prim_8" }
@"$TyDescr_Int64_Prim_10" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 1 }
@"$TyDescr_Int64_11" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int64_Prim_10" }
@"$TyDescr_Uint64_Prim_12" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 1 }
@"$TyDescr_Uint64_13" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint64_Prim_12" }
@"$TyDescr_Int128_Prim_14" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 2 }
@"$TyDescr_Int128_15" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int128_Prim_14" }
@"$TyDescr_Uint128_Prim_16" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 2 }
@"$TyDescr_Uint128_17" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint128_Prim_16" }
@"$TyDescr_Int256_Prim_18" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 3 }
@"$TyDescr_Int256_19" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int256_Prim_18" }
@"$TyDescr_Uint256_Prim_20" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 3 }
@"$TyDescr_Uint256_21" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint256_Prim_20" }
@"$TyDescr_String_Prim_22" = global %"$TyDescrTy_PrimTyp_4" { i32 2, i32 0 }
@"$TyDescr_String_23" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_String_Prim_22" }
@"$TyDescr_Bystr_Prim_24" = global %"$TyDescrTy_PrimTyp_4" { i32 7, i32 0 }
@"$TyDescr_Bystr_25" = global %"$TyDescrTy_Typ_5" { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bystr_Prim_24" }
@"$TyDescr_ADT_Bool_29" = unnamed_addr constant %"$TyDescrTy_Typ_5" { i32 1, %"$TyDescrTy_ADTTyp_Specl_26"* @"$TyDescr_Bool_ADTTyp_Specl_38" }
@"$TyDescr_Bool_ADTTyp_31" = unnamed_addr constant %"$TyDescrTy_ADTTyp_27" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Bool_40", i32 0, i32 0), i32 4 }, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_26"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_26"*], [1 x %"$TyDescrTy_ADTTyp_Specl_26"*]* @"$TyDescr_Bool_ADTTyp_m_specls_39", i32 0, i32 0) }
@"$TyDescr_Bool_True_Constr_m_args_32" = unnamed_addr constant [0 x %"$TyDescrTy_Typ_5"*] zeroinitializer
@"$TyDescr_ADT_True_33" = unnamed_addr constant [4 x i8] c"True"
@"$TyDescr_Bool_False_Constr_m_args_34" = unnamed_addr constant [0 x %"$TyDescrTy_Typ_5"*] zeroinitializer
@"$TyDescr_ADT_False_35" = unnamed_addr constant [5 x i8] c"False"
@"$TyDescr_Bool_ADTTyp_Specl_m_constrs_36" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_28"*] [%"$TyDescrTy_ADTTyp_Constr_28"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_True_33", i32 0, i32 0), i32 4 }, i32 0, %"$TyDescrTy_Typ_5"** getelementptr inbounds ([0 x %"$TyDescrTy_Typ_5"*], [0 x %"$TyDescrTy_Typ_5"*]* @"$TyDescr_Bool_True_Constr_m_args_32", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_28"* { %TyDescrString { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"$TyDescr_ADT_False_35", i32 0, i32 0), i32 5 }, i32 0, %"$TyDescrTy_Typ_5"** getelementptr inbounds ([0 x %"$TyDescrTy_Typ_5"*], [0 x %"$TyDescrTy_Typ_5"*]* @"$TyDescr_Bool_False_Constr_m_args_34", i32 0, i32 0) }]
@"$TyDescr_Bool_ADTTyp_Specl_m_TArgs_37" = unnamed_addr constant [0 x %"$TyDescrTy_Typ_5"*] zeroinitializer
@"$TyDescr_Bool_ADTTyp_Specl_38" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_26" { i32 0, %"$TyDescrTy_Typ_5"** getelementptr inbounds ([0 x %"$TyDescrTy_Typ_5"*], [0 x %"$TyDescrTy_Typ_5"*]* @"$TyDescr_Bool_ADTTyp_Specl_m_TArgs_37", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_28"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_28"*], [2 x %"$TyDescrTy_ADTTyp_Constr_28"*]* @"$TyDescr_Bool_ADTTyp_Specl_m_constrs_36", i32 0, i32 0), %"$TyDescrTy_ADTTyp_27"* @"$TyDescr_Bool_ADTTyp_31" }
@"$TyDescr_Bool_ADTTyp_m_specls_39" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_26"*] [%"$TyDescrTy_ADTTyp_Specl_26"* @"$TyDescr_Bool_ADTTyp_Specl_38"]
@"$TyDescr_ADT_Bool_40" = unnamed_addr constant [4 x i8] c"Bool"

define %Int32 @"$fundef_2"(%"$$fundef_2_env_41"*, %Bool*) {
entry:
  %"$$fundef_2_env_x_42" = getelementptr inbounds %"$$fundef_2_env_41", %"$$fundef_2_env_41"* %0, i32 0, i32 0
  %"$x_envload_43" = load %Int32, %Int32* %"$$fundef_2_env_x_42"
  %x = alloca %Int32
  store %Int32 %"$x_envload_43", %Int32* %x
  %"$$fundef_2_env_y_44" = getelementptr inbounds %"$$fundef_2_env_41", %"$$fundef_2_env_41"* %0, i32 0, i32 1
  %"$y_envload_45" = load %Int32, %Int32* %"$$fundef_2_env_y_44"
  %y = alloca %Int32
  store %Int32 %"$y_envload_45", %Int32* %y
  %"$retval_3" = alloca %Int32
  %"$c_tag_48" = getelementptr inbounds %Bool, %Bool* %1, i32 0, i32 0
  %"$c_tag_49" = load i8, i8* %"$c_tag_48"
  switch i8 %"$c_tag_49", label %"$default_50" [
    i8 0, label %"$True_51"
  ]

"$True_51":                                       ; preds = %entry
  %"$c_52" = bitcast %Bool* %1 to %True*
  %"$x_53" = load %Int32, %Int32* %x
  store %Int32 %"$x_53", %Int32* %"$retval_3"
  br label %"$matchsucc_46"

"$default_50":                                    ; preds = %entry
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_50"
  %"$y_47" = load %Int32, %Int32* %y
  store %Int32 %"$y_47", %Int32* %"$retval_3"
  br label %"$matchsucc_46"

"$matchsucc_46":                                  ; preds = %"$True_51", %"$joinp_0"
  %"$$retval_3_54" = load %Int32, %Int32* %"$retval_3"
  ret %Int32 %"$$retval_3_54"
}

define { %Int32 (void*, %Bool*)*, void* } @"$scilla_expr_55"(void*) {
entry:
  %"$expr_1" = alloca { %Int32 (void*, %Bool*)*, void* }
  %x = alloca %Int32
  store %Int32 { i32 42 }, %Int32* %x
  %y = alloca %Int32
  store %Int32 { i32 41 }, %Int32* %y
  %f = alloca { %Int32 (void*, %Bool*)*, void* }
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %"$$fundef_2_envp_56" = bitcast i8* %malloccall to %"$$fundef_2_env_41"*
  %"$$fundef_2_env_voidp_58" = bitcast %"$$fundef_2_env_41"* %"$$fundef_2_envp_56" to void*
  %"$$fundef_2_cloval_59" = insertvalue { %Int32 (void*, %Bool*)*, void* } { %Int32 (void*, %Bool*)* bitcast (%Int32 (%"$$fundef_2_env_41"*, %Bool*)* @"$fundef_2" to %Int32 (void*, %Bool*)*), void* undef }, void* %"$$fundef_2_env_voidp_58", 1
  %"$$fundef_2_envp_60" = extractvalue { %Int32 (void*, %Bool*)*, void* } %"$$fundef_2_cloval_59", 1
  %"$$fundef_2_envp_61" = bitcast void* %"$$fundef_2_envp_60" to %"$$fundef_2_env_41"*
  %"$$fundef_2_env_x_62" = getelementptr inbounds %"$$fundef_2_env_41", %"$$fundef_2_env_41"* %"$$fundef_2_envp_61", i32 0, i32 0
  %"$x_63" = load %Int32, %Int32* %x
  store %Int32 %"$x_63", %Int32* %"$$fundef_2_env_x_62"
  %"$$fundef_2_envp_64" = extractvalue { %Int32 (void*, %Bool*)*, void* } %"$$fundef_2_cloval_59", 1
  %"$$fundef_2_envp_65" = bitcast void* %"$$fundef_2_envp_64" to %"$$fundef_2_env_41"*
  %"$$fundef_2_env_y_66" = getelementptr inbounds %"$$fundef_2_env_41", %"$$fundef_2_env_41"* %"$$fundef_2_envp_65", i32 0, i32 1
  %"$y_67" = load %Int32, %Int32* %y
  store %Int32 %"$y_67", %Int32* %"$$fundef_2_env_y_66"
  store { %Int32 (void*, %Bool*)*, void* } %"$$fundef_2_cloval_59", { %Int32 (void*, %Bool*)*, void* }* %f
  %"$f_68" = load { %Int32 (void*, %Bool*)*, void* }, { %Int32 (void*, %Bool*)*, void* }* %f
  store { %Int32 (void*, %Bool*)*, void* } %"$f_68", { %Int32 (void*, %Bool*)*, void* }* %"$expr_1"
  %"$$expr_1_69" = load { %Int32 (void*, %Bool*)*, void* }, { %Int32 (void*, %Bool*)*, void* }* %"$expr_1"
  ret { %Int32 (void*, %Bool*)*, void* } %"$$expr_1_69"
}

declare noalias i8* @malloc(i32)

