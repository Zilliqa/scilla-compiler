Closure converted AST:
fundef ($fundef_2 : [Bool] -> Int32) ((c : Bool) : Bool)
environment: ((x : Int32) : Int32 , (y : Int32) : Int32)
body:
  (x : Int32) <- [($fundef_2 : [Bool] -> Int32)]((x : Int32))
  (y : Int32) <- [($fundef_2 : [Bool] -> Int32)]((y : Int32))
  decl ($retval_3 : Int32)
  match (c : Bool) with
  | True =>
    ($retval_3 : Int32) = (x : Int32)
  | _ =>
    jump ($joinp_0 : Int32)
  join ($joinp_0 : Int32) =>
    ($retval_3 : Int32) = (y : Int32)
  ret ($retval_3 : Int32)

expr_body:
  decl ($expr_1 : [Bool] -> Int32)
  decl (x : Int32)
  (x : Int32) = (Int32 42)
  decl (y : Int32)
  (y : Int32) = (Int32 41)
  decl (f : [Bool] -> Int32)
  allocate_closure_env ($fundef_2 : [Bool] -> Int32)
  [($fundef_2 : [Bool] -> Int32)]((x : Int32)) <- (x : Int32)
  [($fundef_2 : [Bool] -> Int32)]((y : Int32)) <- (y : Int32)
  (f : [Bool] -> Int32) = [($fundef_2 : [Bool] -> Int32)]
  ($expr_1 : [Bool] -> Int32) = (f : [Bool] -> Int32)
  ret ($expr_1 : [Bool] -> Int32)

Specialized types:
ADTs:
Bool:
  
Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_4" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_26" = type { { i8*, i32 }, i32, i32, %"$TyDescrTy_ADTTyp_Specl_25"** }
%"$TyDescrTy_ADTTyp_Specl_25" = type { i32, %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_27"**, %"$TyDescrTy_ADTTyp_26"* }
%"$TyDescrTy_ADTTyp_Constr_27" = type { { i8*, i32 }, i32, %_TyDescrTy_Typ** }
%TyDescrString = type { i8*, i32 }
%_Int32 = type { i32 }
%"$$fundef_2_env_40" = type { %_Int32, %_Int32 }
%Bool = type { i8, %True*, %False* }
%True = type <{ i8 }>
%False = type <{ i8 }>

@"$TyDescr_Int32_Prim_5" = global %"$TyDescrTy_PrimTyp_4" zeroinitializer
@"$TyDescr_Int32_6" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int32_Prim_5" }
@"$TyDescr_Uint32_Prim_7" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 0 }
@"$TyDescr_Uint32_8" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint32_Prim_7" }
@"$TyDescr_Int64_Prim_9" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 1 }
@"$TyDescr_Int64_10" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int64_Prim_9" }
@"$TyDescr_Uint64_Prim_11" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 1 }
@"$TyDescr_Uint64_12" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint64_Prim_11" }
@"$TyDescr_Int128_Prim_13" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 2 }
@"$TyDescr_Int128_14" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int128_Prim_13" }
@"$TyDescr_Uint128_Prim_15" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 2 }
@"$TyDescr_Uint128_16" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint128_Prim_15" }
@"$TyDescr_Int256_Prim_17" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 3 }
@"$TyDescr_Int256_18" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int256_Prim_17" }
@"$TyDescr_Uint256_Prim_19" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 3 }
@"$TyDescr_Uint256_20" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint256_Prim_19" }
@"$TyDescr_String_Prim_21" = global %"$TyDescrTy_PrimTyp_4" { i32 2, i32 0 }
@"$TyDescr_String_22" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_String_Prim_21" }
@"$TyDescr_Bystr_Prim_23" = global %"$TyDescrTy_PrimTyp_4" { i32 7, i32 0 }
@"$TyDescr_Bystr_24" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bystr_Prim_23" }
@"$TyDescr_ADT_Bool_28" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, %"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Bool_ADTTyp_Specl_37" }
@"$TyDescr_Bool_ADTTyp_30" = unnamed_addr constant %"$TyDescrTy_ADTTyp_26" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Bool_39", i32 0, i32 0), i32 4 }, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_25"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_25"*], [1 x %"$TyDescrTy_ADTTyp_Specl_25"*]* @"$TyDescr_Bool_ADTTyp_m_specls_38", i32 0, i32 0) }
@"$TyDescr_Bool_True_Constr_m_args_31" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_True_32" = unnamed_addr constant [4 x i8] c"True"
@"$TyDescr_Bool_False_Constr_m_args_33" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_False_34" = unnamed_addr constant [5 x i8] c"False"
@"$TyDescr_Bool_ADTTyp_Specl_m_constrs_35" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_27"*] [%"$TyDescrTy_ADTTyp_Constr_27"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_True_32", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Bool_True_Constr_m_args_31", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_27"* { %TyDescrString { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"$TyDescr_ADT_False_34", i32 0, i32 0), i32 5 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Bool_False_Constr_m_args_33", i32 0, i32 0) }]
@"$TyDescr_Bool_ADTTyp_Specl_m_TArgs_36" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_Bool_ADTTyp_Specl_37" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_25" { i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Bool_ADTTyp_Specl_m_TArgs_36", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_27"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_27"*], [2 x %"$TyDescrTy_ADTTyp_Constr_27"*]* @"$TyDescr_Bool_ADTTyp_Specl_m_constrs_35", i32 0, i32 0), %"$TyDescrTy_ADTTyp_26"* @"$TyDescr_Bool_ADTTyp_30" }
@"$TyDescr_Bool_ADTTyp_m_specls_38" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_25"*] [%"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Bool_ADTTyp_Specl_37"]
@"$TyDescr_ADT_Bool_39" = unnamed_addr constant [4 x i8] c"Bool"

define %_Int32 @"$fundef_2"(%"$$fundef_2_env_40"*, %Bool*) {
entry:
  %"$$fundef_2_env_x_41" = getelementptr inbounds %"$$fundef_2_env_40", %"$$fundef_2_env_40"* %0, i32 0, i32 0
  %"$x_envload_42" = load %_Int32, %_Int32* %"$$fundef_2_env_x_41"
  %x = alloca %_Int32
  store %_Int32 %"$x_envload_42", %_Int32* %x
  %"$$fundef_2_env_y_43" = getelementptr inbounds %"$$fundef_2_env_40", %"$$fundef_2_env_40"* %0, i32 0, i32 1
  %"$y_envload_44" = load %_Int32, %_Int32* %"$$fundef_2_env_y_43"
  %y = alloca %_Int32
  store %_Int32 %"$y_envload_44", %_Int32* %y
  %"$retval_3" = alloca %_Int32
  %"$c_tag_47" = getelementptr inbounds %Bool, %Bool* %1, i32 0, i32 0
  %"$c_tag_48" = load i8, i8* %"$c_tag_47"
  switch i8 %"$c_tag_48", label %"$default_49" [
    i8 0, label %"$True_50"
  ]

"$True_50":                                       ; preds = %entry
  %"$c_51" = bitcast %Bool* %1 to %True*
  %"$x_52" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_52", %_Int32* %"$retval_3"
  br label %"$matchsucc_45"

"$default_49":                                    ; preds = %entry
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_49"
  %"$y_46" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_46", %_Int32* %"$retval_3"
  br label %"$matchsucc_45"

"$matchsucc_45":                                  ; preds = %"$True_50", %"$joinp_0"
  %"$$retval_3_53" = load %_Int32, %_Int32* %"$retval_3"
  ret %_Int32 %"$$retval_3_53"
}

define { %_Int32 (i8*, %Bool*)*, i8* } @"$scilla_expr_54"(i8*) {
entry:
  %"$expr_1" = alloca { %_Int32 (i8*, %Bool*)*, i8* }
  %x = alloca %_Int32
  store %_Int32 { i32 42 }, %_Int32* %x
  %y = alloca %_Int32
  store %_Int32 { i32 41 }, %_Int32* %y
  %f = alloca { %_Int32 (i8*, %Bool*)*, i8* }
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %"$$fundef_2_envp_55" = bitcast i8* %malloccall to %"$$fundef_2_env_40"*
  %"$$fundef_2_env_voidp_57" = bitcast %"$$fundef_2_env_40"* %"$$fundef_2_envp_55" to i8*
  %"$$fundef_2_cloval_58" = insertvalue { %_Int32 (i8*, %Bool*)*, i8* } { %_Int32 (i8*, %Bool*)* bitcast (%_Int32 (%"$$fundef_2_env_40"*, %Bool*)* @"$fundef_2" to %_Int32 (i8*, %Bool*)*), i8* undef }, i8* %"$$fundef_2_env_voidp_57", 1
  %"$$fundef_2_envp_59" = extractvalue { %_Int32 (i8*, %Bool*)*, i8* } %"$$fundef_2_cloval_58", 1
  %"$$fundef_2_envp_60" = bitcast i8* %"$$fundef_2_envp_59" to %"$$fundef_2_env_40"*
  %"$$fundef_2_env_x_61" = getelementptr inbounds %"$$fundef_2_env_40", %"$$fundef_2_env_40"* %"$$fundef_2_envp_60", i32 0, i32 0
  %"$x_62" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_62", %_Int32* %"$$fundef_2_env_x_61"
  %"$$fundef_2_envp_63" = extractvalue { %_Int32 (i8*, %Bool*)*, i8* } %"$$fundef_2_cloval_58", 1
  %"$$fundef_2_envp_64" = bitcast i8* %"$$fundef_2_envp_63" to %"$$fundef_2_env_40"*
  %"$$fundef_2_env_y_65" = getelementptr inbounds %"$$fundef_2_env_40", %"$$fundef_2_env_40"* %"$$fundef_2_envp_64", i32 0, i32 1
  %"$y_66" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_66", %_Int32* %"$$fundef_2_env_y_65"
  store { %_Int32 (i8*, %Bool*)*, i8* } %"$$fundef_2_cloval_58", { %_Int32 (i8*, %Bool*)*, i8* }* %f
  %"$f_67" = load { %_Int32 (i8*, %Bool*)*, i8* }, { %_Int32 (i8*, %Bool*)*, i8* }* %f
  store { %_Int32 (i8*, %Bool*)*, i8* } %"$f_67", { %_Int32 (i8*, %Bool*)*, i8* }* %"$expr_1"
  %"$$expr_1_68" = load { %_Int32 (i8*, %Bool*)*, i8* }, { %_Int32 (i8*, %Bool*)*, i8* }* %"$expr_1"
  ret { %_Int32 (i8*, %Bool*)*, i8* } %"$$expr_1_68"
}

declare noalias i8* @malloc(i32)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$cloval_69" = call { %_Int32 (i8*, %Bool*)*, i8* } @"$scilla_expr_54"(i8* null)
  ret void
}

