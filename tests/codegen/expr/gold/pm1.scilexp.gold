; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_4" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_26" = type { %TyDescrString, i32, i32, %"$TyDescrTy_ADTTyp_Specl_25"** }
%TyDescrString = type { i8*, i32 }
%"$TyDescrTy_ADTTyp_Specl_25" = type { i32, %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_27"**, %"$TyDescrTy_ADTTyp_26"* }
%"$TyDescrTy_ADTTyp_Constr_27" = type { %TyDescrString, i32, %_TyDescrTy_Typ** }
%Int32 = type { i32 }
%"$$fundef_2_env_42" = type { %Int32, %Int32 }
%Bool = type { i8, %True*, %False* }
%True = type <{ i8 }>
%False = type <{ i8 }>

@"$TyDescr_Int32_Prim_5" = global %"$TyDescrTy_PrimTyp_4" zeroinitializer
@"$TyDescr_Int32_6" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int32_Prim_5" to i8*) }
@"$TyDescr_Uint32_Prim_7" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 0 }
@"$TyDescr_Uint32_8" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint32_Prim_7" to i8*) }
@"$TyDescr_Int64_Prim_9" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 1 }
@"$TyDescr_Int64_10" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int64_Prim_9" to i8*) }
@"$TyDescr_Uint64_Prim_11" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 1 }
@"$TyDescr_Uint64_12" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint64_Prim_11" to i8*) }
@"$TyDescr_Int128_Prim_13" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 2 }
@"$TyDescr_Int128_14" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int128_Prim_13" to i8*) }
@"$TyDescr_Uint128_Prim_15" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 2 }
@"$TyDescr_Uint128_16" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint128_Prim_15" to i8*) }
@"$TyDescr_Int256_Prim_17" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 3 }
@"$TyDescr_Int256_18" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int256_Prim_17" to i8*) }
@"$TyDescr_Uint256_Prim_19" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 3 }
@"$TyDescr_Uint256_20" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint256_Prim_19" to i8*) }
@"$TyDescr_String_Prim_21" = global %"$TyDescrTy_PrimTyp_4" { i32 2, i32 0 }
@"$TyDescr_String_22" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_String_Prim_21" to i8*) }
@"$TyDescr_Bystr_Prim_23" = global %"$TyDescrTy_PrimTyp_4" { i32 7, i32 0 }
@"$TyDescr_Bystr_24" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bystr_Prim_23" to i8*) }
@"$TyDescr_ADT_Bool_28" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Bool_ADTTyp_Specl_39" to i8*) }
@"$TyDescr_Bool_ADTTyp_30" = unnamed_addr constant %"$TyDescrTy_ADTTyp_26" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Bool_41", i32 0, i32 0), i32 4 }, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_25"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_25"*], [1 x %"$TyDescrTy_ADTTyp_Specl_25"*]* @"$TyDescr_Bool_ADTTyp_m_specls_40", i32 0, i32 0) }
@"$TyDescr_Bool_True_Constr_m_args_31" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_True_32" = unnamed_addr constant [4 x i8] c"True"
@"$TyDescr_Bool_True_ADTTyp_Constr_33" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_27" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_True_32", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Bool_True_Constr_m_args_31", i32 0, i32 0) }
@"$TyDescr_Bool_False_Constr_m_args_34" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_False_35" = unnamed_addr constant [5 x i8] c"False"
@"$TyDescr_Bool_False_ADTTyp_Constr_36" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_27" { %TyDescrString { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @"$TyDescr_ADT_False_35", i32 0, i32 0), i32 5 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Bool_False_Constr_m_args_34", i32 0, i32 0) }
@"$TyDescr_Bool_ADTTyp_Specl_m_constrs_37" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_27"*] [%"$TyDescrTy_ADTTyp_Constr_27"* @"$TyDescr_Bool_True_ADTTyp_Constr_33", %"$TyDescrTy_ADTTyp_Constr_27"* @"$TyDescr_Bool_False_ADTTyp_Constr_36"]
@"$TyDescr_Bool_ADTTyp_Specl_m_TArgs_38" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_Bool_ADTTyp_Specl_39" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_25" { i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Bool_ADTTyp_Specl_m_TArgs_38", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_27"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_27"*], [2 x %"$TyDescrTy_ADTTyp_Constr_27"*]* @"$TyDescr_Bool_ADTTyp_Specl_m_constrs_37", i32 0, i32 0), %"$TyDescrTy_ADTTyp_26"* @"$TyDescr_Bool_ADTTyp_30" }
@"$TyDescr_Bool_ADTTyp_m_specls_40" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_25"*] [%"$TyDescrTy_ADTTyp_Specl_25"* @"$TyDescr_Bool_ADTTyp_Specl_39"]
@"$TyDescr_ADT_Bool_41" = unnamed_addr constant [4 x i8] c"Bool"

define internal %Int32 @"$fundef_2"(%"$$fundef_2_env_42"*, %Bool*) {
entry:
  %"$$fundef_2_env_x_43" = getelementptr inbounds %"$$fundef_2_env_42", %"$$fundef_2_env_42"* %0, i32 0, i32 0
  %"$x_envload_44" = load %Int32, %Int32* %"$$fundef_2_env_x_43"
  %x = alloca %Int32
  store %Int32 %"$x_envload_44", %Int32* %x
  %"$$fundef_2_env_y_45" = getelementptr inbounds %"$$fundef_2_env_42", %"$$fundef_2_env_42"* %0, i32 0, i32 1
  %"$y_envload_46" = load %Int32, %Int32* %"$$fundef_2_env_y_45"
  %y = alloca %Int32
  store %Int32 %"$y_envload_46", %Int32* %y
  %"$retval_3" = alloca %Int32
  %"$c_tag_49" = getelementptr inbounds %Bool, %Bool* %1, i32 0, i32 0
  %"$c_tag_50" = load i8, i8* %"$c_tag_49"
  switch i8 %"$c_tag_50", label %"$default_51" [
    i8 0, label %"$True_52"
  ]

"$True_52":                                       ; preds = %entry
  %"$c_53" = bitcast %Bool* %1 to %True*
  %"$x_54" = load %Int32, %Int32* %x
  store %Int32 %"$x_54", %Int32* %"$retval_3"
  br label %"$matchsucc_47"

"$default_51":                                    ; preds = %entry
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_51"
  %"$y_48" = load %Int32, %Int32* %y
  store %Int32 %"$y_48", %Int32* %"$retval_3"
  br label %"$matchsucc_47"

"$matchsucc_47":                                  ; preds = %"$True_52", %"$joinp_0"
  %"$$retval_3_55" = load %Int32, %Int32* %"$retval_3"
  ret %Int32 %"$$retval_3_55"
}

define internal { %Int32 (i8*, %Bool*)*, i8* } @"$scilla_expr_56"(i8*) {
entry:
  %"$expr_1" = alloca { %Int32 (i8*, %Bool*)*, i8* }
  %x = alloca %Int32
  store %Int32 { i32 42 }, %Int32* %x
  %y = alloca %Int32
  store %Int32 { i32 41 }, %Int32* %y
  %f = alloca { %Int32 (i8*, %Bool*)*, i8* }
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %"$$fundef_2_envp_57" = bitcast i8* %malloccall to %"$$fundef_2_env_42"*
  %"$$fundef_2_env_voidp_59" = bitcast %"$$fundef_2_env_42"* %"$$fundef_2_envp_57" to i8*
  %"$$fundef_2_cloval_60" = insertvalue { %Int32 (i8*, %Bool*)*, i8* } { %Int32 (i8*, %Bool*)* bitcast (%Int32 (%"$$fundef_2_env_42"*, %Bool*)* @"$fundef_2" to %Int32 (i8*, %Bool*)*), i8* undef }, i8* %"$$fundef_2_env_voidp_59", 1
  %"$$fundef_2_envp_61" = extractvalue { %Int32 (i8*, %Bool*)*, i8* } %"$$fundef_2_cloval_60", 1
  %"$$fundef_2_envp_62" = bitcast i8* %"$$fundef_2_envp_61" to %"$$fundef_2_env_42"*
  %"$$fundef_2_env_x_63" = getelementptr inbounds %"$$fundef_2_env_42", %"$$fundef_2_env_42"* %"$$fundef_2_envp_62", i32 0, i32 0
  %"$x_64" = load %Int32, %Int32* %x
  store %Int32 %"$x_64", %Int32* %"$$fundef_2_env_x_63"
  %"$$fundef_2_envp_65" = extractvalue { %Int32 (i8*, %Bool*)*, i8* } %"$$fundef_2_cloval_60", 1
  %"$$fundef_2_envp_66" = bitcast i8* %"$$fundef_2_envp_65" to %"$$fundef_2_env_42"*
  %"$$fundef_2_env_y_67" = getelementptr inbounds %"$$fundef_2_env_42", %"$$fundef_2_env_42"* %"$$fundef_2_envp_66", i32 0, i32 1
  %"$y_68" = load %Int32, %Int32* %y
  store %Int32 %"$y_68", %Int32* %"$$fundef_2_env_y_67"
  store { %Int32 (i8*, %Bool*)*, i8* } %"$$fundef_2_cloval_60", { %Int32 (i8*, %Bool*)*, i8* }* %f
  %"$f_69" = load { %Int32 (i8*, %Bool*)*, i8* }, { %Int32 (i8*, %Bool*)*, i8* }* %f
  store { %Int32 (i8*, %Bool*)*, i8* } %"$f_69", { %Int32 (i8*, %Bool*)*, i8* }* %"$expr_1"
  %"$$expr_1_70" = load { %Int32 (i8*, %Bool*)*, i8* }, { %Int32 (i8*, %Bool*)*, i8* }* %"$expr_1"
  ret { %Int32 (i8*, %Bool*)*, i8* } %"$$expr_1_70"
}

declare noalias i8* @malloc(i32)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$cloval_71" = call { %Int32 (i8*, %Bool*)*, i8* } @"$scilla_expr_56"(i8* null)
  ret void
}
