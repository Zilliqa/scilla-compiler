Closure converted AST:


expr_body:
  decl ($expr_2 : Uint32)
  decl (a : List (Uint32))
  (a : List (Uint32)) = Nil { Uint32 }
  match (a : List (Uint32)) with
  | Cons ($a_0 : Uint32) ($a_1 : List (Uint32)) =>
    ($expr_2 : Uint32) = ($a_0 : Uint32)
  | Nil =>
    ($expr_2 : Uint32) = (Uint32 0)
  ret ($expr_2 : Uint32)

Specialized types:
ADTs:
List:
  Uint32
Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_3" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, void* }
%"$TyDescrTy_ADTTyp_25" = type { { i8*, i32 }, i32, i32, %"$TyDescrTy_ADTTyp_Specl_24"** }
%"$TyDescrTy_ADTTyp_Specl_24" = type { i32, %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_26"**, %"$TyDescrTy_ADTTyp_25"* }
%"$TyDescrTy_ADTTyp_Constr_26" = type { { i8*, i32 }, i32, %_TyDescrTy_Typ** }
%TyDescrString = type { i8*, i32 }
%_Uint32 = type { i32 }
%List_Uint32 = type { i8, %Cons_Uint32*, %Nil_Uint32* }
%Cons_Uint32 = type <{ i8, %_Uint32, %List_Uint32* }>
%Nil_Uint32 = type <{ i8 }>

@"$TyDescr_Int32_Prim_4" = global %"$TyDescrTy_PrimTyp_3" zeroinitializer
@"$TyDescr_Int32_5" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Int32_Prim_4" }
@"$TyDescr_Uint32_Prim_6" = global %"$TyDescrTy_PrimTyp_3" { i32 1, i32 0 }
@"$TyDescr_Uint32_7" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Uint32_Prim_6" }
@"$TyDescr_Int64_Prim_8" = global %"$TyDescrTy_PrimTyp_3" { i32 0, i32 1 }
@"$TyDescr_Int64_9" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Int64_Prim_8" }
@"$TyDescr_Uint64_Prim_10" = global %"$TyDescrTy_PrimTyp_3" { i32 1, i32 1 }
@"$TyDescr_Uint64_11" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Uint64_Prim_10" }
@"$TyDescr_Int128_Prim_12" = global %"$TyDescrTy_PrimTyp_3" { i32 0, i32 2 }
@"$TyDescr_Int128_13" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Int128_Prim_12" }
@"$TyDescr_Uint128_Prim_14" = global %"$TyDescrTy_PrimTyp_3" { i32 1, i32 2 }
@"$TyDescr_Uint128_15" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Uint128_Prim_14" }
@"$TyDescr_Int256_Prim_16" = global %"$TyDescrTy_PrimTyp_3" { i32 0, i32 3 }
@"$TyDescr_Int256_17" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Int256_Prim_16" }
@"$TyDescr_Uint256_Prim_18" = global %"$TyDescrTy_PrimTyp_3" { i32 1, i32 3 }
@"$TyDescr_Uint256_19" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Uint256_Prim_18" }
@"$TyDescr_String_Prim_20" = global %"$TyDescrTy_PrimTyp_3" { i32 2, i32 0 }
@"$TyDescr_String_21" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_String_Prim_20" }
@"$TyDescr_Bystr_Prim_22" = global %"$TyDescrTy_PrimTyp_3" { i32 7, i32 0 }
@"$TyDescr_Bystr_23" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_3"* @"$TyDescr_Bystr_Prim_22" }
@"$TyDescr_ADT_List_Uint32_27" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, %"$TyDescrTy_ADTTyp_Specl_24"* @"$TyDescr_List_Uint32_ADTTyp_Specl_36" }
@"$TyDescr_List_ADTTyp_29" = unnamed_addr constant %"$TyDescrTy_ADTTyp_25" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_List_38", i32 0, i32 0), i32 4 }, i32 2, i32 1, %"$TyDescrTy_ADTTyp_Specl_24"** getelementptr inbounds ([1 x %"$TyDescrTy_ADTTyp_Specl_24"*], [1 x %"$TyDescrTy_ADTTyp_Specl_24"*]* @"$TyDescr_List_ADTTyp_m_specls_37", i32 0, i32 0) }
@"$TyDescr_List_Cons_Uint32_Constr_m_args_30" = unnamed_addr constant [2 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Uint32_7", %_TyDescrTy_Typ* @"$TyDescr_ADT_List_Uint32_27"]
@"$TyDescr_ADT_Cons_31" = unnamed_addr constant [4 x i8] c"Cons"
@"$TyDescr_List_Nil_Uint32_Constr_m_args_32" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_Nil_33" = unnamed_addr constant [3 x i8] c"Nil"
@"$TyDescr_List_Uint32_ADTTyp_Specl_m_constrs_34" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_26"*] [%"$TyDescrTy_ADTTyp_Constr_26"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Cons_31", i32 0, i32 0), i32 4 }, i32 2, %_TyDescrTy_Typ** getelementptr inbounds ([2 x %_TyDescrTy_Typ*], [2 x %_TyDescrTy_Typ*]* @"$TyDescr_List_Cons_Uint32_Constr_m_args_30", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_26"* { %TyDescrString { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @"$TyDescr_ADT_Nil_33", i32 0, i32 0), i32 3 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_List_Nil_Uint32_Constr_m_args_32", i32 0, i32 0) }]
@"$TyDescr_List_Uint32_ADTTyp_Specl_m_TArgs_35" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Uint32_7"]
@"$TyDescr_List_Uint32_ADTTyp_Specl_36" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_24" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_List_Uint32_ADTTyp_Specl_m_TArgs_35", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_26"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_26"*], [2 x %"$TyDescrTy_ADTTyp_Constr_26"*]* @"$TyDescr_List_Uint32_ADTTyp_Specl_m_constrs_34", i32 0, i32 0), %"$TyDescrTy_ADTTyp_25"* @"$TyDescr_List_ADTTyp_29" }
@"$TyDescr_List_ADTTyp_m_specls_37" = unnamed_addr constant [1 x %"$TyDescrTy_ADTTyp_Specl_24"*] [%"$TyDescrTy_ADTTyp_Specl_24"* @"$TyDescr_List_Uint32_ADTTyp_Specl_36"]
@"$TyDescr_ADT_List_38" = unnamed_addr constant [4 x i8] c"List"

define %_Uint32 @"$scilla_expr_39"(void*) {
entry:
  %"$expr_2" = alloca %_Uint32
  %a = alloca %List_Uint32*
  %malloccall = tail call i8* @malloc(i32 ptrtoint (%Nil_Uint32* getelementptr (%Nil_Uint32, %Nil_Uint32* null, i32 1) to i32))
  %"$adtval_40" = bitcast i8* %malloccall to %Nil_Uint32*
  %"$adtgep_41" = getelementptr inbounds %Nil_Uint32, %Nil_Uint32* %"$adtval_40", i32 0, i32 0
  store i8 1, i8* %"$adtgep_41"
  %"$adtptr_42" = bitcast %Nil_Uint32* %"$adtval_40" to %List_Uint32*
  store %List_Uint32* %"$adtptr_42", %List_Uint32** %a
  %"$a_44" = load %List_Uint32*, %List_Uint32** %a
  %"$a_tag_45" = getelementptr inbounds %List_Uint32, %List_Uint32* %"$a_44", i32 0, i32 0
  %"$a_tag_46" = load i8, i8* %"$a_tag_45"
  switch i8 %"$a_tag_46", label %"$empty_default_47" [
    i8 0, label %"$Cons_48"
    i8 1, label %"$Nil_55"
  ]

"$Cons_48":                                       ; preds = %entry
  %"$a_49" = bitcast %List_Uint32* %"$a_44" to %Cons_Uint32*
  %"$$a_0_gep_50" = getelementptr inbounds %Cons_Uint32, %Cons_Uint32* %"$a_49", i32 0, i32 1
  %"$$a_0_load_51" = load %_Uint32, %_Uint32* %"$$a_0_gep_50"
  %"$a_0" = alloca %_Uint32
  store %_Uint32 %"$$a_0_load_51", %_Uint32* %"$a_0"
  %"$$a_1_gep_52" = getelementptr inbounds %Cons_Uint32, %Cons_Uint32* %"$a_49", i32 0, i32 2
  %"$$a_1_load_53" = load %List_Uint32*, %List_Uint32** %"$$a_1_gep_52"
  %"$a_1" = alloca %List_Uint32*
  store %List_Uint32* %"$$a_1_load_53", %List_Uint32** %"$a_1"
  %"$$a_0_54" = load %_Uint32, %_Uint32* %"$a_0"
  store %_Uint32 %"$$a_0_54", %_Uint32* %"$expr_2"
  br label %"$matchsucc_43"

"$Nil_55":                                        ; preds = %entry
  %"$a_56" = bitcast %List_Uint32* %"$a_44" to %Nil_Uint32*
  store %_Uint32 zeroinitializer, %_Uint32* %"$expr_2"
  br label %"$matchsucc_43"

"$empty_default_47":                              ; preds = %entry
  br label %"$matchsucc_43"

"$matchsucc_43":                                  ; preds = %"$Nil_55", %"$Cons_48", %"$empty_default_47"
  %"$$expr_2_57" = load %_Uint32, %_Uint32* %"$expr_2"
  ret %_Uint32 %"$$expr_2_57"
}

declare noalias i8* @malloc(i32)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, void*)

define void @scilla_main() {
entry:
  %"$exprval_58" = call %_Uint32 @"$scilla_expr_39"(void* null)
  %"$pval_59" = alloca %_Uint32
  %"$memvoidcast_60" = bitcast %_Uint32* %"$pval_59" to void*
  store %_Uint32 %"$exprval_58", %_Uint32* %"$pval_59"
  call void @_print_scilla_val(%_TyDescrTy_Typ* @"$TyDescr_Uint32_7", void* %"$memvoidcast_60")
  ret void
}

