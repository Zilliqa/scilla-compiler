; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_77" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$$fundef_75_env_102" = type { %Uint32 }
%Uint32 = type { i32 }
%"$$fundef_73_env_103" = type {}
%"$$fundef_71_env_104" = type { { i8*, i8* }*, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { i8*, i8* }* }
%"$$fundef_69_env_105" = type { { i8*, i8* }*, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } }
%"$$fundef_67_env_106" = type { { i8*, i8* }*, { i8*, i8* }*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } }
%"$$fundef_65_env_107" = type { { i8*, i8* }*, { i8*, i8* }* }
%"$$fundef_63_env_108" = type { { i8*, i8* }*, { i8*, i8* }* }
%"$$fundef_61_env_109" = type { { i8*, i8* }*, { i8*, i8* }*, { %Uint32 (i8*, %Uint32)*, i8* } }
%"$$fundef_59_env_110" = type { { i8*, i8* }*, { i8*, i8* }* }
%"$$fundef_57_env_111" = type { { i8*, i8* }*, { i8*, i8* }* }
%"$$fundef_55_env_112" = type { { i8*, i8* }* }
%"$$fundef_53_env_113" = type {}
%"$$fundef_51_env_114" = type { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } }
%"$$fundef_49_env_115" = type {}
%"$$fundef_47_env_116" = type {}
%"$$fundef_45_env_117" = type { { %Uint32 (i8*, %Uint32)*, i8* } }
%"$$fundef_43_env_118" = type {}
%"$$fundef_41_env_119" = type {}
%"$$fundef_39_env_120" = type {}
%"$$fundef_37_env_121" = type {}
%"$$fundef_35_env_122" = type {}
%"$$fundef_33_env_123" = type {}
%"$$fundef_31_env_124" = type {}
%"$$fundef_29_env_125" = type {}

@_execptr = global i8* null
@"$TyDescr_Int32_Prim_78" = global %"$TyDescrTy_PrimTyp_77" zeroinitializer
@"$TyDescr_Int32_79" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Int32_Prim_78" to i8*) }
@"$TyDescr_Uint32_Prim_80" = global %"$TyDescrTy_PrimTyp_77" { i32 1, i32 0 }
@"$TyDescr_Uint32_81" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Uint32_Prim_80" to i8*) }
@"$TyDescr_Int64_Prim_82" = global %"$TyDescrTy_PrimTyp_77" { i32 0, i32 1 }
@"$TyDescr_Int64_83" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Int64_Prim_82" to i8*) }
@"$TyDescr_Uint64_Prim_84" = global %"$TyDescrTy_PrimTyp_77" { i32 1, i32 1 }
@"$TyDescr_Uint64_85" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Uint64_Prim_84" to i8*) }
@"$TyDescr_Int128_Prim_86" = global %"$TyDescrTy_PrimTyp_77" { i32 0, i32 2 }
@"$TyDescr_Int128_87" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Int128_Prim_86" to i8*) }
@"$TyDescr_Uint128_Prim_88" = global %"$TyDescrTy_PrimTyp_77" { i32 1, i32 2 }
@"$TyDescr_Uint128_89" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Uint128_Prim_88" to i8*) }
@"$TyDescr_Int256_Prim_90" = global %"$TyDescrTy_PrimTyp_77" { i32 0, i32 3 }
@"$TyDescr_Int256_91" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Int256_Prim_90" to i8*) }
@"$TyDescr_Uint256_Prim_92" = global %"$TyDescrTy_PrimTyp_77" { i32 1, i32 3 }
@"$TyDescr_Uint256_93" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Uint256_Prim_92" to i8*) }
@"$TyDescr_String_Prim_94" = global %"$TyDescrTy_PrimTyp_77" { i32 2, i32 0 }
@"$TyDescr_String_95" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_String_Prim_94" to i8*) }
@"$TyDescr_Bystr_Prim_96" = global %"$TyDescrTy_PrimTyp_77" { i32 7, i32 0 }
@"$TyDescr_Bystr_97" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_77"* @"$TyDescr_Bystr_Prim_96" to i8*) }
@"$dyndisp_210" = global [2 x { i8*, i8* }] zeroinitializer
@"$dyndisp_430" = global [2 x { i8*, i8* }] zeroinitializer
@"$dyndisp_437" = global [2 x { i8*, i8* }] zeroinitializer

define internal %Uint32 @"$fundef_75"(%"$$fundef_75_env_102"* %0, %Uint32 %1) {
entry:
  %"$$fundef_75_env_one_418" = getelementptr inbounds %"$$fundef_75_env_102", %"$$fundef_75_env_102"* %0, i32 0, i32 0
  %"$one_envload_419" = load %Uint32, %Uint32* %"$$fundef_75_env_one_418"
  %one = alloca %Uint32
  store %Uint32 %"$one_envload_419", %Uint32* %one
  %"$retval_76" = alloca %Uint32
  %"$one_420" = load %Uint32, %Uint32* %one
  %"$add_call_421" = call %Uint32 @_add_Uint32(%Uint32 %"$one_420", %Uint32 %1)
  store %Uint32 %"$add_call_421", %Uint32* %"$retval_76"
  %"$$retval_76_422" = load %Uint32, %Uint32* %"$retval_76"
  ret %Uint32 %"$$retval_76_422"
}

define internal %Uint32 @"$fundef_73"(%"$$fundef_73_env_103"* %0, { i8*, i8* }* %1) {
entry:
  %"$retval_74" = alloca %Uint32
  %zero = alloca %Uint32
  store %Uint32 zeroinitializer, %Uint32* %zero
  %one = alloca %Uint32
  store %Uint32 { i32 1 }, %Uint32* %one
  %add1 = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  %"$$fundef_75_envp_394_load" = load i8*, i8** @_execptr
  %"$$fundef_75_envp_394_salloc" = call i8* @_salloc(i8* %"$$fundef_75_envp_394_load", i64 4)
  %"$$fundef_75_envp_394" = bitcast i8* %"$$fundef_75_envp_394_salloc" to %"$$fundef_75_env_102"*
  %"$$fundef_75_env_voidp_396" = bitcast %"$$fundef_75_env_102"* %"$$fundef_75_envp_394" to i8*
  %"$$fundef_75_cloval_397" = insertvalue { %Uint32 (i8*, %Uint32)*, i8* } { %Uint32 (i8*, %Uint32)* bitcast (%Uint32 (%"$$fundef_75_env_102"*, %Uint32)* @"$fundef_75" to %Uint32 (i8*, %Uint32)*), i8* undef }, i8* %"$$fundef_75_env_voidp_396", 1
  %"$$fundef_75_env_one_398" = getelementptr inbounds %"$$fundef_75_env_102", %"$$fundef_75_env_102"* %"$$fundef_75_envp_394", i32 0, i32 0
  %"$one_399" = load %Uint32, %Uint32* %one
  store %Uint32 %"$one_399", %Uint32* %"$$fundef_75_env_one_398"
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$$fundef_75_cloval_397", { %Uint32 (i8*, %Uint32)*, i8* }* %add1
  %c32 = alloca { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }
  %"$c_400" = getelementptr { i8*, i8* }, { i8*, i8* }* %1, i32 0
  %"$c_401" = bitcast { i8*, i8* }* %"$c_400" to { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }*
  %"$c_402" = load { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }, { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }* %"$c_401"
  %"$c_fptr_403" = extractvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$c_402", 0
  %"$c_envptr_404" = extractvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$c_402", 1
  %"$c_call_405" = call { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$c_fptr_403"(i8* %"$c_envptr_404")
  store { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$c_call_405", { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %c32
  %"$c32_9" = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  %"$c32_406" = load { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %c32
  %"$c32_fptr_407" = extractvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$c32_406", 0
  %"$c32_envptr_408" = extractvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$c32_406", 1
  %"$add1_409" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %add1
  %"$c32_call_410" = call { %Uint32 (i8*, %Uint32)*, i8* } %"$c32_fptr_407"(i8* %"$c32_envptr_408", { %Uint32 (i8*, %Uint32)*, i8* } %"$add1_409")
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$c32_call_410", { %Uint32 (i8*, %Uint32)*, i8* }* %"$c32_9"
  %"$c32_10" = alloca %Uint32
  %"$$c32_9_411" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$c32_9"
  %"$$c32_9_fptr_412" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$$c32_9_411", 0
  %"$$c32_9_envptr_413" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$$c32_9_411", 1
  %"$zero_414" = load %Uint32, %Uint32* %zero
  %"$$c32_9_call_415" = call %Uint32 %"$$c32_9_fptr_412"(i8* %"$$c32_9_envptr_413", %Uint32 %"$zero_414")
  store %Uint32 %"$$c32_9_call_415", %Uint32* %"$c32_10"
  %"$$c32_10_416" = load %Uint32, %Uint32* %"$c32_10"
  store %Uint32 %"$$c32_10_416", %Uint32* %"$retval_74"
  %"$$retval_74_417" = load %Uint32, %Uint32* %"$retval_74"
  ret %Uint32 %"$$retval_74_417"
}

define internal { i8*, i8* }* @"$fundef_71"(%"$$fundef_71_env_104"* %0, { i8*, i8* }* %1) {
entry:
  %"$$fundef_71_env_c0_364" = getelementptr inbounds %"$$fundef_71_env_104", %"$$fundef_71_env_104"* %0, i32 0, i32 0
  %"$c0_envload_365" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_71_env_c0_364"
  %c0 = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$c0_envload_365", { i8*, i8* }** %c0
  %"$$fundef_71_env_cadd_366" = getelementptr inbounds %"$$fundef_71_env_104", %"$$fundef_71_env_104"* %0, i32 0, i32 1
  %"$cadd_envload_367" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_71_env_cadd_366"
  %cadd = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_envload_367", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %"$$fundef_71_env_m_368" = getelementptr inbounds %"$$fundef_71_env_104", %"$$fundef_71_env_104"* %0, i32 0, i32 2
  %"$m_envload_369" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_71_env_m_368"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_369", { i8*, i8* }** %m
  %"$retval_72" = alloca { i8*, i8* }*
  %cadd_m = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cadd_6" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cadd_370" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %"$cadd_fptr_371" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_370", 0
  %"$cadd_envptr_372" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_370", 1
  %"$m_373" = load { i8*, i8* }*, { i8*, i8* }** %m
  %"$cadd_call_374" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_fptr_371"(i8* %"$cadd_envptr_372", { i8*, i8* }* %"$m_373")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_call_374", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_6"
  %"$$cadd_6_375" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_6"
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_6_375", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %cadd_m
  %nI = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }
  %"$n_376" = getelementptr { i8*, i8* }, { i8*, i8* }* %1, i32 1
  %"$n_377" = bitcast { i8*, i8* }* %"$n_376" to { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }*
  %"$n_378" = load { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }, { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }* %"$n_377"
  %"$n_fptr_379" = extractvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$n_378", 0
  %"$n_envptr_380" = extractvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$n_378", 1
  %"$n_call_381" = call { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$n_fptr_379"(i8* %"$n_envptr_380")
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$n_call_381", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %nI
  %"$nI_7" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$nI_382" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %nI
  %"$nI_fptr_383" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$nI_382", 0
  %"$nI_envptr_384" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$nI_382", 1
  %"$cadd_m_385" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %cadd_m
  %"$nI_call_386" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$nI_fptr_383"(i8* %"$nI_envptr_384", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_m_385")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$nI_call_386", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$nI_7"
  %"$nI_8" = alloca { i8*, i8* }*
  %"$$nI_7_387" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$nI_7"
  %"$$nI_7_fptr_388" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$nI_7_387", 0
  %"$$nI_7_envptr_389" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$nI_7_387", 1
  %"$c0_390" = load { i8*, i8* }*, { i8*, i8* }** %c0
  %"$$nI_7_call_391" = call { i8*, i8* }* %"$$nI_7_fptr_388"(i8* %"$$nI_7_envptr_389", { i8*, i8* }* %"$c0_390")
  store { i8*, i8* }* %"$$nI_7_call_391", { i8*, i8* }** %"$nI_8"
  %"$$nI_8_392" = load { i8*, i8* }*, { i8*, i8* }** %"$nI_8"
  store { i8*, i8* }* %"$$nI_8_392", { i8*, i8* }** %"$retval_72"
  %"$$retval_72_393" = load { i8*, i8* }*, { i8*, i8* }** %"$retval_72"
  ret { i8*, i8* }* %"$$retval_72_393"
}

define internal { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } @"$fundef_69"(%"$$fundef_69_env_105"* %0, { i8*, i8* }* %1) {
entry:
  %"$$fundef_69_env_c0_350" = getelementptr inbounds %"$$fundef_69_env_105", %"$$fundef_69_env_105"* %0, i32 0, i32 0
  %"$c0_envload_351" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_69_env_c0_350"
  %c0 = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$c0_envload_351", { i8*, i8* }** %c0
  %"$$fundef_69_env_cadd_352" = getelementptr inbounds %"$$fundef_69_env_105", %"$$fundef_69_env_105"* %0, i32 0, i32 1
  %"$cadd_envload_353" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_69_env_cadd_352"
  %cadd = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_envload_353", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %"$retval_70" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$$fundef_71_envp_354_load" = load i8*, i8** @_execptr
  %"$$fundef_71_envp_354_salloc" = call i8* @_salloc(i8* %"$$fundef_71_envp_354_load", i64 32)
  %"$$fundef_71_envp_354" = bitcast i8* %"$$fundef_71_envp_354_salloc" to %"$$fundef_71_env_104"*
  %"$$fundef_71_env_voidp_356" = bitcast %"$$fundef_71_env_104"* %"$$fundef_71_envp_354" to i8*
  %"$$fundef_71_cloval_357" = insertvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } { { i8*, i8* }* (i8*, { i8*, i8* }*)* bitcast ({ i8*, i8* }* (%"$$fundef_71_env_104"*, { i8*, i8* }*)* @"$fundef_71" to { i8*, i8* }* (i8*, { i8*, i8* }*)*), i8* undef }, i8* %"$$fundef_71_env_voidp_356", 1
  %"$$fundef_71_env_c0_358" = getelementptr inbounds %"$$fundef_71_env_104", %"$$fundef_71_env_104"* %"$$fundef_71_envp_354", i32 0, i32 0
  %"$c0_359" = load { i8*, i8* }*, { i8*, i8* }** %c0
  store { i8*, i8* }* %"$c0_359", { i8*, i8* }** %"$$fundef_71_env_c0_358"
  %"$$fundef_71_env_cadd_360" = getelementptr inbounds %"$$fundef_71_env_104", %"$$fundef_71_env_104"* %"$$fundef_71_envp_354", i32 0, i32 1
  %"$cadd_361" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_361", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_71_env_cadd_360"
  %"$$fundef_71_env_m_362" = getelementptr inbounds %"$$fundef_71_env_104", %"$$fundef_71_env_104"* %"$$fundef_71_envp_354", i32 0, i32 2
  store { i8*, i8* }* %1, { i8*, i8* }** %"$$fundef_71_env_m_362"
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$fundef_71_cloval_357", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_70"
  %"$$retval_70_363" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_70"
  ret { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$retval_70_363"
}

define internal { i8*, i8* }* @"$fundef_67"(%"$$fundef_67_env_106"* %0, { i8*, i8* }* %1) {
entry:
  %"$$fundef_67_env_m_308" = getelementptr inbounds %"$$fundef_67_env_106", %"$$fundef_67_env_106"* %0, i32 0, i32 0
  %"$m_envload_309" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_67_env_m_308"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_309", { i8*, i8* }** %m
  %"$$fundef_67_env_n_310" = getelementptr inbounds %"$$fundef_67_env_106", %"$$fundef_67_env_106"* %0, i32 0, i32 1
  %"$n_envload_311" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_67_env_n_310"
  %n = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$n_envload_311", { i8*, i8* }** %n
  %"$$fundef_67_env_s_312" = getelementptr inbounds %"$$fundef_67_env_106", %"$$fundef_67_env_106"* %0, i32 0, i32 2
  %"$s_envload_313" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_67_env_s_312"
  %s = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_envload_313", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %s
  %"$retval_68" = alloca { i8*, i8* }*
  %mX = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }
  %"$m_314" = load { i8*, i8* }*, { i8*, i8* }** %m
  %"$m_315" = getelementptr { i8*, i8* }, { i8*, i8* }* %"$m_314", i32 1
  %"$m_316" = bitcast { i8*, i8* }* %"$m_315" to { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }*
  %"$m_317" = load { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }, { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }* %"$m_316"
  %"$m_fptr_318" = extractvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$m_317", 0
  %"$m_envptr_319" = extractvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$m_317", 1
  %"$m_call_320" = call { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$m_fptr_318"(i8* %"$m_envptr_319")
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$m_call_320", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %mX
  %nX = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }
  %"$n_321" = load { i8*, i8* }*, { i8*, i8* }** %n
  %"$n_322" = getelementptr { i8*, i8* }, { i8*, i8* }* %"$n_321", i32 1
  %"$n_323" = bitcast { i8*, i8* }* %"$n_322" to { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }*
  %"$n_324" = load { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }, { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }* %"$n_323"
  %"$n_fptr_325" = extractvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$n_324", 0
  %"$n_envptr_326" = extractvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$n_324", 1
  %"$n_call_327" = call { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$n_fptr_325"(i8* %"$n_envptr_326")
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$n_call_327", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %nX
  %nXsz = alloca { i8*, i8* }*
  %"$nX_2" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$nX_328" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %nX
  %"$nX_fptr_329" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$nX_328", 0
  %"$nX_envptr_330" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$nX_328", 1
  %"$s_331" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %s
  %"$nX_call_332" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$nX_fptr_329"(i8* %"$nX_envptr_330", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_331")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$nX_call_332", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$nX_2"
  %"$nX_3" = alloca { i8*, i8* }*
  %"$$nX_2_333" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$nX_2"
  %"$$nX_2_fptr_334" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$nX_2_333", 0
  %"$$nX_2_envptr_335" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$nX_2_333", 1
  %"$$nX_2_call_336" = call { i8*, i8* }* %"$$nX_2_fptr_334"(i8* %"$$nX_2_envptr_335", { i8*, i8* }* %1)
  store { i8*, i8* }* %"$$nX_2_call_336", { i8*, i8* }** %"$nX_3"
  %"$$nX_3_337" = load { i8*, i8* }*, { i8*, i8* }** %"$nX_3"
  store { i8*, i8* }* %"$$nX_3_337", { i8*, i8* }** %nXsz
  %"$mX_4" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$mX_338" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %mX
  %"$mX_fptr_339" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$mX_338", 0
  %"$mX_envptr_340" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$mX_338", 1
  %"$s_341" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %s
  %"$mX_call_342" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$mX_fptr_339"(i8* %"$mX_envptr_340", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_341")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$mX_call_342", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$mX_4"
  %"$mX_5" = alloca { i8*, i8* }*
  %"$$mX_4_343" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$mX_4"
  %"$$mX_4_fptr_344" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$mX_4_343", 0
  %"$$mX_4_envptr_345" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$mX_4_343", 1
  %"$nXsz_346" = load { i8*, i8* }*, { i8*, i8* }** %nXsz
  %"$$mX_4_call_347" = call { i8*, i8* }* %"$$mX_4_fptr_344"(i8* %"$$mX_4_envptr_345", { i8*, i8* }* %"$nXsz_346")
  store { i8*, i8* }* %"$$mX_4_call_347", { i8*, i8* }** %"$mX_5"
  %"$$mX_5_348" = load { i8*, i8* }*, { i8*, i8* }** %"$mX_5"
  store { i8*, i8* }* %"$$mX_5_348", { i8*, i8* }** %"$retval_68"
  %"$$retval_68_349" = load { i8*, i8* }*, { i8*, i8* }** %"$retval_68"
  ret { i8*, i8* }* %"$$retval_68_349"
}

define internal { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } @"$fundef_65"(%"$$fundef_65_env_107"* %0, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %1) {
entry:
  %"$$fundef_65_env_m_294" = getelementptr inbounds %"$$fundef_65_env_107", %"$$fundef_65_env_107"* %0, i32 0, i32 0
  %"$m_envload_295" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_65_env_m_294"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_295", { i8*, i8* }** %m
  %"$$fundef_65_env_n_296" = getelementptr inbounds %"$$fundef_65_env_107", %"$$fundef_65_env_107"* %0, i32 0, i32 1
  %"$n_envload_297" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_65_env_n_296"
  %n = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$n_envload_297", { i8*, i8* }** %n
  %"$retval_66" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$$fundef_67_envp_298_load" = load i8*, i8** @_execptr
  %"$$fundef_67_envp_298_salloc" = call i8* @_salloc(i8* %"$$fundef_67_envp_298_load", i64 32)
  %"$$fundef_67_envp_298" = bitcast i8* %"$$fundef_67_envp_298_salloc" to %"$$fundef_67_env_106"*
  %"$$fundef_67_env_voidp_300" = bitcast %"$$fundef_67_env_106"* %"$$fundef_67_envp_298" to i8*
  %"$$fundef_67_cloval_301" = insertvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } { { i8*, i8* }* (i8*, { i8*, i8* }*)* bitcast ({ i8*, i8* }* (%"$$fundef_67_env_106"*, { i8*, i8* }*)* @"$fundef_67" to { i8*, i8* }* (i8*, { i8*, i8* }*)*), i8* undef }, i8* %"$$fundef_67_env_voidp_300", 1
  %"$$fundef_67_env_m_302" = getelementptr inbounds %"$$fundef_67_env_106", %"$$fundef_67_env_106"* %"$$fundef_67_envp_298", i32 0, i32 0
  %"$m_303" = load { i8*, i8* }*, { i8*, i8* }** %m
  store { i8*, i8* }* %"$m_303", { i8*, i8* }** %"$$fundef_67_env_m_302"
  %"$$fundef_67_env_n_304" = getelementptr inbounds %"$$fundef_67_env_106", %"$$fundef_67_env_106"* %"$$fundef_67_envp_298", i32 0, i32 1
  %"$n_305" = load { i8*, i8* }*, { i8*, i8* }** %n
  store { i8*, i8* }* %"$n_305", { i8*, i8* }** %"$$fundef_67_env_n_304"
  %"$$fundef_67_env_s_306" = getelementptr inbounds %"$$fundef_67_env_106", %"$$fundef_67_env_106"* %"$$fundef_67_envp_298", i32 0, i32 2
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %1, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_67_env_s_306"
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$fundef_67_cloval_301", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_66"
  %"$$retval_66_307" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_66"
  ret { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$retval_66_307"
}

define internal { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } @"$fundef_63"(%"$$fundef_63_env_108"* %0) {
entry:
  %"$$fundef_63_env_m_281" = getelementptr inbounds %"$$fundef_63_env_108", %"$$fundef_63_env_108"* %0, i32 0, i32 0
  %"$m_envload_282" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_63_env_m_281"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_282", { i8*, i8* }** %m
  %"$$fundef_63_env_n_283" = getelementptr inbounds %"$$fundef_63_env_108", %"$$fundef_63_env_108"* %0, i32 0, i32 1
  %"$n_envload_284" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_63_env_n_283"
  %n = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$n_envload_284", { i8*, i8* }** %n
  %"$retval_64" = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }
  %"$$fundef_65_envp_285_load" = load i8*, i8** @_execptr
  %"$$fundef_65_envp_285_salloc" = call i8* @_salloc(i8* %"$$fundef_65_envp_285_load", i64 16)
  %"$$fundef_65_envp_285" = bitcast i8* %"$$fundef_65_envp_285_salloc" to %"$$fundef_65_env_107"*
  %"$$fundef_65_env_voidp_287" = bitcast %"$$fundef_65_env_107"* %"$$fundef_65_envp_285" to i8*
  %"$$fundef_65_cloval_288" = insertvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })* bitcast ({ { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (%"$$fundef_65_env_107"*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })* @"$fundef_65" to { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*), i8* undef }, i8* %"$$fundef_65_env_voidp_287", 1
  %"$$fundef_65_env_m_289" = getelementptr inbounds %"$$fundef_65_env_107", %"$$fundef_65_env_107"* %"$$fundef_65_envp_285", i32 0, i32 0
  %"$m_290" = load { i8*, i8* }*, { i8*, i8* }** %m
  store { i8*, i8* }* %"$m_290", { i8*, i8* }** %"$$fundef_65_env_m_289"
  %"$$fundef_65_env_n_291" = getelementptr inbounds %"$$fundef_65_env_107", %"$$fundef_65_env_107"* %"$$fundef_65_envp_285", i32 0, i32 1
  %"$n_292" = load { i8*, i8* }*, { i8*, i8* }** %n
  store { i8*, i8* }* %"$n_292", { i8*, i8* }** %"$$fundef_65_env_n_291"
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$$fundef_65_cloval_288", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %"$retval_64"
  %"$$retval_64_293" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %"$retval_64"
  ret { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$$retval_64_293"
}

define internal %Uint32 @"$fundef_61"(%"$$fundef_61_env_109"* %0, %Uint32 %1) {
entry:
  %"$$fundef_61_env_m_239" = getelementptr inbounds %"$$fundef_61_env_109", %"$$fundef_61_env_109"* %0, i32 0, i32 0
  %"$m_envload_240" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_61_env_m_239"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_240", { i8*, i8* }** %m
  %"$$fundef_61_env_n_241" = getelementptr inbounds %"$$fundef_61_env_109", %"$$fundef_61_env_109"* %0, i32 0, i32 1
  %"$n_envload_242" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_61_env_n_241"
  %n = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$n_envload_242", { i8*, i8* }** %n
  %"$$fundef_61_env_s_243" = getelementptr inbounds %"$$fundef_61_env_109", %"$$fundef_61_env_109"* %0, i32 0, i32 2
  %"$s_envload_244" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$$fundef_61_env_s_243"
  %s = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$s_envload_244", { %Uint32 (i8*, %Uint32)*, i8* }* %s
  %"$retval_62" = alloca %Uint32
  %mX = alloca { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }
  %"$m_245" = load { i8*, i8* }*, { i8*, i8* }** %m
  %"$m_246" = getelementptr { i8*, i8* }, { i8*, i8* }* %"$m_245", i32 0
  %"$m_247" = bitcast { i8*, i8* }* %"$m_246" to { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }*
  %"$m_248" = load { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }, { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }* %"$m_247"
  %"$m_fptr_249" = extractvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$m_248", 0
  %"$m_envptr_250" = extractvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$m_248", 1
  %"$m_call_251" = call { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$m_fptr_249"(i8* %"$m_envptr_250")
  store { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$m_call_251", { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %mX
  %nX = alloca { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }
  %"$n_252" = load { i8*, i8* }*, { i8*, i8* }** %n
  %"$n_253" = getelementptr { i8*, i8* }, { i8*, i8* }* %"$n_252", i32 0
  %"$n_254" = bitcast { i8*, i8* }* %"$n_253" to { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }*
  %"$n_255" = load { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }, { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }* %"$n_254"
  %"$n_fptr_256" = extractvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$n_255", 0
  %"$n_envptr_257" = extractvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$n_255", 1
  %"$n_call_258" = call { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$n_fptr_256"(i8* %"$n_envptr_257")
  store { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$n_call_258", { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %nX
  %nXsz = alloca %Uint32
  %"$nX_2" = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  %"$nX_259" = load { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %nX
  %"$nX_fptr_260" = extractvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$nX_259", 0
  %"$nX_envptr_261" = extractvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$nX_259", 1
  %"$s_262" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %s
  %"$nX_call_263" = call { %Uint32 (i8*, %Uint32)*, i8* } %"$nX_fptr_260"(i8* %"$nX_envptr_261", { %Uint32 (i8*, %Uint32)*, i8* } %"$s_262")
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$nX_call_263", { %Uint32 (i8*, %Uint32)*, i8* }* %"$nX_2"
  %"$nX_3" = alloca %Uint32
  %"$$nX_2_264" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$nX_2"
  %"$$nX_2_fptr_265" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$$nX_2_264", 0
  %"$$nX_2_envptr_266" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$$nX_2_264", 1
  %"$$nX_2_call_267" = call %Uint32 %"$$nX_2_fptr_265"(i8* %"$$nX_2_envptr_266", %Uint32 %1)
  store %Uint32 %"$$nX_2_call_267", %Uint32* %"$nX_3"
  %"$$nX_3_268" = load %Uint32, %Uint32* %"$nX_3"
  store %Uint32 %"$$nX_3_268", %Uint32* %nXsz
  %"$mX_4" = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  %"$mX_269" = load { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %mX
  %"$mX_fptr_270" = extractvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$mX_269", 0
  %"$mX_envptr_271" = extractvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$mX_269", 1
  %"$s_272" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %s
  %"$mX_call_273" = call { %Uint32 (i8*, %Uint32)*, i8* } %"$mX_fptr_270"(i8* %"$mX_envptr_271", { %Uint32 (i8*, %Uint32)*, i8* } %"$s_272")
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$mX_call_273", { %Uint32 (i8*, %Uint32)*, i8* }* %"$mX_4"
  %"$mX_5" = alloca %Uint32
  %"$$mX_4_274" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$mX_4"
  %"$$mX_4_fptr_275" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$$mX_4_274", 0
  %"$$mX_4_envptr_276" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$$mX_4_274", 1
  %"$nXsz_277" = load %Uint32, %Uint32* %nXsz
  %"$$mX_4_call_278" = call %Uint32 %"$$mX_4_fptr_275"(i8* %"$$mX_4_envptr_276", %Uint32 %"$nXsz_277")
  store %Uint32 %"$$mX_4_call_278", %Uint32* %"$mX_5"
  %"$$mX_5_279" = load %Uint32, %Uint32* %"$mX_5"
  store %Uint32 %"$$mX_5_279", %Uint32* %"$retval_62"
  %"$$retval_62_280" = load %Uint32, %Uint32* %"$retval_62"
  ret %Uint32 %"$$retval_62_280"
}

define internal { %Uint32 (i8*, %Uint32)*, i8* } @"$fundef_59"(%"$$fundef_59_env_110"* %0, { %Uint32 (i8*, %Uint32)*, i8* } %1) {
entry:
  %"$$fundef_59_env_m_225" = getelementptr inbounds %"$$fundef_59_env_110", %"$$fundef_59_env_110"* %0, i32 0, i32 0
  %"$m_envload_226" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_59_env_m_225"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_226", { i8*, i8* }** %m
  %"$$fundef_59_env_n_227" = getelementptr inbounds %"$$fundef_59_env_110", %"$$fundef_59_env_110"* %0, i32 0, i32 1
  %"$n_envload_228" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_59_env_n_227"
  %n = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$n_envload_228", { i8*, i8* }** %n
  %"$retval_60" = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  %"$$fundef_61_envp_229_load" = load i8*, i8** @_execptr
  %"$$fundef_61_envp_229_salloc" = call i8* @_salloc(i8* %"$$fundef_61_envp_229_load", i64 32)
  %"$$fundef_61_envp_229" = bitcast i8* %"$$fundef_61_envp_229_salloc" to %"$$fundef_61_env_109"*
  %"$$fundef_61_env_voidp_231" = bitcast %"$$fundef_61_env_109"* %"$$fundef_61_envp_229" to i8*
  %"$$fundef_61_cloval_232" = insertvalue { %Uint32 (i8*, %Uint32)*, i8* } { %Uint32 (i8*, %Uint32)* bitcast (%Uint32 (%"$$fundef_61_env_109"*, %Uint32)* @"$fundef_61" to %Uint32 (i8*, %Uint32)*), i8* undef }, i8* %"$$fundef_61_env_voidp_231", 1
  %"$$fundef_61_env_m_233" = getelementptr inbounds %"$$fundef_61_env_109", %"$$fundef_61_env_109"* %"$$fundef_61_envp_229", i32 0, i32 0
  %"$m_234" = load { i8*, i8* }*, { i8*, i8* }** %m
  store { i8*, i8* }* %"$m_234", { i8*, i8* }** %"$$fundef_61_env_m_233"
  %"$$fundef_61_env_n_235" = getelementptr inbounds %"$$fundef_61_env_109", %"$$fundef_61_env_109"* %"$$fundef_61_envp_229", i32 0, i32 1
  %"$n_236" = load { i8*, i8* }*, { i8*, i8* }** %n
  store { i8*, i8* }* %"$n_236", { i8*, i8* }** %"$$fundef_61_env_n_235"
  %"$$fundef_61_env_s_237" = getelementptr inbounds %"$$fundef_61_env_109", %"$$fundef_61_env_109"* %"$$fundef_61_envp_229", i32 0, i32 2
  store { %Uint32 (i8*, %Uint32)*, i8* } %1, { %Uint32 (i8*, %Uint32)*, i8* }* %"$$fundef_61_env_s_237"
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$$fundef_61_cloval_232", { %Uint32 (i8*, %Uint32)*, i8* }* %"$retval_60"
  %"$$retval_60_238" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$retval_60"
  ret { %Uint32 (i8*, %Uint32)*, i8* } %"$$retval_60_238"
}

define internal { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } @"$fundef_57"(%"$$fundef_57_env_111"* %0) {
entry:
  %"$$fundef_57_env_m_212" = getelementptr inbounds %"$$fundef_57_env_111", %"$$fundef_57_env_111"* %0, i32 0, i32 0
  %"$m_envload_213" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_57_env_m_212"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_213", { i8*, i8* }** %m
  %"$$fundef_57_env_n_214" = getelementptr inbounds %"$$fundef_57_env_111", %"$$fundef_57_env_111"* %0, i32 0, i32 1
  %"$n_envload_215" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_57_env_n_214"
  %n = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$n_envload_215", { i8*, i8* }** %n
  %"$retval_58" = alloca { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }
  %"$$fundef_59_envp_216_load" = load i8*, i8** @_execptr
  %"$$fundef_59_envp_216_salloc" = call i8* @_salloc(i8* %"$$fundef_59_envp_216_load", i64 16)
  %"$$fundef_59_envp_216" = bitcast i8* %"$$fundef_59_envp_216_salloc" to %"$$fundef_59_env_110"*
  %"$$fundef_59_env_voidp_218" = bitcast %"$$fundef_59_env_110"* %"$$fundef_59_envp_216" to i8*
  %"$$fundef_59_cloval_219" = insertvalue { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })* bitcast ({ %Uint32 (i8*, %Uint32)*, i8* } (%"$$fundef_59_env_110"*, { %Uint32 (i8*, %Uint32)*, i8* })* @"$fundef_59" to { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*), i8* undef }, i8* %"$$fundef_59_env_voidp_218", 1
  %"$$fundef_59_env_m_220" = getelementptr inbounds %"$$fundef_59_env_110", %"$$fundef_59_env_110"* %"$$fundef_59_envp_216", i32 0, i32 0
  %"$m_221" = load { i8*, i8* }*, { i8*, i8* }** %m
  store { i8*, i8* }* %"$m_221", { i8*, i8* }** %"$$fundef_59_env_m_220"
  %"$$fundef_59_env_n_222" = getelementptr inbounds %"$$fundef_59_env_110", %"$$fundef_59_env_110"* %"$$fundef_59_envp_216", i32 0, i32 1
  %"$n_223" = load { i8*, i8* }*, { i8*, i8* }** %n
  store { i8*, i8* }* %"$n_223", { i8*, i8* }** %"$$fundef_59_env_n_222"
  store { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$$fundef_59_cloval_219", { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %"$retval_58"
  %"$$retval_58_224" = load { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %"$retval_58"
  ret { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$$retval_58_224"
}

define internal { i8*, i8* }* @"$fundef_55"(%"$$fundef_55_env_112"* %0, { i8*, i8* }* %1) {
entry:
  %"$$fundef_55_env_m_198" = getelementptr inbounds %"$$fundef_55_env_112", %"$$fundef_55_env_112"* %0, i32 0, i32 0
  %"$m_envload_199" = load { i8*, i8* }*, { i8*, i8* }** %"$$fundef_55_env_m_198"
  %m = alloca { i8*, i8* }*
  store { i8*, i8* }* %"$m_envload_199", { i8*, i8* }** %m
  %"$retval_56" = alloca { i8*, i8* }*
  %"$$fundef_57_envp_200_load" = load i8*, i8** @_execptr
  %"$$fundef_57_envp_200_salloc" = call i8* @_salloc(i8* %"$$fundef_57_envp_200_load", i64 16)
  %"$$fundef_57_envp_200" = bitcast i8* %"$$fundef_57_envp_200_salloc" to %"$$fundef_57_env_111"*
  %"$$fundef_57_env_voidp_202" = bitcast %"$$fundef_57_env_111"* %"$$fundef_57_envp_200" to i8*
  %"$$fundef_57_cloval_203" = insertvalue { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)* bitcast ({ { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (%"$$fundef_57_env_111"*)* @"$fundef_57" to { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*), i8* undef }, i8* %"$$fundef_57_env_voidp_202", 1
  %"$$fundef_57_env_m_204" = getelementptr inbounds %"$$fundef_57_env_111", %"$$fundef_57_env_111"* %"$$fundef_57_envp_200", i32 0, i32 0
  %"$m_205" = load { i8*, i8* }*, { i8*, i8* }** %m
  store { i8*, i8* }* %"$m_205", { i8*, i8* }** %"$$fundef_57_env_m_204"
  %"$$fundef_57_env_n_206" = getelementptr inbounds %"$$fundef_57_env_111", %"$$fundef_57_env_111"* %"$$fundef_57_envp_200", i32 0, i32 1
  store { i8*, i8* }* %1, { i8*, i8* }** %"$$fundef_57_env_n_206"
  %"$$fundef_63_env_voidp_208" = bitcast %"$$fundef_57_env_111"* %"$$fundef_57_envp_200" to i8*
  %"$$fundef_63_cloval_209" = insertvalue { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)* bitcast ({ { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (%"$$fundef_63_env_108"*)* @"$fundef_63" to { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*), i8* undef }, i8* %"$$fundef_63_env_voidp_208", 1
  store { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } %"$$fundef_57_cloval_203", { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }* bitcast ([2 x { i8*, i8* }]* @"$dyndisp_210" to { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }*)
  store { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } %"$$fundef_63_cloval_209", { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }* bitcast ({ i8*, i8* }* getelementptr inbounds ([2 x { i8*, i8* }], [2 x { i8*, i8* }]* @"$dyndisp_210", i32 0, i32 1) to { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }*)
  store { i8*, i8* }* getelementptr inbounds ([2 x { i8*, i8* }], [2 x { i8*, i8* }]* @"$dyndisp_210", i32 0, i32 0), { i8*, i8* }** %"$retval_56"
  %"$$retval_56_211" = load { i8*, i8* }*, { i8*, i8* }** %"$retval_56"
  ret { i8*, i8* }* %"$$retval_56_211"
}

define internal { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } @"$fundef_53"(%"$$fundef_53_env_113"* %0, { i8*, i8* }* %1) {
entry:
  %"$retval_54" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$$fundef_55_envp_192_load" = load i8*, i8** @_execptr
  %"$$fundef_55_envp_192_salloc" = call i8* @_salloc(i8* %"$$fundef_55_envp_192_load", i64 8)
  %"$$fundef_55_envp_192" = bitcast i8* %"$$fundef_55_envp_192_salloc" to %"$$fundef_55_env_112"*
  %"$$fundef_55_env_voidp_194" = bitcast %"$$fundef_55_env_112"* %"$$fundef_55_envp_192" to i8*
  %"$$fundef_55_cloval_195" = insertvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } { { i8*, i8* }* (i8*, { i8*, i8* }*)* bitcast ({ i8*, i8* }* (%"$$fundef_55_env_112"*, { i8*, i8* }*)* @"$fundef_55" to { i8*, i8* }* (i8*, { i8*, i8* }*)*), i8* undef }, i8* %"$$fundef_55_env_voidp_194", 1
  %"$$fundef_55_env_m_196" = getelementptr inbounds %"$$fundef_55_env_112", %"$$fundef_55_env_112"* %"$$fundef_55_envp_192", i32 0, i32 0
  store { i8*, i8* }* %1, { i8*, i8* }** %"$$fundef_55_env_m_196"
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$fundef_55_cloval_195", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_54"
  %"$$retval_54_197" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_54"
  ret { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$retval_54_197"
}

define internal { i8*, i8* }* @"$fundef_51"(%"$$fundef_51_env_114"* %0, { i8*, i8* }* %1) {
entry:
  %"$$fundef_51_env_s_178" = getelementptr inbounds %"$$fundef_51_env_114", %"$$fundef_51_env_114"* %0, i32 0, i32 0
  %"$s_envload_179" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_51_env_s_178"
  %s = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_envload_179", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %s
  %"$retval_52" = alloca { i8*, i8* }*
  %sz = alloca { i8*, i8* }*
  %"$s_0" = alloca { i8*, i8* }*
  %"$s_180" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %s
  %"$s_fptr_181" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_180", 0
  %"$s_envptr_182" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_180", 1
  %"$s_call_183" = call { i8*, i8* }* %"$s_fptr_181"(i8* %"$s_envptr_182", { i8*, i8* }* %1)
  store { i8*, i8* }* %"$s_call_183", { i8*, i8* }** %"$s_0"
  %"$$s_0_184" = load { i8*, i8* }*, { i8*, i8* }** %"$s_0"
  store { i8*, i8* }* %"$$s_0_184", { i8*, i8* }** %sz
  %"$s_1" = alloca { i8*, i8* }*
  %"$s_185" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %s
  %"$s_fptr_186" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_185", 0
  %"$s_envptr_187" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$s_185", 1
  %"$sz_188" = load { i8*, i8* }*, { i8*, i8* }** %sz
  %"$s_call_189" = call { i8*, i8* }* %"$s_fptr_186"(i8* %"$s_envptr_187", { i8*, i8* }* %"$sz_188")
  store { i8*, i8* }* %"$s_call_189", { i8*, i8* }** %"$s_1"
  %"$$s_1_190" = load { i8*, i8* }*, { i8*, i8* }** %"$s_1"
  store { i8*, i8* }* %"$$s_1_190", { i8*, i8* }** %"$retval_52"
  %"$$retval_52_191" = load { i8*, i8* }*, { i8*, i8* }** %"$retval_52"
  ret { i8*, i8* }* %"$$retval_52_191"
}

define internal { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } @"$fundef_49"(%"$$fundef_49_env_115"* %0, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %1) {
entry:
  %"$retval_50" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$$fundef_51_envp_172_load" = load i8*, i8** @_execptr
  %"$$fundef_51_envp_172_salloc" = call i8* @_salloc(i8* %"$$fundef_51_envp_172_load", i64 16)
  %"$$fundef_51_envp_172" = bitcast i8* %"$$fundef_51_envp_172_salloc" to %"$$fundef_51_env_114"*
  %"$$fundef_51_env_voidp_174" = bitcast %"$$fundef_51_env_114"* %"$$fundef_51_envp_172" to i8*
  %"$$fundef_51_cloval_175" = insertvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } { { i8*, i8* }* (i8*, { i8*, i8* }*)* bitcast ({ i8*, i8* }* (%"$$fundef_51_env_114"*, { i8*, i8* }*)* @"$fundef_51" to { i8*, i8* }* (i8*, { i8*, i8* }*)*), i8* undef }, i8* %"$$fundef_51_env_voidp_174", 1
  %"$$fundef_51_env_s_176" = getelementptr inbounds %"$$fundef_51_env_114", %"$$fundef_51_env_114"* %"$$fundef_51_envp_172", i32 0, i32 0
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %1, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_51_env_s_176"
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$fundef_51_cloval_175", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_50"
  %"$$retval_50_177" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_50"
  ret { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$retval_50_177"
}

define internal { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } @"$fundef_47"(%"$$fundef_47_env_116"* %0) {
entry:
  %"$retval_48" = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })* bitcast ({ { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (%"$$fundef_49_env_115"*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })* @"$fundef_49" to { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*), i8* null }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %"$retval_48"
  %"$$retval_48_171" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %"$retval_48"
  ret { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$$retval_48_171"
}

define internal %Uint32 @"$fundef_45"(%"$$fundef_45_env_117"* %0, %Uint32 %1) {
entry:
  %"$$fundef_45_env_s_154" = getelementptr inbounds %"$$fundef_45_env_117", %"$$fundef_45_env_117"* %0, i32 0, i32 0
  %"$s_envload_155" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$$fundef_45_env_s_154"
  %s = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$s_envload_155", { %Uint32 (i8*, %Uint32)*, i8* }* %s
  %"$retval_46" = alloca %Uint32
  %sz = alloca %Uint32
  %"$s_0" = alloca %Uint32
  %"$s_156" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %s
  %"$s_fptr_157" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$s_156", 0
  %"$s_envptr_158" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$s_156", 1
  %"$s_call_159" = call %Uint32 %"$s_fptr_157"(i8* %"$s_envptr_158", %Uint32 %1)
  store %Uint32 %"$s_call_159", %Uint32* %"$s_0"
  %"$$s_0_160" = load %Uint32, %Uint32* %"$s_0"
  store %Uint32 %"$$s_0_160", %Uint32* %sz
  %"$s_1" = alloca %Uint32
  %"$s_161" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %s
  %"$s_fptr_162" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$s_161", 0
  %"$s_envptr_163" = extractvalue { %Uint32 (i8*, %Uint32)*, i8* } %"$s_161", 1
  %"$sz_164" = load %Uint32, %Uint32* %sz
  %"$s_call_165" = call %Uint32 %"$s_fptr_162"(i8* %"$s_envptr_163", %Uint32 %"$sz_164")
  store %Uint32 %"$s_call_165", %Uint32* %"$s_1"
  %"$$s_1_166" = load %Uint32, %Uint32* %"$s_1"
  store %Uint32 %"$$s_1_166", %Uint32* %"$retval_46"
  %"$$retval_46_167" = load %Uint32, %Uint32* %"$retval_46"
  ret %Uint32 %"$$retval_46_167"
}

define internal { %Uint32 (i8*, %Uint32)*, i8* } @"$fundef_43"(%"$$fundef_43_env_118"* %0, { %Uint32 (i8*, %Uint32)*, i8* } %1) {
entry:
  %"$retval_44" = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  %"$$fundef_45_envp_148_load" = load i8*, i8** @_execptr
  %"$$fundef_45_envp_148_salloc" = call i8* @_salloc(i8* %"$$fundef_45_envp_148_load", i64 16)
  %"$$fundef_45_envp_148" = bitcast i8* %"$$fundef_45_envp_148_salloc" to %"$$fundef_45_env_117"*
  %"$$fundef_45_env_voidp_150" = bitcast %"$$fundef_45_env_117"* %"$$fundef_45_envp_148" to i8*
  %"$$fundef_45_cloval_151" = insertvalue { %Uint32 (i8*, %Uint32)*, i8* } { %Uint32 (i8*, %Uint32)* bitcast (%Uint32 (%"$$fundef_45_env_117"*, %Uint32)* @"$fundef_45" to %Uint32 (i8*, %Uint32)*), i8* undef }, i8* %"$$fundef_45_env_voidp_150", 1
  %"$$fundef_45_env_s_152" = getelementptr inbounds %"$$fundef_45_env_117", %"$$fundef_45_env_117"* %"$$fundef_45_envp_148", i32 0, i32 0
  store { %Uint32 (i8*, %Uint32)*, i8* } %1, { %Uint32 (i8*, %Uint32)*, i8* }* %"$$fundef_45_env_s_152"
  store { %Uint32 (i8*, %Uint32)*, i8* } %"$$fundef_45_cloval_151", { %Uint32 (i8*, %Uint32)*, i8* }* %"$retval_44"
  %"$$retval_44_153" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$retval_44"
  ret { %Uint32 (i8*, %Uint32)*, i8* } %"$$retval_44_153"
}

define internal { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } @"$fundef_41"(%"$$fundef_41_env_119"* %0) {
entry:
  %"$retval_42" = alloca { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }
  store { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })* bitcast ({ %Uint32 (i8*, %Uint32)*, i8* } (%"$$fundef_43_env_118"*, { %Uint32 (i8*, %Uint32)*, i8* })* @"$fundef_43" to { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*), i8* null }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %"$retval_42"
  %"$$retval_42_147" = load { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %"$retval_42"
  ret { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$$retval_42_147"
}

define internal { i8*, i8* }* @"$fundef_39"(%"$$fundef_39_env_120"* %0, { i8*, i8* }* %1) {
entry:
  %"$retval_40" = alloca { i8*, i8* }*
  store { i8*, i8* }* %1, { i8*, i8* }** %"$retval_40"
  %"$$retval_40_143" = load { i8*, i8* }*, { i8*, i8* }** %"$retval_40"
  ret { i8*, i8* }* %"$$retval_40_143"
}

define internal { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } @"$fundef_37"(%"$$fundef_37_env_121"* %0, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %1) {
entry:
  %"$retval_38" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } { { i8*, i8* }* (i8*, { i8*, i8* }*)* bitcast ({ i8*, i8* }* (%"$$fundef_39_env_120"*, { i8*, i8* }*)* @"$fundef_39" to { i8*, i8* }* (i8*, { i8*, i8* }*)*), i8* null }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_38"
  %"$$retval_38_142" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$retval_38"
  ret { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$retval_38_142"
}

define internal { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } @"$fundef_35"(%"$$fundef_35_env_122"* %0) {
entry:
  %"$retval_36" = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })* bitcast ({ { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (%"$$fundef_37_env_121"*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })* @"$fundef_37" to { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*), i8* null }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %"$retval_36"
  %"$$retval_36_138" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* }* %"$retval_36"
  ret { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } %"$$retval_36_138"
}

define internal %Uint32 @"$fundef_33"(%"$$fundef_33_env_123"* %0, %Uint32 %1) {
entry:
  %"$retval_34" = alloca %Uint32
  store %Uint32 %1, %Uint32* %"$retval_34"
  %"$$retval_34_134" = load %Uint32, %Uint32* %"$retval_34"
  ret %Uint32 %"$$retval_34_134"
}

define internal { %Uint32 (i8*, %Uint32)*, i8* } @"$fundef_31"(%"$$fundef_31_env_124"* %0, { %Uint32 (i8*, %Uint32)*, i8* } %1) {
entry:
  %"$retval_32" = alloca { %Uint32 (i8*, %Uint32)*, i8* }
  store { %Uint32 (i8*, %Uint32)*, i8* } { %Uint32 (i8*, %Uint32)* bitcast (%Uint32 (%"$$fundef_33_env_123"*, %Uint32)* @"$fundef_33" to %Uint32 (i8*, %Uint32)*), i8* null }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$retval_32"
  %"$$retval_32_133" = load { %Uint32 (i8*, %Uint32)*, i8* }, { %Uint32 (i8*, %Uint32)*, i8* }* %"$retval_32"
  ret { %Uint32 (i8*, %Uint32)*, i8* } %"$$retval_32_133"
}

define internal { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } @"$fundef_29"(%"$$fundef_29_env_125"* %0) {
entry:
  %"$retval_30" = alloca { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }
  store { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })* bitcast ({ %Uint32 (i8*, %Uint32)*, i8* } (%"$$fundef_31_env_124"*, { %Uint32 (i8*, %Uint32)*, i8* })* @"$fundef_31" to { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*), i8* null }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %"$retval_30"
  %"$$retval_30_129" = load { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }, { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* }* %"$retval_30"
  ret { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } %"$$retval_30_129"
}

declare i8* @_salloc(i8*, i64)

declare %Uint32 @_add_Uint32(%Uint32, %Uint32)

define void @_init_libs() {
entry:
  ret void
}

define internal %Uint32 @"$scilla_expr_423"(i8* %0) {
entry:
  %"$expr_28" = alloca %Uint32
  %c0 = alloca { i8*, i8* }*
  store { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)* bitcast ({ { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (%"$$fundef_29_env_125"*)* @"$fundef_29" to { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*), i8* null }, { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }* bitcast ([2 x { i8*, i8* }]* @"$dyndisp_430" to { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }*)
  store { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)* bitcast ({ { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (%"$$fundef_35_env_122"*)* @"$fundef_35" to { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*), i8* null }, { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }* bitcast ({ i8*, i8* }* getelementptr inbounds ([2 x { i8*, i8* }], [2 x { i8*, i8* }]* @"$dyndisp_430", i32 0, i32 1) to { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }*)
  store { i8*, i8* }* getelementptr inbounds ([2 x { i8*, i8* }], [2 x { i8*, i8* }]* @"$dyndisp_430", i32 0, i32 0), { i8*, i8* }** %c0
  %c2 = alloca { i8*, i8* }*
  store { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* } { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)* bitcast ({ { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (%"$$fundef_41_env_119"*)* @"$fundef_41" to { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*), i8* null }, { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }* bitcast ([2 x { i8*, i8* }]* @"$dyndisp_437" to { { { %Uint32 (i8*, %Uint32)*, i8* } (i8*, { %Uint32 (i8*, %Uint32)*, i8* })*, i8* } (i8*)*, i8* }*)
  store { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* } { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)* bitcast ({ { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (%"$$fundef_47_env_116"*)* @"$fundef_47" to { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*), i8* null }, { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }* bitcast ({ i8*, i8* }* getelementptr inbounds ([2 x { i8*, i8* }], [2 x { i8*, i8* }]* @"$dyndisp_437", i32 0, i32 1) to { { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* })*, i8* } (i8*)*, i8* }*)
  store { i8*, i8* }* getelementptr inbounds ([2 x { i8*, i8* }], [2 x { i8*, i8* }]* @"$dyndisp_437", i32 0, i32 0), { i8*, i8* }** %c2
  %cadd = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)* bitcast ({ { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (%"$$fundef_53_env_113"*, { i8*, i8* }*)* @"$fundef_53" to { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*), i8* null }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %cmul = alloca { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }
  %"$$fundef_69_envp_441_load" = load i8*, i8** @_execptr
  %"$$fundef_69_envp_441_salloc" = call i8* @_salloc(i8* %"$$fundef_69_envp_441_load", i64 24)
  %"$$fundef_69_envp_441" = bitcast i8* %"$$fundef_69_envp_441_salloc" to %"$$fundef_69_env_105"*
  %"$$fundef_69_env_voidp_443" = bitcast %"$$fundef_69_env_105"* %"$$fundef_69_envp_441" to i8*
  %"$$fundef_69_cloval_444" = insertvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)* bitcast ({ { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (%"$$fundef_69_env_105"*, { i8*, i8* }*)* @"$fundef_69" to { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*), i8* undef }, i8* %"$$fundef_69_env_voidp_443", 1
  %"$$fundef_69_env_c0_445" = getelementptr inbounds %"$$fundef_69_env_105", %"$$fundef_69_env_105"* %"$$fundef_69_envp_441", i32 0, i32 0
  %"$c0_446" = load { i8*, i8* }*, { i8*, i8* }** %c0
  store { i8*, i8* }* %"$c0_446", { i8*, i8* }** %"$$fundef_69_env_c0_445"
  %"$$fundef_69_env_cadd_447" = getelementptr inbounds %"$$fundef_69_env_105", %"$$fundef_69_env_105"* %"$$fundef_69_envp_441", i32 0, i32 1
  %"$cadd_448" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_448", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %"$$fundef_69_env_cadd_447"
  store { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$$fundef_69_cloval_444", { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cmul
  %church_nat_to_uint32 = alloca { %Uint32 (i8*, { i8*, i8* }*)*, i8* }
  store { %Uint32 (i8*, { i8*, i8* }*)*, i8* } { %Uint32 (i8*, { i8*, i8* }*)* bitcast (%Uint32 (%"$$fundef_73_env_103"*, { i8*, i8* }*)* @"$fundef_73" to %Uint32 (i8*, { i8*, i8* }*)*), i8* null }, { %Uint32 (i8*, { i8*, i8* }*)*, i8* }* %church_nat_to_uint32
  %c4 = alloca { i8*, i8* }*
  %"$cmul_11" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cmul_452" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cmul
  %"$cmul_fptr_453" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_452", 0
  %"$cmul_envptr_454" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_452", 1
  %"$c2_455" = load { i8*, i8* }*, { i8*, i8* }** %c2
  %"$cmul_call_456" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_fptr_453"(i8* %"$cmul_envptr_454", { i8*, i8* }* %"$c2_455")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_call_456", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_11"
  %"$cmul_12" = alloca { i8*, i8* }*
  %"$$cmul_11_457" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_11"
  %"$$cmul_11_fptr_458" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_11_457", 0
  %"$$cmul_11_envptr_459" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_11_457", 1
  %"$c2_460" = load { i8*, i8* }*, { i8*, i8* }** %c2
  %"$$cmul_11_call_461" = call { i8*, i8* }* %"$$cmul_11_fptr_458"(i8* %"$$cmul_11_envptr_459", { i8*, i8* }* %"$c2_460")
  store { i8*, i8* }* %"$$cmul_11_call_461", { i8*, i8* }** %"$cmul_12"
  %"$$cmul_12_462" = load { i8*, i8* }*, { i8*, i8* }** %"$cmul_12"
  store { i8*, i8* }* %"$$cmul_12_462", { i8*, i8* }** %c4
  %c16 = alloca { i8*, i8* }*
  %"$cmul_13" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cmul_463" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cmul
  %"$cmul_fptr_464" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_463", 0
  %"$cmul_envptr_465" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_463", 1
  %"$c4_466" = load { i8*, i8* }*, { i8*, i8* }** %c4
  %"$cmul_call_467" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_fptr_464"(i8* %"$cmul_envptr_465", { i8*, i8* }* %"$c4_466")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_call_467", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_13"
  %"$cmul_14" = alloca { i8*, i8* }*
  %"$$cmul_13_468" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_13"
  %"$$cmul_13_fptr_469" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_13_468", 0
  %"$$cmul_13_envptr_470" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_13_468", 1
  %"$c4_471" = load { i8*, i8* }*, { i8*, i8* }** %c4
  %"$$cmul_13_call_472" = call { i8*, i8* }* %"$$cmul_13_fptr_469"(i8* %"$$cmul_13_envptr_470", { i8*, i8* }* %"$c4_471")
  store { i8*, i8* }* %"$$cmul_13_call_472", { i8*, i8* }** %"$cmul_14"
  %"$$cmul_14_473" = load { i8*, i8* }*, { i8*, i8* }** %"$cmul_14"
  store { i8*, i8* }* %"$$cmul_14_473", { i8*, i8* }** %c16
  %c32 = alloca { i8*, i8* }*
  %"$cadd_15" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cadd_474" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %"$cadd_fptr_475" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_474", 0
  %"$cadd_envptr_476" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_474", 1
  %"$c16_477" = load { i8*, i8* }*, { i8*, i8* }** %c16
  %"$cadd_call_478" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_fptr_475"(i8* %"$cadd_envptr_476", { i8*, i8* }* %"$c16_477")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_call_478", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_15"
  %"$cadd_16" = alloca { i8*, i8* }*
  %"$$cadd_15_479" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_15"
  %"$$cadd_15_fptr_480" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_15_479", 0
  %"$$cadd_15_envptr_481" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_15_479", 1
  %"$c16_482" = load { i8*, i8* }*, { i8*, i8* }** %c16
  %"$$cadd_15_call_483" = call { i8*, i8* }* %"$$cadd_15_fptr_480"(i8* %"$$cadd_15_envptr_481", { i8*, i8* }* %"$c16_482")
  store { i8*, i8* }* %"$$cadd_15_call_483", { i8*, i8* }** %"$cadd_16"
  %"$$cadd_16_484" = load { i8*, i8* }*, { i8*, i8* }** %"$cadd_16"
  store { i8*, i8* }* %"$$cadd_16_484", { i8*, i8* }** %c32
  %c128 = alloca { i8*, i8* }*
  %"$cmul_17" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cmul_485" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cmul
  %"$cmul_fptr_486" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_485", 0
  %"$cmul_envptr_487" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_485", 1
  %"$c4_488" = load { i8*, i8* }*, { i8*, i8* }** %c4
  %"$cmul_call_489" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_fptr_486"(i8* %"$cmul_envptr_487", { i8*, i8* }* %"$c4_488")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_call_489", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_17"
  %"$cmul_18" = alloca { i8*, i8* }*
  %"$$cmul_17_490" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_17"
  %"$$cmul_17_fptr_491" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_17_490", 0
  %"$$cmul_17_envptr_492" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_17_490", 1
  %"$c32_493" = load { i8*, i8* }*, { i8*, i8* }** %c32
  %"$$cmul_17_call_494" = call { i8*, i8* }* %"$$cmul_17_fptr_491"(i8* %"$$cmul_17_envptr_492", { i8*, i8* }* %"$c32_493")
  store { i8*, i8* }* %"$$cmul_17_call_494", { i8*, i8* }** %"$cmul_18"
  %"$$cmul_18_495" = load { i8*, i8* }*, { i8*, i8* }** %"$cmul_18"
  store { i8*, i8* }* %"$$cmul_18_495", { i8*, i8* }** %c128
  %c256 = alloca { i8*, i8* }*
  %"$cmul_19" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cmul_496" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cmul
  %"$cmul_fptr_497" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_496", 0
  %"$cmul_envptr_498" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_496", 1
  %"$c4_499" = load { i8*, i8* }*, { i8*, i8* }** %c4
  %"$cmul_call_500" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_fptr_497"(i8* %"$cmul_envptr_498", { i8*, i8* }* %"$c4_499")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_call_500", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_19"
  %"$cmul_20" = alloca { i8*, i8* }*
  %"$$cmul_19_501" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_19"
  %"$$cmul_19_fptr_502" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_19_501", 0
  %"$$cmul_19_envptr_503" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_19_501", 1
  %"$c4_504" = load { i8*, i8* }*, { i8*, i8* }** %c4
  %"$$cmul_19_call_505" = call { i8*, i8* }* %"$$cmul_19_fptr_502"(i8* %"$$cmul_19_envptr_503", { i8*, i8* }* %"$c4_504")
  store { i8*, i8* }* %"$$cmul_19_call_505", { i8*, i8* }** %"$cmul_20"
  %"$$cmul_20_506" = load { i8*, i8* }*, { i8*, i8* }** %"$cmul_20"
  store { i8*, i8* }* %"$$cmul_20_506", { i8*, i8* }** %c256
  %c256a = alloca { i8*, i8* }*
  %"$cadd_21" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cadd_507" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %"$cadd_fptr_508" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_507", 0
  %"$cadd_envptr_509" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_507", 1
  %"$c128_510" = load { i8*, i8* }*, { i8*, i8* }** %c128
  %"$cadd_call_511" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_fptr_508"(i8* %"$cadd_envptr_509", { i8*, i8* }* %"$c128_510")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_call_511", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_21"
  %"$cadd_22" = alloca { i8*, i8* }*
  %"$$cadd_21_512" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_21"
  %"$$cadd_21_fptr_513" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_21_512", 0
  %"$$cadd_21_envptr_514" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_21_512", 1
  %"$c128_515" = load { i8*, i8* }*, { i8*, i8* }** %c128
  %"$$cadd_21_call_516" = call { i8*, i8* }* %"$$cadd_21_fptr_513"(i8* %"$$cadd_21_envptr_514", { i8*, i8* }* %"$c128_515")
  store { i8*, i8* }* %"$$cadd_21_call_516", { i8*, i8* }** %"$cadd_22"
  %"$$cadd_22_517" = load { i8*, i8* }*, { i8*, i8* }** %"$cadd_22"
  store { i8*, i8* }* %"$$cadd_22_517", { i8*, i8* }** %c256a
  %c65536 = alloca { i8*, i8* }*
  %"$cmul_23" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cmul_518" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cmul
  %"$cmul_fptr_519" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_518", 0
  %"$cmul_envptr_520" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cmul_518", 1
  %"$c256_521" = load { i8*, i8* }*, { i8*, i8* }** %c256
  %"$cmul_call_522" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_fptr_519"(i8* %"$cmul_envptr_520", { i8*, i8* }* %"$c256_521")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cmul_call_522", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_23"
  %"$cmul_24" = alloca { i8*, i8* }*
  %"$$cmul_23_523" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cmul_23"
  %"$$cmul_23_fptr_524" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_23_523", 0
  %"$$cmul_23_envptr_525" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cmul_23_523", 1
  %"$c256a_526" = load { i8*, i8* }*, { i8*, i8* }** %c256a
  %"$$cmul_23_call_527" = call { i8*, i8* }* %"$$cmul_23_fptr_524"(i8* %"$$cmul_23_envptr_525", { i8*, i8* }* %"$c256a_526")
  store { i8*, i8* }* %"$$cmul_23_call_527", { i8*, i8* }** %"$cmul_24"
  %"$$cmul_24_528" = load { i8*, i8* }*, { i8*, i8* }** %"$cmul_24"
  store { i8*, i8* }* %"$$cmul_24_528", { i8*, i8* }** %c65536
  %c131072 = alloca { i8*, i8* }*
  %"$cadd_25" = alloca { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }
  %"$cadd_529" = load { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }, { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* }* %cadd
  %"$cadd_fptr_530" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_529", 0
  %"$cadd_envptr_531" = extractvalue { { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } (i8*, { i8*, i8* }*)*, i8* } %"$cadd_529", 1
  %"$c65536_532" = load { i8*, i8* }*, { i8*, i8* }** %c65536
  %"$cadd_call_533" = call { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_fptr_530"(i8* %"$cadd_envptr_531", { i8*, i8* }* %"$c65536_532")
  store { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$cadd_call_533", { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_25"
  %"$cadd_26" = alloca { i8*, i8* }*
  %"$$cadd_25_534" = load { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }, { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* }* %"$cadd_25"
  %"$$cadd_25_fptr_535" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_25_534", 0
  %"$$cadd_25_envptr_536" = extractvalue { { i8*, i8* }* (i8*, { i8*, i8* }*)*, i8* } %"$$cadd_25_534", 1
  %"$c65536_537" = load { i8*, i8* }*, { i8*, i8* }** %c65536
  %"$$cadd_25_call_538" = call { i8*, i8* }* %"$$cadd_25_fptr_535"(i8* %"$$cadd_25_envptr_536", { i8*, i8* }* %"$c65536_537")
  store { i8*, i8* }* %"$$cadd_25_call_538", { i8*, i8* }** %"$cadd_26"
  %"$$cadd_26_539" = load { i8*, i8* }*, { i8*, i8* }** %"$cadd_26"
  store { i8*, i8* }* %"$$cadd_26_539", { i8*, i8* }** %c131072
  %"$church_nat_to_uint32_27" = alloca %Uint32
  %"$church_nat_to_uint32_540" = load { %Uint32 (i8*, { i8*, i8* }*)*, i8* }, { %Uint32 (i8*, { i8*, i8* }*)*, i8* }* %church_nat_to_uint32
  %"$church_nat_to_uint32_fptr_541" = extractvalue { %Uint32 (i8*, { i8*, i8* }*)*, i8* } %"$church_nat_to_uint32_540", 0
  %"$church_nat_to_uint32_envptr_542" = extractvalue { %Uint32 (i8*, { i8*, i8* }*)*, i8* } %"$church_nat_to_uint32_540", 1
  %"$c131072_543" = load { i8*, i8* }*, { i8*, i8* }** %c131072
  %"$church_nat_to_uint32_call_544" = call %Uint32 %"$church_nat_to_uint32_fptr_541"(i8* %"$church_nat_to_uint32_envptr_542", { i8*, i8* }* %"$c131072_543")
  store %Uint32 %"$church_nat_to_uint32_call_544", %Uint32* %"$church_nat_to_uint32_27"
  %"$$church_nat_to_uint32_27_545" = load %Uint32, %Uint32* %"$church_nat_to_uint32_27"
  store %Uint32 %"$$church_nat_to_uint32_27_545", %Uint32* %"$expr_28"
  %"$$expr_28_546" = load %Uint32, %Uint32* %"$expr_28"
  ret %Uint32 %"$$expr_28_546"
}

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$exprval_547" = call %Uint32 @"$scilla_expr_423"(i8* null)
  %"$pval_548" = alloca %Uint32
  %"$memvoidcast_549" = bitcast %Uint32* %"$pval_548" to i8*
  store %Uint32 %"$exprval_547", %Uint32* %"$pval_548"
  call void @_print_scilla_val(%_TyDescrTy_Typ* @"$TyDescr_Uint32_81", i8* %"$memvoidcast_549")
  ret void
}
