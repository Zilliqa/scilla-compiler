Closure converted AST:
fundef ($fundef_3 : [List (Option (Int32))] -> Int32) ((p : List (Option (Int32))) : List (Option (Int32)))
environment: ((z : Int32) : Int32)
body:
  (z : Int32) <- [$fundef_3]((z : Int32))
  match (p : List (Option (Int32))) with
  | Nil =>
    ($retval_4 : Int32) = (z : Int32)
  | Cons ($p_0 : Option (Int32)) (xs : List (Option (Int32))) =>
    match ($p_0 : Option (Int32)) with
    | Some (x : Int32) =>
      ($retval_4 : Int32) = (x : Int32)
    | _ =>
      jump ($joinp_1 : Int32)
    join ($joinp_1 : Int32) =>
      ($retval_4 : Int32) = (z : Int32)
  ret ($retval_4 : Int32)

expr_body:
  (z : Int32) = (Int32 1)
  allocate_closure_env $fundef_3
  [$fundef_3]((z : Int32)) <- (z : Int32)
  (f : [List (Option (Int32))] -> Int32) = [($fundef_3 : [List (Option (Int32))] -> Int32)]
  ($expr_2 : [List (Option (Int32))] -> Int32) = (f : [List (Option (Int32))] -> Int32)
  ret ($expr_2 : [List (Option (Int32))] -> Int32)
