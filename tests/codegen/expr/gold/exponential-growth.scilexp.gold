Instantiating at (codegen/expr/exponential-growth.scilexp,4,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,4,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,4,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,4,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,4,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,4,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,5,3) with type: Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,11,3) with type: Int64 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,11,3) with type: Int64 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,11,3) with type: Int32 -> Int64
Instantiating at (codegen/expr/exponential-growth.scilexp,11,3) with type: Int32 -> Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,11,3) with type: Int32
Instantiating at (codegen/expr/exponential-growth.scilexp,11,3) with type: Int64
Closure converted AST:
fundef ($fundef_2 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> 'C] -> List ([[Int64] -> Int64] -> 'C)))) ()
environment: ()
body:
  ($retval_3 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> 'C] -> List ([[Int64] -> Int64] -> 'C))) = [[Int64] -> Int64 -> ($fundef_4 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64))))); [Int64] -> Int32 -> ($fundef_8 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32))))); [Int32] -> Int64 -> ($fundef_12 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64))))); [Int32] -> Int32 -> ($fundef_16 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32))))); Int32 -> ($fundef_20 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32)))); Int64 -> ($fundef_24 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64))))]
  ret ($retval_3 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> 'C] -> List ([[Int64] -> Int64] -> 'C)))

fundef ($fundef_4 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64))))) ()
environment: ()
body:
  ($retval_5 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64)))) = [($fundef_6 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64))))]
  ret ($retval_5 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64))))

fundef ($fundef_6 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_7 : [[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int64] -> ([Int64] -> Int64)
  ret ($retval_7 : [[[Int64] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int64)))

fundef ($fundef_8 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32))))) ()
environment: ()
body:
  ($retval_9 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32)))) = [($fundef_10 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32))))]
  ret ($retval_9 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32))))

fundef ($fundef_10 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_11 : [[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int64] -> ([Int64] -> Int32)
  ret ($retval_11 : [[[Int64] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int64] -> Int32)))

fundef ($fundef_12 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64))))) ()
environment: ()
body:
  ($retval_13 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64)))) = [($fundef_14 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64))))]
  ret ($retval_13 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64))))

fundef ($fundef_14 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_15 : [[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int64] -> ([Int32] -> Int64)
  ret ($retval_15 : [[[Int64] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int64)))

fundef ($fundef_16 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32))))) ()
environment: ()
body:
  ($retval_17 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32)))) = [($fundef_18 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32))))]
  ret ($retval_17 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32))))

fundef ($fundef_18 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_19 : [[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int64] -> ([Int32] -> Int32)
  ret ($retval_19 : [[[Int64] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int64] -> ([Int32] -> Int32)))

fundef ($fundef_20 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32)))) ()
environment: ()
body:
  ($retval_21 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32))) = [($fundef_22 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32)))]
  ret ($retval_21 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32)))

fundef ($fundef_22 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_23 : [[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32)) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int64] -> Int32
  ret ($retval_23 : [[[Int64] -> Int64] -> Int32] -> List ([[Int64] -> Int64] -> Int32))

fundef ($fundef_24 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64)))) ()
environment: ()
body:
  ($retval_25 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64))) = [($fundef_26 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64)))]
  ret ($retval_25 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64)))

fundef ($fundef_26 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_27 : [[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64)) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int64] -> Int64
  ret ($retval_27 : [[[Int64] -> Int64] -> Int64] -> List ([[Int64] -> Int64] -> Int64))

fundef ($fundef_28 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> 'C] -> List ([[Int64] -> Int32] -> 'C)))) ()
environment: ()
body:
  ($retval_29 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> 'C] -> List ([[Int64] -> Int32] -> 'C))) = [[Int64] -> Int64 -> ($fundef_30 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64))))); [Int64] -> Int32 -> ($fundef_34 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32))))); [Int32] -> Int64 -> ($fundef_38 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64))))); [Int32] -> Int32 -> ($fundef_42 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32))))); Int32 -> ($fundef_46 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32)))); Int64 -> ($fundef_50 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64))))]
  ret ($retval_29 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> 'C] -> List ([[Int64] -> Int32] -> 'C)))

fundef ($fundef_30 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64))))) ()
environment: ()
body:
  ($retval_31 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64)))) = [($fundef_32 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64))))]
  ret ($retval_31 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64))))

fundef ($fundef_32 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_33 : [[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int32] -> ([Int64] -> Int64)
  ret ($retval_33 : [[[Int64] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int64)))

fundef ($fundef_34 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32))))) ()
environment: ()
body:
  ($retval_35 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32)))) = [($fundef_36 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32))))]
  ret ($retval_35 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32))))

fundef ($fundef_36 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_37 : [[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int32] -> ([Int64] -> Int32)
  ret ($retval_37 : [[[Int64] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int64] -> Int32)))

fundef ($fundef_38 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64))))) ()
environment: ()
body:
  ($retval_39 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64)))) = [($fundef_40 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64))))]
  ret ($retval_39 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64))))

fundef ($fundef_40 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_41 : [[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int32] -> ([Int32] -> Int64)
  ret ($retval_41 : [[[Int64] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int64)))

fundef ($fundef_42 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32))))) ()
environment: ()
body:
  ($retval_43 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32)))) = [($fundef_44 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32))))]
  ret ($retval_43 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32))))

fundef ($fundef_44 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_45 : [[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int32] -> ([Int32] -> Int32)
  ret ($retval_45 : [[[Int64] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int64] -> Int32] -> ([Int32] -> Int32)))

fundef ($fundef_46 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32)))) ()
environment: ()
body:
  ($retval_47 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32))) = [($fundef_48 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32)))]
  ret ($retval_47 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32)))

fundef ($fundef_48 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_49 : [[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32)) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int32] -> Int32
  ret ($retval_49 : [[[Int64] -> Int32] -> Int32] -> List ([[Int64] -> Int32] -> Int32))

fundef ($fundef_50 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64)))) ()
environment: ()
body:
  ($retval_51 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64))) = [($fundef_52 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64)))]
  ret ($retval_51 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64)))

fundef ($fundef_52 : [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_53 : [[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64)) = (f : forall 'A. ['A] -> List ('A)) [[Int64] -> Int32] -> Int64
  ret ($retval_53 : [[[Int64] -> Int32] -> Int64] -> List ([[Int64] -> Int32] -> Int64))

fundef ($fundef_54 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> 'C] -> List ([[Int32] -> Int64] -> 'C)))) ()
environment: ()
body:
  ($retval_55 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> 'C] -> List ([[Int32] -> Int64] -> 'C))) = [[Int64] -> Int64 -> ($fundef_56 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64))))); [Int64] -> Int32 -> ($fundef_60 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32))))); [Int32] -> Int64 -> ($fundef_64 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64))))); [Int32] -> Int32 -> ($fundef_68 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32))))); Int32 -> ($fundef_72 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32)))); Int64 -> ($fundef_76 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64))))]
  ret ($retval_55 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> 'C] -> List ([[Int32] -> Int64] -> 'C)))

fundef ($fundef_56 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64))))) ()
environment: ()
body:
  ($retval_57 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64)))) = [($fundef_58 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64))))]
  ret ($retval_57 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64))))

fundef ($fundef_58 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_59 : [[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int64] -> ([Int64] -> Int64)
  ret ($retval_59 : [[[Int32] -> Int64] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int64)))

fundef ($fundef_60 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32))))) ()
environment: ()
body:
  ($retval_61 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32)))) = [($fundef_62 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32))))]
  ret ($retval_61 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32))))

fundef ($fundef_62 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_63 : [[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int64] -> ([Int64] -> Int32)
  ret ($retval_63 : [[[Int32] -> Int64] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int64] -> Int32)))

fundef ($fundef_64 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64))))) ()
environment: ()
body:
  ($retval_65 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64)))) = [($fundef_66 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64))))]
  ret ($retval_65 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64))))

fundef ($fundef_66 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_67 : [[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int64] -> ([Int32] -> Int64)
  ret ($retval_67 : [[[Int32] -> Int64] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int64)))

fundef ($fundef_68 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32))))) ()
environment: ()
body:
  ($retval_69 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32)))) = [($fundef_70 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32))))]
  ret ($retval_69 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32))))

fundef ($fundef_70 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_71 : [[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int64] -> ([Int32] -> Int32)
  ret ($retval_71 : [[[Int32] -> Int64] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int64] -> ([Int32] -> Int32)))

fundef ($fundef_72 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32)))) ()
environment: ()
body:
  ($retval_73 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32))) = [($fundef_74 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32)))]
  ret ($retval_73 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32)))

fundef ($fundef_74 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_75 : [[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32)) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int64] -> Int32
  ret ($retval_75 : [[[Int32] -> Int64] -> Int32] -> List ([[Int32] -> Int64] -> Int32))

fundef ($fundef_76 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64)))) ()
environment: ()
body:
  ($retval_77 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64))) = [($fundef_78 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64)))]
  ret ($retval_77 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64)))

fundef ($fundef_78 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_79 : [[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64)) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int64] -> Int64
  ret ($retval_79 : [[[Int32] -> Int64] -> Int64] -> List ([[Int32] -> Int64] -> Int64))

fundef ($fundef_80 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> 'C] -> List ([[Int32] -> Int32] -> 'C)))) ()
environment: ()
body:
  ($retval_81 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> 'C] -> List ([[Int32] -> Int32] -> 'C))) = [[Int64] -> Int64 -> ($fundef_82 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64))))); [Int64] -> Int32 -> ($fundef_86 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32))))); [Int32] -> Int64 -> ($fundef_90 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64))))); [Int32] -> Int32 -> ($fundef_94 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32))))); Int32 -> ($fundef_98 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32)))); Int64 -> ($fundef_102 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64))))]
  ret ($retval_81 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> 'C] -> List ([[Int32] -> Int32] -> 'C)))

fundef ($fundef_82 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64))))) ()
environment: ()
body:
  ($retval_83 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64)))) = [($fundef_84 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64))))]
  ret ($retval_83 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64))))

fundef ($fundef_84 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_85 : [[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int32] -> ([Int64] -> Int64)
  ret ($retval_85 : [[[Int32] -> Int32] -> ([Int64] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int64)))

fundef ($fundef_86 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32))))) ()
environment: ()
body:
  ($retval_87 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32)))) = [($fundef_88 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32))))]
  ret ($retval_87 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32))))

fundef ($fundef_88 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_89 : [[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int32] -> ([Int64] -> Int32)
  ret ($retval_89 : [[[Int32] -> Int32] -> ([Int64] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int64] -> Int32)))

fundef ($fundef_90 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64))))) ()
environment: ()
body:
  ($retval_91 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64)))) = [($fundef_92 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64))))]
  ret ($retval_91 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64))))

fundef ($fundef_92 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_93 : [[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int32] -> ([Int32] -> Int64)
  ret ($retval_93 : [[[Int32] -> Int32] -> ([Int32] -> Int64)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int64)))

fundef ($fundef_94 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32))))) ()
environment: ()
body:
  ($retval_95 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32)))) = [($fundef_96 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32))))]
  ret ($retval_95 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32))))

fundef ($fundef_96 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_97 : [[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int32] -> ([Int32] -> Int32)
  ret ($retval_97 : [[[Int32] -> Int32] -> ([Int32] -> Int32)] -> List ([[Int32] -> Int32] -> ([Int32] -> Int32)))

fundef ($fundef_98 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32)))) ()
environment: ()
body:
  ($retval_99 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32))) = [($fundef_100 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32)))]
  ret ($retval_99 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32)))

fundef ($fundef_100 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_101 : [[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32)) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int32] -> Int32
  ret ($retval_101 : [[[Int32] -> Int32] -> Int32] -> List ([[Int32] -> Int32] -> Int32))

fundef ($fundef_102 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64)))) ()
environment: ()
body:
  ($retval_103 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64))) = [($fundef_104 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64)))]
  ret ($retval_103 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64)))

fundef ($fundef_104 : [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_105 : [[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64)) = (f : forall 'A. ['A] -> List ('A)) [[Int32] -> Int32] -> Int64
  ret ($retval_105 : [[[Int32] -> Int32] -> Int64] -> List ([[Int32] -> Int32] -> Int64))

fundef ($fundef_106 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> 'C] -> List ([Int32] -> 'C)))) ()
environment: ()
body:
  ($retval_107 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> 'C] -> List ([Int32] -> 'C))) = [[Int64] -> Int64 -> ($fundef_108 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64))))); [Int64] -> Int32 -> ($fundef_112 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32))))); [Int32] -> Int64 -> ($fundef_116 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64))))); [Int32] -> Int32 -> ($fundef_120 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32))))); Int32 -> ($fundef_124 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32)))); Int64 -> ($fundef_128 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))))]
  ret ($retval_107 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> 'C] -> List ([Int32] -> 'C)))

fundef ($fundef_108 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64))))) ()
environment: ()
body:
  ($retval_109 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64)))) = [($fundef_110 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64))))]
  ret ($retval_109 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64))))

fundef ($fundef_110 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_111 : [[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [Int32] -> ([Int64] -> Int64)
  ret ($retval_111 : [[Int32] -> ([Int64] -> Int64)] -> List ([Int32] -> ([Int64] -> Int64)))

fundef ($fundef_112 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32))))) ()
environment: ()
body:
  ($retval_113 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32)))) = [($fundef_114 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32))))]
  ret ($retval_113 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32))))

fundef ($fundef_114 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_115 : [[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [Int32] -> ([Int64] -> Int32)
  ret ($retval_115 : [[Int32] -> ([Int64] -> Int32)] -> List ([Int32] -> ([Int64] -> Int32)))

fundef ($fundef_116 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64))))) ()
environment: ()
body:
  ($retval_117 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64)))) = [($fundef_118 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64))))]
  ret ($retval_117 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64))))

fundef ($fundef_118 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_119 : [[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [Int32] -> ([Int32] -> Int64)
  ret ($retval_119 : [[Int32] -> ([Int32] -> Int64)] -> List ([Int32] -> ([Int32] -> Int64)))

fundef ($fundef_120 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32))))) ()
environment: ()
body:
  ($retval_121 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32)))) = [($fundef_122 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32))))]
  ret ($retval_121 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32))))

fundef ($fundef_122 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_123 : [[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [Int32] -> ([Int32] -> Int32)
  ret ($retval_123 : [[Int32] -> ([Int32] -> Int32)] -> List ([Int32] -> ([Int32] -> Int32)))

fundef ($fundef_124 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32)))) ()
environment: ()
body:
  ($retval_125 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32))) = [($fundef_126 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32)))]
  ret ($retval_125 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32)))

fundef ($fundef_126 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_127 : [[Int32] -> Int32] -> List ([Int32] -> Int32)) = (f : forall 'A. ['A] -> List ('A)) [Int32] -> Int32
  ret ($retval_127 : [[Int32] -> Int32] -> List ([Int32] -> Int32))

fundef ($fundef_128 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64)))) ()
environment: ()
body:
  ($retval_129 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))) = [($fundef_130 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64)))]
  ret ($retval_129 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64)))

fundef ($fundef_130 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_131 : [[Int32] -> Int64] -> List ([Int32] -> Int64)) = (f : forall 'A. ['A] -> List ('A)) [Int32] -> Int64
  ret ($retval_131 : [[Int32] -> Int64] -> List ([Int32] -> Int64))

fundef ($fundef_132 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> 'C] -> List ([Int64] -> 'C)))) ()
environment: ()
body:
  ($retval_133 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> 'C] -> List ([Int64] -> 'C))) = [[Int64] -> Int64 -> ($fundef_134 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64))))); [Int64] -> Int32 -> ($fundef_138 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32))))); [Int32] -> Int64 -> ($fundef_142 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64))))); [Int32] -> Int32 -> ($fundef_146 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32))))); Int32 -> ($fundef_150 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32)))); Int64 -> ($fundef_154 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64))))]
  ret ($retval_133 : forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> 'C] -> List ([Int64] -> 'C)))

fundef ($fundef_134 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64))))) ()
environment: ()
body:
  ($retval_135 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64)))) = [($fundef_136 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64))))]
  ret ($retval_135 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64))))

fundef ($fundef_136 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_137 : [[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [Int64] -> ([Int64] -> Int64)
  ret ($retval_137 : [[Int64] -> ([Int64] -> Int64)] -> List ([Int64] -> ([Int64] -> Int64)))

fundef ($fundef_138 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32))))) ()
environment: ()
body:
  ($retval_139 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32)))) = [($fundef_140 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32))))]
  ret ($retval_139 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32))))

fundef ($fundef_140 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_141 : [[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [Int64] -> ([Int64] -> Int32)
  ret ($retval_141 : [[Int64] -> ([Int64] -> Int32)] -> List ([Int64] -> ([Int64] -> Int32)))

fundef ($fundef_142 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64))))) ()
environment: ()
body:
  ($retval_143 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64)))) = [($fundef_144 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64))))]
  ret ($retval_143 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64))))

fundef ($fundef_144 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_145 : [[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64))) = (f : forall 'A. ['A] -> List ('A)) [Int64] -> ([Int32] -> Int64)
  ret ($retval_145 : [[Int64] -> ([Int32] -> Int64)] -> List ([Int64] -> ([Int32] -> Int64)))

fundef ($fundef_146 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32))))) ()
environment: ()
body:
  ($retval_147 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32)))) = [($fundef_148 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32))))]
  ret ($retval_147 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32))))

fundef ($fundef_148 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32)))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_149 : [[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32))) = (f : forall 'A. ['A] -> List ('A)) [Int64] -> ([Int32] -> Int32)
  ret ($retval_149 : [[Int64] -> ([Int32] -> Int32)] -> List ([Int64] -> ([Int32] -> Int32)))

fundef ($fundef_150 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32)))) ()
environment: ()
body:
  ($retval_151 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32))) = [($fundef_152 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32)))]
  ret ($retval_151 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32)))

fundef ($fundef_152 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_153 : [[Int64] -> Int32] -> List ([Int64] -> Int32)) = (f : forall 'A. ['A] -> List ('A)) [Int64] -> Int32
  ret ($retval_153 : [[Int64] -> Int32] -> List ([Int64] -> Int32))

fundef ($fundef_154 : [()] -> ([forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64)))) ()
environment: ()
body:
  ($retval_155 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64))) = [($fundef_156 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64)))]
  ret ($retval_155 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64)))

fundef ($fundef_156 : [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64))) ((f : forall 'A. ['A] -> List ('A)) : forall 'A. ['A] -> List ('A))
environment: ()
body:
  ($retval_157 : [[Int64] -> Int64] -> List ([Int64] -> Int64)) = (f : forall 'A. ['A] -> List ('A)) [Int64] -> Int64
  ret ($retval_157 : [[Int64] -> Int64] -> List ([Int64] -> Int64))

fundef ($fundef_158 : [()] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64))) ()
environment: ()
body:
  ($retval_159 : [[Int64] -> Int64] -> List ([Int64] -> Int64)) = [($fundef_160 : [[Int64] -> Int64] -> List ([Int64] -> Int64))]
  ret ($retval_159 : [[Int64] -> Int64] -> List ([Int64] -> Int64))

fundef ($fundef_160 : [[Int64] -> Int64] -> List ([Int64] -> Int64)) ((a : [Int64] -> Int64) : [Int64] -> Int64)
environment: ()
body:
  (an : List ([Int64] -> Int64)) = Nil { [Int64] -> Int64 }
  ($retval_161 : List ([Int64] -> Int64)) = Cons { [Int64] -> Int64 }(a : [Int64] -> Int64) (an : List ([Int64] -> Int64))
  ret ($retval_161 : List ([Int64] -> Int64))

fundef ($fundef_162 : [()] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32))) ()
environment: ()
body:
  ($retval_163 : [[Int64] -> Int32] -> List ([Int64] -> Int32)) = [($fundef_164 : [[Int64] -> Int32] -> List ([Int64] -> Int32))]
  ret ($retval_163 : [[Int64] -> Int32] -> List ([Int64] -> Int32))

fundef ($fundef_164 : [[Int64] -> Int32] -> List ([Int64] -> Int32)) ((a : [Int64] -> Int32) : [Int64] -> Int32)
environment: ()
body:
  (an : List ([Int64] -> Int32)) = Nil { [Int64] -> Int32 }
  ($retval_165 : List ([Int64] -> Int32)) = Cons { [Int64] -> Int32 }(a : [Int64] -> Int32) (an : List ([Int64] -> Int32))
  ret ($retval_165 : List ([Int64] -> Int32))

fundef ($fundef_166 : [()] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))) ()
environment: ()
body:
  ($retval_167 : [[Int32] -> Int64] -> List ([Int32] -> Int64)) = [($fundef_168 : [[Int32] -> Int64] -> List ([Int32] -> Int64))]
  ret ($retval_167 : [[Int32] -> Int64] -> List ([Int32] -> Int64))

fundef ($fundef_168 : [[Int32] -> Int64] -> List ([Int32] -> Int64)) ((a : [Int32] -> Int64) : [Int32] -> Int64)
environment: ()
body:
  (an : List ([Int32] -> Int64)) = Nil { [Int32] -> Int64 }
  ($retval_169 : List ([Int32] -> Int64)) = Cons { [Int32] -> Int64 }(a : [Int32] -> Int64) (an : List ([Int32] -> Int64))
  ret ($retval_169 : List ([Int32] -> Int64))

fundef ($fundef_170 : [()] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32))) ()
environment: ()
body:
  ($retval_171 : [[Int32] -> Int32] -> List ([Int32] -> Int32)) = [($fundef_172 : [[Int32] -> Int32] -> List ([Int32] -> Int32))]
  ret ($retval_171 : [[Int32] -> Int32] -> List ([Int32] -> Int32))

fundef ($fundef_172 : [[Int32] -> Int32] -> List ([Int32] -> Int32)) ((a : [Int32] -> Int32) : [Int32] -> Int32)
environment: ()
body:
  (an : List ([Int32] -> Int32)) = Nil { [Int32] -> Int32 }
  ($retval_173 : List ([Int32] -> Int32)) = Cons { [Int32] -> Int32 }(a : [Int32] -> Int32) (an : List ([Int32] -> Int32))
  ret ($retval_173 : List ([Int32] -> Int32))

fundef ($fundef_174 : [()] -> ([Int32] -> List (Int32))) ()
environment: ()
body:
  ($retval_175 : [Int32] -> List (Int32)) = [($fundef_176 : [Int32] -> List (Int32))]
  ret ($retval_175 : [Int32] -> List (Int32))

fundef ($fundef_176 : [Int32] -> List (Int32)) ((a : Int32) : Int32)
environment: ()
body:
  (an : List (Int32)) = Nil { Int32 }
  ($retval_177 : List (Int32)) = Cons { Int32 }(a : Int32) (an : List (Int32))
  ret ($retval_177 : List (Int32))

fundef ($fundef_178 : [()] -> ([Int64] -> List (Int64))) ()
environment: ()
body:
  ($retval_179 : [Int64] -> List (Int64)) = [($fundef_180 : [Int64] -> List (Int64))]
  ret ($retval_179 : [Int64] -> List (Int64))

fundef ($fundef_180 : [Int64] -> List (Int64)) ((a : Int64) : Int64)
environment: ()
body:
  (an : List (Int64)) = Nil { Int64 }
  ($retval_181 : List (Int64)) = Cons { Int64 }(a : Int64) (an : List (Int64))
  ret ($retval_181 : List (Int64))

expr_body:
  (t : forall 'B. forall 'C. [forall 'A. ['A] -> List ('A)] -> ([['B] -> 'C] -> List (['B] -> 'C))) = [[Int64] -> Int64 -> ($fundef_2 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int64] -> 'C] -> List ([[Int64] -> Int64] -> 'C)))); [Int64] -> Int32 -> ($fundef_28 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int64] -> Int32] -> 'C] -> List ([[Int64] -> Int32] -> 'C)))); [Int32] -> Int64 -> ($fundef_54 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int64] -> 'C] -> List ([[Int32] -> Int64] -> 'C)))); [Int32] -> Int32 -> ($fundef_80 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[[Int32] -> Int32] -> 'C] -> List ([[Int32] -> Int32] -> 'C)))); Int32 -> ($fundef_106 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> 'C] -> List ([Int32] -> 'C)))); Int64 -> ($fundef_132 : [()] -> (forall 'C. [forall 'A. ['A] -> List ('A)] -> ([[Int64] -> 'C] -> List ([Int64] -> 'C))))]
  (t1 : forall 'A. ['A] -> List ('A)) = [[Int64] -> Int64 -> ($fundef_158 : [()] -> ([[Int64] -> Int64] -> List ([Int64] -> Int64))); [Int64] -> Int32 -> ($fundef_162 : [()] -> ([[Int64] -> Int32] -> List ([Int64] -> Int32))); [Int32] -> Int64 -> ($fundef_166 : [()] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))); [Int32] -> Int32 -> ($fundef_170 : [()] -> ([[Int32] -> Int32] -> List ([Int32] -> Int32))); Int32 -> ($fundef_174 : [()] -> ([Int32] -> List (Int32))); Int64 -> ($fundef_178 : [()] -> ([Int64] -> List (Int64)))]
  (f11 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))) = (t : forall 'B. forall 'C. [forall 'A. ['A] -> List ('A)] -> ([['B] -> 'C] -> List (['B] -> 'C))) Int32 Int64
  ($f11_0 : [[Int32] -> Int64] -> List ([Int32] -> Int64)) = (f11 : [forall 'A. ['A] -> List ('A)] -> ([[Int32] -> Int64] -> List ([Int32] -> Int64))) (t1 : forall 'A. ['A] -> List ('A))
  (f12 : [[Int32] -> Int64] -> List ([Int32] -> Int64)) = ($f11_0 : [[Int32] -> Int64] -> List ([Int32] -> Int64))
  ($expr_1 : [[Int32] -> Int64] -> List ([Int32] -> Int64)) = (f12 : [[Int32] -> Int64] -> List ([Int32] -> Int64))
  ret ($expr_1 : [[Int32] -> Int64] -> List ([Int32] -> Int64))
