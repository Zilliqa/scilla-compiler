; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"$TyDescrTy_PrimTyp_4" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$$fundef_2_env_37" = type {}
%Uint256 = type { i256 }

@_execptr = global i8* null
@_gasrem = global i64 0
@"$TyDescr_Int32_Prim_5" = global %"$TyDescrTy_PrimTyp_4" zeroinitializer
@"$TyDescr_Int32_6" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int32_Prim_5" to i8*) }
@"$TyDescr_Uint32_Prim_7" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 0 }
@"$TyDescr_Uint32_8" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint32_Prim_7" to i8*) }
@"$TyDescr_Int64_Prim_9" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 1 }
@"$TyDescr_Int64_10" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int64_Prim_9" to i8*) }
@"$TyDescr_Uint64_Prim_11" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 1 }
@"$TyDescr_Uint64_12" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint64_Prim_11" to i8*) }
@"$TyDescr_Int128_Prim_13" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 2 }
@"$TyDescr_Int128_14" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int128_Prim_13" to i8*) }
@"$TyDescr_Uint128_Prim_15" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 2 }
@"$TyDescr_Uint128_16" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint128_Prim_15" to i8*) }
@"$TyDescr_Int256_Prim_17" = global %"$TyDescrTy_PrimTyp_4" { i32 0, i32 3 }
@"$TyDescr_Int256_18" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Int256_Prim_17" to i8*) }
@"$TyDescr_Uint256_Prim_19" = global %"$TyDescrTy_PrimTyp_4" { i32 1, i32 3 }
@"$TyDescr_Uint256_20" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Uint256_Prim_19" to i8*) }
@"$TyDescr_String_Prim_21" = global %"$TyDescrTy_PrimTyp_4" { i32 2, i32 0 }
@"$TyDescr_String_22" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_String_Prim_21" to i8*) }
@"$TyDescr_Bnum_Prim_23" = global %"$TyDescrTy_PrimTyp_4" { i32 3, i32 0 }
@"$TyDescr_Bnum_24" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bnum_Prim_23" to i8*) }
@"$TyDescr_Message_Prim_25" = global %"$TyDescrTy_PrimTyp_4" { i32 4, i32 0 }
@"$TyDescr_Message_26" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Message_Prim_25" to i8*) }
@"$TyDescr_Event_Prim_27" = global %"$TyDescrTy_PrimTyp_4" { i32 5, i32 0 }
@"$TyDescr_Event_28" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Event_Prim_27" to i8*) }
@"$TyDescr_Exception_Prim_29" = global %"$TyDescrTy_PrimTyp_4" { i32 6, i32 0 }
@"$TyDescr_Exception_30" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Exception_Prim_29" to i8*) }
@"$TyDescr_Bystr_Prim_31" = global %"$TyDescrTy_PrimTyp_4" { i32 7, i32 0 }
@"$TyDescr_Bystr_32" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_4"* @"$TyDescr_Bystr_Prim_31" to i8*) }

define internal void @"$fundef_2"(%"$$fundef_2_env_37"* %0, %Uint256* %1, %Uint256* %2) {
entry:
  %a = load %Uint256, %Uint256* %2, align 8
  %"$retval_3" = alloca %Uint256, align 8
  %"$gasrem_38" = load i64, i64* @_gasrem, align 8
  %"$gascmp_39" = icmp ugt i64 1, %"$gasrem_38"
  br i1 %"$gascmp_39", label %"$out_of_gas_40", label %"$have_gas_41"

"$out_of_gas_40":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_41"

"$have_gas_41":                                   ; preds = %"$out_of_gas_40", %entry
  %"$consume_42" = sub i64 %"$gasrem_38", 1
  store i64 %"$consume_42", i64* @_gasrem, align 8
  store %Uint256 %a, %Uint256* %"$retval_3", align 8
  %"$$retval_3_43" = load %Uint256, %Uint256* %"$retval_3", align 8
  store %Uint256 %"$$retval_3_43", %Uint256* %1, align 8
  ret void
}

declare void @_out_of_gas()

define void @_init_libs() {
entry:
  ret void
}

define internal void @_scilla_expr_fun(i8* %0, %Uint256* %1) {
entry:
  %"$expr_1" = alloca %Uint256, align 8
  %"$gasrem_44" = load i64, i64* @_gasrem, align 8
  %"$gascmp_45" = icmp ugt i64 1, %"$gasrem_44"
  br i1 %"$gascmp_45", label %"$out_of_gas_46", label %"$have_gas_47"

"$out_of_gas_46":                                 ; preds = %entry
  call void @_out_of_gas()
  br label %"$have_gas_47"

"$have_gas_47":                                   ; preds = %"$out_of_gas_46", %entry
  %"$consume_48" = sub i64 %"$gasrem_44", 1
  store i64 %"$consume_48", i64* @_gasrem, align 8
  %f = alloca { void (i8*, %Uint256*, %Uint256*)*, i8* }, align 8
  %"$gasrem_49" = load i64, i64* @_gasrem, align 8
  %"$gascmp_50" = icmp ugt i64 1, %"$gasrem_49"
  br i1 %"$gascmp_50", label %"$out_of_gas_51", label %"$have_gas_52"

"$out_of_gas_51":                                 ; preds = %"$have_gas_47"
  call void @_out_of_gas()
  br label %"$have_gas_52"

"$have_gas_52":                                   ; preds = %"$out_of_gas_51", %"$have_gas_47"
  %"$consume_53" = sub i64 %"$gasrem_49", 1
  store i64 %"$consume_53", i64* @_gasrem, align 8
  store { void (i8*, %Uint256*, %Uint256*)*, i8* } { void (i8*, %Uint256*, %Uint256*)* bitcast (void (%"$$fundef_2_env_37"*, %Uint256*, %Uint256*)* @"$fundef_2" to void (i8*, %Uint256*, %Uint256*)*), i8* null }, { void (i8*, %Uint256*, %Uint256*)*, i8* }* %f, align 8
  %"$gasrem_57" = load i64, i64* @_gasrem, align 8
  %"$gascmp_58" = icmp ugt i64 1, %"$gasrem_57"
  br i1 %"$gascmp_58", label %"$out_of_gas_59", label %"$have_gas_60"

"$out_of_gas_59":                                 ; preds = %"$have_gas_52"
  call void @_out_of_gas()
  br label %"$have_gas_60"

"$have_gas_60":                                   ; preds = %"$out_of_gas_59", %"$have_gas_52"
  %"$consume_61" = sub i64 %"$gasrem_57", 1
  store i64 %"$consume_61", i64* @_gasrem, align 8
  %i = alloca %Uint256, align 8
  %"$gasrem_62" = load i64, i64* @_gasrem, align 8
  %"$gascmp_63" = icmp ugt i64 1, %"$gasrem_62"
  br i1 %"$gascmp_63", label %"$out_of_gas_64", label %"$have_gas_65"

"$out_of_gas_64":                                 ; preds = %"$have_gas_60"
  call void @_out_of_gas()
  br label %"$have_gas_65"

"$have_gas_65":                                   ; preds = %"$out_of_gas_64", %"$have_gas_60"
  %"$consume_66" = sub i64 %"$gasrem_62", 1
  store i64 %"$consume_66", i64* @_gasrem, align 8
  store %Uint256 zeroinitializer, %Uint256* %i, align 8
  %"$gasrem_67" = load i64, i64* @_gasrem, align 8
  %"$gascmp_68" = icmp ugt i64 1, %"$gasrem_67"
  br i1 %"$gascmp_68", label %"$out_of_gas_69", label %"$have_gas_70"

"$out_of_gas_69":                                 ; preds = %"$have_gas_65"
  call void @_out_of_gas()
  br label %"$have_gas_70"

"$have_gas_70":                                   ; preds = %"$out_of_gas_69", %"$have_gas_65"
  %"$consume_71" = sub i64 %"$gasrem_67", 1
  store i64 %"$consume_71", i64* @_gasrem, align 8
  %"$f_0" = alloca %Uint256, align 8
  %"$f_72" = load { void (i8*, %Uint256*, %Uint256*)*, i8* }, { void (i8*, %Uint256*, %Uint256*)*, i8* }* %f, align 8
  %"$f_fptr_73" = extractvalue { void (i8*, %Uint256*, %Uint256*)*, i8* } %"$f_72", 0
  %"$f_envptr_74" = extractvalue { void (i8*, %Uint256*, %Uint256*)*, i8* } %"$f_72", 1
  %"$f_i_75" = alloca %Uint256, align 8
  %"$i_76" = load %Uint256, %Uint256* %i, align 8
  store %Uint256 %"$i_76", %Uint256* %"$f_i_75", align 8
  %"$f_retalloca_77" = alloca %Uint256, align 8
  call void %"$f_fptr_73"(i8* %"$f_envptr_74", %Uint256* %"$f_retalloca_77", %Uint256* %"$f_i_75")
  %"$f_ret_78" = load %Uint256, %Uint256* %"$f_retalloca_77", align 8
  store %Uint256 %"$f_ret_78", %Uint256* %"$f_0", align 8
  %"$$f_0_79" = load %Uint256, %Uint256* %"$f_0", align 8
  store %Uint256 %"$$f_0_79", %Uint256* %"$expr_1", align 8
  %"$$expr_1_80" = load %Uint256, %Uint256* %"$expr_1", align 8
  store %Uint256 %"$$expr_1_80", %Uint256* %1, align 8
  ret void
}

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$mainval_81" = alloca %Uint256, align 8
  %"$memvoidcast_82" = bitcast %Uint256* %"$mainval_81" to i8*
  call void @_scilla_expr_fun(i8* null, %Uint256* %"$mainval_81")
  call void @_print_scilla_val(%_TyDescrTy_Typ* @"$TyDescr_Uint256_20", i8* %"$memvoidcast_82")
  ret void
}
