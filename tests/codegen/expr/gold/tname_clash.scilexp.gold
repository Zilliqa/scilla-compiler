Instantiating at (codegen/expr/tname_clash.scilexp,2,3) with type: Int32
Instantiating at (codegen/expr/tname_clash.scilexp,3,3) with type: Int32
Instantiating at (codegen/expr/tname_clash.scilexp,3,3) with type: Int64
Instantiating at (codegen/expr/tname_clash.scilexp,2,3) with type: Int64
Instantiating at (codegen/expr/tname_clash.scilexp,3,3) with type: Int32
Instantiating at (codegen/expr/tname_clash.scilexp,3,3) with type: Int64
Instantiating at (codegen/expr/tname_clash.scilexp,10,3) with type: Int32
Instantiating at (codegen/expr/tname_clash.scilexp,10,3) with type: Int64
Closure converted AST:
fundef (_fundef_1 : () -> forall 'B. Int32 -> 'B -> Pair (Int32) ('B)) ()
environment: ()
body:
  (_retval_2 : forall 'B. Int32 -> 'B -> Pair (Int32) ('B)) = [Int32 -> (_fundef_3 : () -> Int32 -> Int32 -> Pair (Int32) (Int32)); Int64 -> (_fundef_9 : () -> Int32 -> Int64 -> Pair (Int32) (Int64))]
  ret (_retval_2 : forall 'B. Int32 -> 'B -> Pair (Int32) ('B))

fundef (_fundef_3 : () -> Int32 -> Int32 -> Pair (Int32) (Int32)) ()
environment: ()
body:
  (_retval_4 : Int32 -> Int32 -> Pair (Int32) (Int32)) = [(_fundef_5 : Int32 -> Int32 -> Pair (Int32) (Int32))]
  ret (_retval_4 : Int32 -> Int32 -> Pair (Int32) (Int32))

fundef (_fundef_5 : Int32 -> Int32 -> Pair (Int32) (Int32)) ((a : Int32) : Int32)
environment: ()
body:
  [_fundef_7]((a : Int32)) <- (a : Int32)
  (_retval_6 : Int32 -> Pair (Int32) (Int32)) = [(_fundef_7 : Int32 -> Pair (Int32) (Int32))]
  ret (_retval_6 : Int32 -> Pair (Int32) (Int32))

fundef (_fundef_7 : Int32 -> Pair (Int32) (Int32)) ((b : Int32) : Int32)
environment: ((a : Int32) : Int32)
body:
  (a : Int32) <- [_fundef_7]((a : Int32))
  (_retval_8 : Pair (Int32) (Int32)) = Pair { Int32 Int32 }(a : Int32) (b : Int32)
  ret (_retval_8 : Pair (Int32) (Int32))

fundef (_fundef_9 : () -> Int32 -> Int64 -> Pair (Int32) (Int64)) ()
environment: ()
body:
  (_retval_10 : Int32 -> Int64 -> Pair (Int32) (Int64)) = [(_fundef_11 : Int32 -> Int64 -> Pair (Int32) (Int64))]
  ret (_retval_10 : Int32 -> Int64 -> Pair (Int32) (Int64))

fundef (_fundef_11 : Int32 -> Int64 -> Pair (Int32) (Int64)) ((a : Int32) : Int32)
environment: ()
body:
  [_fundef_13]((a : Int32)) <- (a : Int32)
  (_retval_12 : Int64 -> Pair (Int32) (Int64)) = [(_fundef_13 : Int64 -> Pair (Int32) (Int64))]
  ret (_retval_12 : Int64 -> Pair (Int32) (Int64))

fundef (_fundef_13 : Int64 -> Pair (Int32) (Int64)) ((b : Int64) : Int64)
environment: ((a : Int32) : Int32)
body:
  (a : Int32) <- [_fundef_13]((a : Int32))
  (_retval_14 : Pair (Int32) (Int64)) = Pair { Int32 Int64 }(a : Int32) (b : Int64)
  ret (_retval_14 : Pair (Int32) (Int64))

fundef (_fundef_15 : () -> forall 'B. Int64 -> 'B -> Pair (Int64) ('B)) ()
environment: ()
body:
  (_retval_16 : forall 'B. Int64 -> 'B -> Pair (Int64) ('B)) = [Int32 -> (_fundef_17 : () -> Int64 -> Int32 -> Pair (Int64) (Int32)); Int64 -> (_fundef_23 : () -> Int64 -> Int64 -> Pair (Int64) (Int64))]
  ret (_retval_16 : forall 'B. Int64 -> 'B -> Pair (Int64) ('B))

fundef (_fundef_17 : () -> Int64 -> Int32 -> Pair (Int64) (Int32)) ()
environment: ()
body:
  (_retval_18 : Int64 -> Int32 -> Pair (Int64) (Int32)) = [(_fundef_19 : Int64 -> Int32 -> Pair (Int64) (Int32))]
  ret (_retval_18 : Int64 -> Int32 -> Pair (Int64) (Int32))

fundef (_fundef_19 : Int64 -> Int32 -> Pair (Int64) (Int32)) ((a : Int64) : Int64)
environment: ()
body:
  [_fundef_21]((a : Int64)) <- (a : Int64)
  (_retval_20 : Int32 -> Pair (Int64) (Int32)) = [(_fundef_21 : Int32 -> Pair (Int64) (Int32))]
  ret (_retval_20 : Int32 -> Pair (Int64) (Int32))

fundef (_fundef_21 : Int32 -> Pair (Int64) (Int32)) ((b : Int32) : Int32)
environment: ((a : Int64) : Int64)
body:
  (a : Int64) <- [_fundef_21]((a : Int64))
  (_retval_22 : Pair (Int64) (Int32)) = Pair { Int64 Int32 }(a : Int64) (b : Int32)
  ret (_retval_22 : Pair (Int64) (Int32))

fundef (_fundef_23 : () -> Int64 -> Int64 -> Pair (Int64) (Int64)) ()
environment: ()
body:
  (_retval_24 : Int64 -> Int64 -> Pair (Int64) (Int64)) = [(_fundef_25 : Int64 -> Int64 -> Pair (Int64) (Int64))]
  ret (_retval_24 : Int64 -> Int64 -> Pair (Int64) (Int64))

fundef (_fundef_25 : Int64 -> Int64 -> Pair (Int64) (Int64)) ((a : Int64) : Int64)
environment: ()
body:
  [_fundef_27]((a : Int64)) <- (a : Int64)
  (_retval_26 : Int64 -> Pair (Int64) (Int64)) = [(_fundef_27 : Int64 -> Pair (Int64) (Int64))]
  ret (_retval_26 : Int64 -> Pair (Int64) (Int64))

fundef (_fundef_27 : Int64 -> Pair (Int64) (Int64)) ((b : Int64) : Int64)
environment: ((a : Int64) : Int64)
body:
  (a : Int64) <- [_fundef_27]((a : Int64))
  (_retval_28 : Pair (Int64) (Int64)) = Pair { Int64 Int64 }(a : Int64) (b : Int64)
  ret (_retval_28 : Pair (Int64) (Int64))

fundef (_fundef_29 : () -> forall 'B1. Int32 -> 'B1 -> Pair (Int32) ('B1)) ()
environment: ((tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B))
body:
  (tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) <- [_fundef_29]((tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)))
  (_retval_30 : forall 'B1. Int32 -> 'B1 -> Pair (Int32) ('B1)) = (tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) Int32
  ret (_retval_30 : forall 'B1. Int32 -> 'B1 -> Pair (Int32) ('B1))

fundef (_fundef_31 : () -> forall 'B1. Int64 -> 'B1 -> Pair (Int64) ('B1)) ()
environment: ((tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B))
body:
  (tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) <- [_fundef_31]((tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)))
  (_retval_32 : forall 'B1. Int64 -> 'B1 -> Pair (Int64) ('B1)) = (tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) Int64
  ret (_retval_32 : forall 'B1. Int64 -> 'B1 -> Pair (Int64) ('B1))

expr_body:
  (tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B)) = [Int32 -> (_fundef_1 : () -> forall 'B. Int32 -> 'B -> Pair (Int32) ('B)); Int64 -> (_fundef_15 : () -> forall 'B. Int64 -> 'B -> Pair (Int64) ('B))]
  [_fundef_29]((tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B))) <- (tf : forall 'A. forall 'B. 'A -> 'B -> Pair ('A) ('B))
  (tf2 : forall 'B. forall 'B1. 'B -> 'B1 -> Pair ('B) ('B1)) = [Int32 -> (_fundef_29 : () -> forall 'B1. Int32 -> 'B1 -> Pair (Int32) ('B1)); Int64 -> (_fundef_31 : () -> forall 'B1. Int64 -> 'B1 -> Pair (Int64) ('B1))]
  (_expr_0 : Int32 -> Int64 -> Pair (Int32) (Int64)) = (tf2 : forall 'B. forall 'B1. 'B -> 'B1 -> Pair ('B) ('B1)) Int32 Int64
