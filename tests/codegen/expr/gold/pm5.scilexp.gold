Closure converted AST:
fundef ($fundef_4 : [Option (Option (Int32))] -> Int32) ((o : Option (Option (Int32))) : Option (Option (Int32)))
environment: ((x : Int32) : Int32 , (y : Int32) : Int32)
body:
  (x : Int32) <- [($fundef_4 : [Option (Option (Int32))] -> Int32)]((x : Int32))
  (y : Int32) <- [($fundef_4 : [Option (Option (Int32))] -> Int32)]((y : Int32))
  decl ($retval_5 : Int32)
  match (o : Option (Option (Int32))) with
  | Some ($o_1 : Option (Int32)) =>
    match ($o_1 : Option (Int32)) with
    | None =>
      ($retval_5 : Int32) = (y : Int32)
    | _ =>
      jump ($joinp_2 : Int32)
    join ($joinp_2 : Int32) =>
      ($retval_5 : Int32) = (x : Int32)
  | _ =>
    jump ($joinp_0 : Int32)
  join ($joinp_0 : Int32) =>
    ($retval_5 : Int32) = (x : Int32)
  ret ($retval_5 : Int32)

expr_body:
  decl ($expr_3 : [Option (Option (Int32))] -> Int32)
  decl (x : Int32)
  (x : Int32) = (Int32 42)
  decl (y : Int32)
  (y : Int32) = (Int32 41)
  decl (f : [Option (Option (Int32))] -> Int32)
  allocate_closure_env ($fundef_4 : [Option (Option (Int32))] -> Int32)
  [($fundef_4 : [Option (Option (Int32))] -> Int32)]((x : Int32)) <- (x : Int32)
  [($fundef_4 : [Option (Option (Int32))] -> Int32)]((y : Int32)) <- (y : Int32)
  (f : [Option (Option (Int32))] -> Int32) = [($fundef_4 : [Option (Option (Int32))] -> Int32)]
  ($expr_3 : [Option (Option (Int32))] -> Int32) = (f : [Option (Option (Int32))] -> Int32)
  ret ($expr_3 : [Option (Option (Int32))] -> Int32)

Specialized types:
ADTs:
Option:
  Int32
  Option (Int32)
Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_6" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_28" = type { { i8*, i32 }, i32, i32, %"$TyDescrTy_ADTTyp_Specl_27"** }
%"$TyDescrTy_ADTTyp_Specl_27" = type { i32, %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_29"**, %"$TyDescrTy_ADTTyp_28"* }
%"$TyDescrTy_ADTTyp_Constr_29" = type { { i8*, i32 }, i32, %_TyDescrTy_Typ** }
%TyDescrString = type { i8*, i32 }
%_Int32 = type { i32 }
%"$$fundef_4_env_50" = type { %_Int32, %_Int32 }
%"Option_Option_(Int32)" = type { i8, %"Some_Option_(Int32)"*, %"None_Option_(Int32)"* }
%"Some_Option_(Int32)" = type <{ i8, %Option_Int32* }>
%Option_Int32 = type { i8, %Some_Int32*, %None_Int32* }
%Some_Int32 = type <{ i8, %_Int32 }>
%None_Int32 = type <{ i8 }>
%"None_Option_(Int32)" = type <{ i8 }>

@"$TyDescr_Int32_Prim_7" = global %"$TyDescrTy_PrimTyp_6" zeroinitializer
@"$TyDescr_Int32_8" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int32_Prim_7" }
@"$TyDescr_Uint32_Prim_9" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 0 }
@"$TyDescr_Uint32_10" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint32_Prim_9" }
@"$TyDescr_Int64_Prim_11" = global %"$TyDescrTy_PrimTyp_6" { i32 0, i32 1 }
@"$TyDescr_Int64_12" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int64_Prim_11" }
@"$TyDescr_Uint64_Prim_13" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 1 }
@"$TyDescr_Uint64_14" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint64_Prim_13" }
@"$TyDescr_Int128_Prim_15" = global %"$TyDescrTy_PrimTyp_6" { i32 0, i32 2 }
@"$TyDescr_Int128_16" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int128_Prim_15" }
@"$TyDescr_Uint128_Prim_17" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 2 }
@"$TyDescr_Uint128_18" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint128_Prim_17" }
@"$TyDescr_Int256_Prim_19" = global %"$TyDescrTy_PrimTyp_6" { i32 0, i32 3 }
@"$TyDescr_Int256_20" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int256_Prim_19" }
@"$TyDescr_Uint256_Prim_21" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 3 }
@"$TyDescr_Uint256_22" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint256_Prim_21" }
@"$TyDescr_String_Prim_23" = global %"$TyDescrTy_PrimTyp_6" { i32 2, i32 0 }
@"$TyDescr_String_24" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_String_Prim_23" }
@"$TyDescr_Bystr_Prim_25" = global %"$TyDescrTy_PrimTyp_6" { i32 7, i32 0 }
@"$TyDescr_Bystr_26" = global %_TyDescrTy_Typ { i32 0, %"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Bystr_Prim_25" }
@"$TyDescr_ADT_Option_Int32_30" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, %"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Int32_ADTTyp_Specl_40" }
@"$TyDescr_ADT_Option_Option_(Int32)_31" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, %"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_47" }
@"$TyDescr_Option_ADTTyp_33" = unnamed_addr constant %"$TyDescrTy_ADTTyp_28" { %TyDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$TyDescr_ADT_Option_49", i32 0, i32 0), i32 6 }, i32 2, i32 2, %"$TyDescrTy_ADTTyp_Specl_27"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Specl_27"*], [2 x %"$TyDescrTy_ADTTyp_Specl_27"*]* @"$TyDescr_Option_ADTTyp_m_specls_48", i32 0, i32 0) }
@"$TyDescr_Option_Some_Int32_Constr_m_args_34" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_8"]
@"$TyDescr_ADT_Some_35" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_None_Int32_Constr_m_args_36" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_37" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_38" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_29"*] [%"$TyDescrTy_ADTTyp_Constr_29"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_35", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Int32_Constr_m_args_34", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_29"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_37", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Int32_Constr_m_args_36", i32 0, i32 0) }]
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_39" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_8"]
@"$TyDescr_Option_Int32_ADTTyp_Specl_40" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_27" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_39", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_29"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_29"*], [2 x %"$TyDescrTy_ADTTyp_Constr_29"*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_38", i32 0, i32 0), %"$TyDescrTy_ADTTyp_28"* @"$TyDescr_Option_ADTTyp_33" }
@"$TyDescr_Option_Some_Option_(Int32)_Constr_m_args_41" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_30"]
@"$TyDescr_ADT_Some_42" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_None_Option_(Int32)_Constr_m_args_43" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_44" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_constrs_45" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_29"*] [%"$TyDescrTy_ADTTyp_Constr_29"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_42", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Option_(Int32)_Constr_m_args_41", i32 0, i32 0) }, %"$TyDescrTy_ADTTyp_Constr_29"* { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_44", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Option_(Int32)_Constr_m_args_43", i32 0, i32 0) }]
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_TArgs_46" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_30"]
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_47" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_27" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_TArgs_46", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_29"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_29"*], [2 x %"$TyDescrTy_ADTTyp_Constr_29"*]* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_constrs_45", i32 0, i32 0), %"$TyDescrTy_ADTTyp_28"* @"$TyDescr_Option_ADTTyp_33" }
@"$TyDescr_Option_ADTTyp_m_specls_48" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Specl_27"*] [%"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Int32_ADTTyp_Specl_40", %"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_47"]
@"$TyDescr_ADT_Option_49" = unnamed_addr constant [6 x i8] c"Option"

define %_Int32 @"$fundef_4"(%"$$fundef_4_env_50"*, %"Option_Option_(Int32)"*) {
entry:
  %"$$fundef_4_env_x_51" = getelementptr inbounds %"$$fundef_4_env_50", %"$$fundef_4_env_50"* %0, i32 0, i32 0
  %"$x_envload_52" = load %_Int32, %_Int32* %"$$fundef_4_env_x_51"
  %x = alloca %_Int32
  store %_Int32 %"$x_envload_52", %_Int32* %x
  %"$$fundef_4_env_y_53" = getelementptr inbounds %"$$fundef_4_env_50", %"$$fundef_4_env_50"* %0, i32 0, i32 1
  %"$y_envload_54" = load %_Int32, %_Int32* %"$$fundef_4_env_y_53"
  %y = alloca %_Int32
  store %_Int32 %"$y_envload_54", %_Int32* %y
  %"$retval_5" = alloca %_Int32
  %"$o_tag_57" = getelementptr inbounds %"Option_Option_(Int32)", %"Option_Option_(Int32)"* %1, i32 0, i32 0
  %"$o_tag_58" = load i8, i8* %"$o_tag_57"
  switch i8 %"$o_tag_58", label %"$default_59" [
    i8 0, label %"$Some_60"
  ]

"$Some_60":                                       ; preds = %entry
  %"$o_61" = bitcast %"Option_Option_(Int32)"* %1 to %"Some_Option_(Int32)"*
  %"$$o_1_gep_62" = getelementptr inbounds %"Some_Option_(Int32)", %"Some_Option_(Int32)"* %"$o_61", i32 0, i32 1
  %"$$o_1_load_63" = load %Option_Int32*, %Option_Int32** %"$$o_1_gep_62"
  %"$o_1" = alloca %Option_Int32*
  store %Option_Int32* %"$$o_1_load_63", %Option_Int32** %"$o_1"
  %"$$o_1_66" = load %Option_Int32*, %Option_Int32** %"$o_1"
  %"$$o_1_tag_67" = getelementptr inbounds %Option_Int32, %Option_Int32* %"$$o_1_66", i32 0, i32 0
  %"$$o_1_tag_68" = load i8, i8* %"$$o_1_tag_67"
  switch i8 %"$$o_1_tag_68", label %"$default_69" [
    i8 1, label %"$None_70"
  ]

"$None_70":                                       ; preds = %"$Some_60"
  %"$$o_1_71" = bitcast %Option_Int32* %"$$o_1_66" to %None_Int32*
  %"$y_72" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_72", %_Int32* %"$retval_5"
  br label %"$matchsucc_64"

"$default_69":                                    ; preds = %"$Some_60"
  br label %"$joinp_2"

"$joinp_2":                                       ; preds = %"$default_69"
  %"$x_65" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_65", %_Int32* %"$retval_5"
  br label %"$matchsucc_64"

"$matchsucc_64":                                  ; preds = %"$None_70", %"$joinp_2"
  br label %"$matchsucc_55"

"$default_59":                                    ; preds = %entry
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_59"
  %"$x_56" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_56", %_Int32* %"$retval_5"
  br label %"$matchsucc_55"

"$matchsucc_55":                                  ; preds = %"$matchsucc_64", %"$joinp_0"
  %"$$retval_5_73" = load %_Int32, %_Int32* %"$retval_5"
  ret %_Int32 %"$$retval_5_73"
}

define { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } @"$scilla_expr_74"(i8*) {
entry:
  %"$expr_3" = alloca { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }
  %x = alloca %_Int32
  store %_Int32 { i32 42 }, %_Int32* %x
  %y = alloca %_Int32
  store %_Int32 { i32 41 }, %_Int32* %y
  %f = alloca { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %"$$fundef_4_envp_75" = bitcast i8* %malloccall to %"$$fundef_4_env_50"*
  %"$$fundef_4_env_voidp_77" = bitcast %"$$fundef_4_env_50"* %"$$fundef_4_envp_75" to i8*
  %"$$fundef_4_cloval_78" = insertvalue { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } { %_Int32 (i8*, %"Option_Option_(Int32)"*)* bitcast (%_Int32 (%"$$fundef_4_env_50"*, %"Option_Option_(Int32)"*)* @"$fundef_4" to %_Int32 (i8*, %"Option_Option_(Int32)"*)*), i8* undef }, i8* %"$$fundef_4_env_voidp_77", 1
  %"$$fundef_4_envp_79" = extractvalue { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } %"$$fundef_4_cloval_78", 1
  %"$$fundef_4_envp_80" = bitcast i8* %"$$fundef_4_envp_79" to %"$$fundef_4_env_50"*
  %"$$fundef_4_env_x_81" = getelementptr inbounds %"$$fundef_4_env_50", %"$$fundef_4_env_50"* %"$$fundef_4_envp_80", i32 0, i32 0
  %"$x_82" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_82", %_Int32* %"$$fundef_4_env_x_81"
  %"$$fundef_4_envp_83" = extractvalue { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } %"$$fundef_4_cloval_78", 1
  %"$$fundef_4_envp_84" = bitcast i8* %"$$fundef_4_envp_83" to %"$$fundef_4_env_50"*
  %"$$fundef_4_env_y_85" = getelementptr inbounds %"$$fundef_4_env_50", %"$$fundef_4_env_50"* %"$$fundef_4_envp_84", i32 0, i32 1
  %"$y_86" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_86", %_Int32* %"$$fundef_4_env_y_85"
  store { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } %"$$fundef_4_cloval_78", { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }* %f
  %"$f_87" = load { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }, { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }* %f
  store { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } %"$f_87", { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }* %"$expr_3"
  %"$$expr_3_88" = load { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }, { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* }* %"$expr_3"
  ret { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } %"$$expr_3_88"
}

declare noalias i8* @malloc(i32)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$cloval_89" = call { %_Int32 (i8*, %"Option_Option_(Int32)"*)*, i8* } @"$scilla_expr_74"(i8* null)
  ret void
}

