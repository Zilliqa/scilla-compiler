Closure converted AST:
fundef ($fundef_4 : [Option (Option (Int32))] -> Int32) ((o : Option (Option (Int32))) : Option (Option (Int32)))
environment: ((x : Int32) : Int32 , (y : Int32) : Int32)
body:
  (x : Int32) <- [($fundef_4 : [Option (Option (Int32))] -> Int32)]((x : Int32))
  (y : Int32) <- [($fundef_4 : [Option (Option (Int32))] -> Int32)]((y : Int32))
  decl ($retval_5 : Int32)
  match (o : Option (Option (Int32))) with
  | Some ($o_1 : Option (Int32)) =>
    match ($o_1 : Option (Int32)) with
    | None =>
      ($retval_5 : Int32) = (y : Int32)
    | _ =>
      jump ($joinp_2 : Int32)
    join ($joinp_2 : Int32) =>
      ($retval_5 : Int32) = (x : Int32)
  | _ =>
    jump ($joinp_0 : Int32)
  join ($joinp_0 : Int32) =>
    ($retval_5 : Int32) = (x : Int32)
  ret ($retval_5 : Int32)

expr_body:
  decl ($expr_3 : [Option (Option (Int32))] -> Int32)
  decl (x : Int32)
  (x : Int32) = (Int32 42)
  decl (y : Int32)
  (y : Int32) = (Int32 41)
  decl (f : [Option (Option (Int32))] -> Int32)
  allocate_closure_env ($fundef_4 : [Option (Option (Int32))] -> Int32)
  [($fundef_4 : [Option (Option (Int32))] -> Int32)]((x : Int32)) <- (x : Int32)
  [($fundef_4 : [Option (Option (Int32))] -> Int32)]((y : Int32)) <- (y : Int32)
  (f : [Option (Option (Int32))] -> Int32) = [($fundef_4 : [Option (Option (Int32))] -> Int32)]
  ($expr_3 : [Option (Option (Int32))] -> Int32) = (f : [Option (Option (Int32))] -> Int32)
  ret ($expr_3 : [Option (Option (Int32))] -> Int32)

Specialized types:
ADTs:
Option:
  Int32
  Option (Int32)
Maps:
  
ByStrX: 

LLVM module:
; ModuleID = 'scilla_expr'
source_filename = "scilla_expr"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-linux-gnu"

%"$TyDescrTy_PrimTyp_6" = type { i32, i32 }
%_TyDescrTy_Typ = type { i32, i8* }
%"$TyDescrTy_ADTTyp_28" = type { %TyDescrString, i32, i32, %"$TyDescrTy_ADTTyp_Specl_27"** }
%TyDescrString = type { i8*, i32 }
%"$TyDescrTy_ADTTyp_Specl_27" = type { i32, %_TyDescrTy_Typ**, %"$TyDescrTy_ADTTyp_Constr_29"**, %"$TyDescrTy_ADTTyp_28"* }
%"$TyDescrTy_ADTTyp_Constr_29" = type { %TyDescrString, i32, %_TyDescrTy_Typ** }
%_Int32 = type { i32 }
%"$$fundef_4_env_54" = type { %_Int32, %_Int32 }
%"TName_Option_Option_(Int32)" = type { i8, %"CName_Some_Option_(Int32)"*, %"CName_None_Option_(Int32)"* }
%"CName_Some_Option_(Int32)" = type <{ i8, %TName_Option_Int32* }>
%TName_Option_Int32 = type { i8, %CName_Some_Int32*, %CName_None_Int32* }
%CName_Some_Int32 = type <{ i8, %_Int32 }>
%CName_None_Int32 = type <{ i8 }>
%"CName_None_Option_(Int32)" = type <{ i8 }>

@"$TyDescr_Int32_Prim_7" = global %"$TyDescrTy_PrimTyp_6" zeroinitializer
@"$TyDescr_Int32_8" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int32_Prim_7" to i8*) }
@"$TyDescr_Uint32_Prim_9" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 0 }
@"$TyDescr_Uint32_10" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint32_Prim_9" to i8*) }
@"$TyDescr_Int64_Prim_11" = global %"$TyDescrTy_PrimTyp_6" { i32 0, i32 1 }
@"$TyDescr_Int64_12" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int64_Prim_11" to i8*) }
@"$TyDescr_Uint64_Prim_13" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 1 }
@"$TyDescr_Uint64_14" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint64_Prim_13" to i8*) }
@"$TyDescr_Int128_Prim_15" = global %"$TyDescrTy_PrimTyp_6" { i32 0, i32 2 }
@"$TyDescr_Int128_16" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int128_Prim_15" to i8*) }
@"$TyDescr_Uint128_Prim_17" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 2 }
@"$TyDescr_Uint128_18" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint128_Prim_17" to i8*) }
@"$TyDescr_Int256_Prim_19" = global %"$TyDescrTy_PrimTyp_6" { i32 0, i32 3 }
@"$TyDescr_Int256_20" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Int256_Prim_19" to i8*) }
@"$TyDescr_Uint256_Prim_21" = global %"$TyDescrTy_PrimTyp_6" { i32 1, i32 3 }
@"$TyDescr_Uint256_22" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Uint256_Prim_21" to i8*) }
@"$TyDescr_String_Prim_23" = global %"$TyDescrTy_PrimTyp_6" { i32 2, i32 0 }
@"$TyDescr_String_24" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_String_Prim_23" to i8*) }
@"$TyDescr_Bystr_Prim_25" = global %"$TyDescrTy_PrimTyp_6" { i32 7, i32 0 }
@"$TyDescr_Bystr_26" = global %_TyDescrTy_Typ { i32 0, i8* bitcast (%"$TyDescrTy_PrimTyp_6"* @"$TyDescr_Bystr_Prim_25" to i8*) }
@"$TyDescr_ADT_Option_Int32_30" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Int32_ADTTyp_Specl_42" to i8*) }
@"$TyDescr_ADT_Option_Option_(Int32)_31" = unnamed_addr constant %_TyDescrTy_Typ { i32 1, i8* bitcast (%"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_51" to i8*) }
@"$TyDescr_Option_ADTTyp_33" = unnamed_addr constant %"$TyDescrTy_ADTTyp_28" { %TyDescrString { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @"$TyDescr_ADT_Option_53", i32 0, i32 0), i32 6 }, i32 2, i32 2, %"$TyDescrTy_ADTTyp_Specl_27"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Specl_27"*], [2 x %"$TyDescrTy_ADTTyp_Specl_27"*]* @"$TyDescr_Option_ADTTyp_m_specls_52", i32 0, i32 0) }
@"$TyDescr_Option_Some_Int32_Constr_m_args_34" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_8"]
@"$TyDescr_ADT_Some_35" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_Some_Int32_ADTTyp_Constr_36" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_29" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_35", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Int32_Constr_m_args_34", i32 0, i32 0) }
@"$TyDescr_Option_None_Int32_Constr_m_args_37" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_38" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_None_Int32_ADTTyp_Constr_39" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_29" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_38", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Int32_Constr_m_args_37", i32 0, i32 0) }
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_40" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_29"*] [%"$TyDescrTy_ADTTyp_Constr_29"* @"$TyDescr_Option_Some_Int32_ADTTyp_Constr_36", %"$TyDescrTy_ADTTyp_Constr_29"* @"$TyDescr_Option_None_Int32_ADTTyp_Constr_39"]
@"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_41" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_Int32_8"]
@"$TyDescr_Option_Int32_ADTTyp_Specl_42" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_27" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_TArgs_41", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_29"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_29"*], [2 x %"$TyDescrTy_ADTTyp_Constr_29"*]* @"$TyDescr_Option_Int32_ADTTyp_Specl_m_constrs_40", i32 0, i32 0), %"$TyDescrTy_ADTTyp_28"* @"$TyDescr_Option_ADTTyp_33" }
@"$TyDescr_Option_Some_Option_(Int32)_Constr_m_args_43" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_30"]
@"$TyDescr_ADT_Some_44" = unnamed_addr constant [4 x i8] c"Some"
@"$TyDescr_Option_Some_Option_(Int32)_ADTTyp_Constr_45" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_29" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_Some_44", i32 0, i32 0), i32 4 }, i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Some_Option_(Int32)_Constr_m_args_43", i32 0, i32 0) }
@"$TyDescr_Option_None_Option_(Int32)_Constr_m_args_46" = unnamed_addr constant [0 x %_TyDescrTy_Typ*] zeroinitializer
@"$TyDescr_ADT_None_47" = unnamed_addr constant [4 x i8] c"None"
@"$TyDescr_Option_None_Option_(Int32)_ADTTyp_Constr_48" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Constr_29" { %TyDescrString { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @"$TyDescr_ADT_None_47", i32 0, i32 0), i32 4 }, i32 0, %_TyDescrTy_Typ** getelementptr inbounds ([0 x %_TyDescrTy_Typ*], [0 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_None_Option_(Int32)_Constr_m_args_46", i32 0, i32 0) }
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_constrs_49" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Constr_29"*] [%"$TyDescrTy_ADTTyp_Constr_29"* @"$TyDescr_Option_Some_Option_(Int32)_ADTTyp_Constr_45", %"$TyDescrTy_ADTTyp_Constr_29"* @"$TyDescr_Option_None_Option_(Int32)_ADTTyp_Constr_48"]
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_TArgs_50" = unnamed_addr constant [1 x %_TyDescrTy_Typ*] [%_TyDescrTy_Typ* @"$TyDescr_ADT_Option_Int32_30"]
@"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_51" = unnamed_addr constant %"$TyDescrTy_ADTTyp_Specl_27" { i32 1, %_TyDescrTy_Typ** getelementptr inbounds ([1 x %_TyDescrTy_Typ*], [1 x %_TyDescrTy_Typ*]* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_TArgs_50", i32 0, i32 0), %"$TyDescrTy_ADTTyp_Constr_29"** getelementptr inbounds ([2 x %"$TyDescrTy_ADTTyp_Constr_29"*], [2 x %"$TyDescrTy_ADTTyp_Constr_29"*]* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_m_constrs_49", i32 0, i32 0), %"$TyDescrTy_ADTTyp_28"* @"$TyDescr_Option_ADTTyp_33" }
@"$TyDescr_Option_ADTTyp_m_specls_52" = unnamed_addr constant [2 x %"$TyDescrTy_ADTTyp_Specl_27"*] [%"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Int32_ADTTyp_Specl_42", %"$TyDescrTy_ADTTyp_Specl_27"* @"$TyDescr_Option_Option_(Int32)_ADTTyp_Specl_51"]
@"$TyDescr_ADT_Option_53" = unnamed_addr constant [6 x i8] c"Option"

define %_Int32 @"$fundef_4"(%"$$fundef_4_env_54"*, %"TName_Option_Option_(Int32)"*) {
entry:
  %"$$fundef_4_env_x_55" = getelementptr inbounds %"$$fundef_4_env_54", %"$$fundef_4_env_54"* %0, i32 0, i32 0
  %"$x_envload_56" = load %_Int32, %_Int32* %"$$fundef_4_env_x_55"
  %x = alloca %_Int32
  store %_Int32 %"$x_envload_56", %_Int32* %x
  %"$$fundef_4_env_y_57" = getelementptr inbounds %"$$fundef_4_env_54", %"$$fundef_4_env_54"* %0, i32 0, i32 1
  %"$y_envload_58" = load %_Int32, %_Int32* %"$$fundef_4_env_y_57"
  %y = alloca %_Int32
  store %_Int32 %"$y_envload_58", %_Int32* %y
  %"$retval_5" = alloca %_Int32
  %"$o_tag_61" = getelementptr inbounds %"TName_Option_Option_(Int32)", %"TName_Option_Option_(Int32)"* %1, i32 0, i32 0
  %"$o_tag_62" = load i8, i8* %"$o_tag_61"
  switch i8 %"$o_tag_62", label %"$default_63" [
    i8 0, label %"$Some_64"
  ]

"$Some_64":                                       ; preds = %entry
  %"$o_65" = bitcast %"TName_Option_Option_(Int32)"* %1 to %"CName_Some_Option_(Int32)"*
  %"$$o_1_gep_66" = getelementptr inbounds %"CName_Some_Option_(Int32)", %"CName_Some_Option_(Int32)"* %"$o_65", i32 0, i32 1
  %"$$o_1_load_67" = load %TName_Option_Int32*, %TName_Option_Int32** %"$$o_1_gep_66"
  %"$o_1" = alloca %TName_Option_Int32*
  store %TName_Option_Int32* %"$$o_1_load_67", %TName_Option_Int32** %"$o_1"
  %"$$o_1_70" = load %TName_Option_Int32*, %TName_Option_Int32** %"$o_1"
  %"$$o_1_tag_71" = getelementptr inbounds %TName_Option_Int32, %TName_Option_Int32* %"$$o_1_70", i32 0, i32 0
  %"$$o_1_tag_72" = load i8, i8* %"$$o_1_tag_71"
  switch i8 %"$$o_1_tag_72", label %"$default_73" [
    i8 1, label %"$None_74"
  ]

"$None_74":                                       ; preds = %"$Some_64"
  %"$$o_1_75" = bitcast %TName_Option_Int32* %"$$o_1_70" to %CName_None_Int32*
  %"$y_76" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_76", %_Int32* %"$retval_5"
  br label %"$matchsucc_68"

"$default_73":                                    ; preds = %"$Some_64"
  br label %"$joinp_2"

"$joinp_2":                                       ; preds = %"$default_73"
  %"$x_69" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_69", %_Int32* %"$retval_5"
  br label %"$matchsucc_68"

"$matchsucc_68":                                  ; preds = %"$None_74", %"$joinp_2"
  br label %"$matchsucc_59"

"$default_63":                                    ; preds = %entry
  br label %"$joinp_0"

"$joinp_0":                                       ; preds = %"$default_63"
  %"$x_60" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_60", %_Int32* %"$retval_5"
  br label %"$matchsucc_59"

"$matchsucc_59":                                  ; preds = %"$matchsucc_68", %"$joinp_0"
  %"$$retval_5_77" = load %_Int32, %_Int32* %"$retval_5"
  ret %_Int32 %"$$retval_5_77"
}

define { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } @"$scilla_expr_78"(i8*) {
entry:
  %"$expr_3" = alloca { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }
  %x = alloca %_Int32
  store %_Int32 { i32 42 }, %_Int32* %x
  %y = alloca %_Int32
  store %_Int32 { i32 41 }, %_Int32* %y
  %f = alloca { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }
  %malloccall = tail call i8* @malloc(i32 trunc (i64 mul nuw (i64 ptrtoint (i32* getelementptr (i32, i32* null, i32 1) to i64), i64 2) to i32))
  %"$$fundef_4_envp_79" = bitcast i8* %malloccall to %"$$fundef_4_env_54"*
  %"$$fundef_4_env_voidp_81" = bitcast %"$$fundef_4_env_54"* %"$$fundef_4_envp_79" to i8*
  %"$$fundef_4_cloval_82" = insertvalue { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)* bitcast (%_Int32 (%"$$fundef_4_env_54"*, %"TName_Option_Option_(Int32)"*)* @"$fundef_4" to %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*), i8* undef }, i8* %"$$fundef_4_env_voidp_81", 1
  %"$$fundef_4_envp_83" = extractvalue { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } %"$$fundef_4_cloval_82", 1
  %"$$fundef_4_envp_84" = bitcast i8* %"$$fundef_4_envp_83" to %"$$fundef_4_env_54"*
  %"$$fundef_4_env_x_85" = getelementptr inbounds %"$$fundef_4_env_54", %"$$fundef_4_env_54"* %"$$fundef_4_envp_84", i32 0, i32 0
  %"$x_86" = load %_Int32, %_Int32* %x
  store %_Int32 %"$x_86", %_Int32* %"$$fundef_4_env_x_85"
  %"$$fundef_4_envp_87" = extractvalue { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } %"$$fundef_4_cloval_82", 1
  %"$$fundef_4_envp_88" = bitcast i8* %"$$fundef_4_envp_87" to %"$$fundef_4_env_54"*
  %"$$fundef_4_env_y_89" = getelementptr inbounds %"$$fundef_4_env_54", %"$$fundef_4_env_54"* %"$$fundef_4_envp_88", i32 0, i32 1
  %"$y_90" = load %_Int32, %_Int32* %y
  store %_Int32 %"$y_90", %_Int32* %"$$fundef_4_env_y_89"
  store { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } %"$$fundef_4_cloval_82", { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }* %f
  %"$f_91" = load { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }, { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }* %f
  store { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } %"$f_91", { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }* %"$expr_3"
  %"$$expr_3_92" = load { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }, { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* }* %"$expr_3"
  ret { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } %"$$expr_3_92"
}

declare noalias i8* @malloc(i32)

declare void @_print_scilla_val(%_TyDescrTy_Typ*, i8*)

define void @scilla_main() {
entry:
  %"$cloval_93" = call { %_Int32 (i8*, %"TName_Option_Option_(Int32)"*)*, i8* } @"$scilla_expr_78"(i8* null)
  ret void
}

